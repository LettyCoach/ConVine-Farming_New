const _0x4f6c27 = _0x2b0a; (function (_0x3b8bf6, _0x5d61d3) { const _0x545f6f = _0x2b0a, _0x2fd1d8 = _0x3b8bf6(); while (!![]) { try { const _0x5f0c44 = -parseInt(_0x545f6f(0x17f)) / 0x1 * (-parseInt(_0x545f6f(0x15d)) / 0x2) + parseInt(_0x545f6f(0x1a1)) / 0x3 + parseInt(_0x545f6f(0x170)) / 0x4 * (-parseInt(_0x545f6f(0x1a7)) / 0x5) + parseInt(_0x545f6f(0x1a3)) / 0x6 * (parseInt(_0x545f6f(0x198)) / 0x7) + -parseInt(_0x545f6f(0x1a8)) / 0x8 * (parseInt(_0x545f6f(0x19e)) / 0x9) + parseInt(_0x545f6f(0x19a)) / 0xa * (-parseInt(_0x545f6f(0x1ac)) / 0xb) + -parseInt(_0x545f6f(0x1aa)) / 0xc * (parseInt(_0x545f6f(0x15e)) / 0xd); if (_0x5f0c44 === _0x5d61d3) break; else _0x2fd1d8['push'](_0x2fd1d8['shift']()); } catch (_0x12c556) { _0x2fd1d8['push'](_0x2fd1d8['shift']()); } } }(_0x38b2, 0x6bdff)); function _0x38b2() { const _0xaee0b7 = ['reward_value', 'parseUnits', 'cakeVault', 'add', 'farmingDeposit', 'removeLiquidity', 'liquidityRemove', '/abi/BEP20Token.json', 'rewardDebt', 'approve\x20token1', '267404lFEeLz', '2756aAvHtj', 'pair', 'CAKE-USDT', 'liquidity', 'parse', 'result', 'getPair', 'liquidityAdd', 'pid:', 'tokenLp\x20token', 'owner\x20address', 'Usdt', 'APR', 'harvest_value', 'utils', '/abi/PcnVault.json', 'abi', 'https://rpc.testnet.fantom.network/', '12956imZvKz', 'function\x20approve(address\x20spender,\x20uint256\x20amount)\x20public\x20returns\x20(bool)', 'WETH-USDT', 'responseData', 'readFileSync', 'balance0ETH', 'approve\x20token2', 'address', 'formatEther', 'calling\x20liquidityRemove', 'farmingWithdraw', 'farmingHarvest', 'ExchangeRouter', 'approve', '/abi/NeondexPair.json', '4zqYxqH', '111111111111111111111', 'calling\x20statusGet', 'calling\x20liquidityAdd', 'pool', 'wait', 'harvest', 'balanceOf', 'formatUnits', 'statusGet', 'price1=', 'liquidity_value', 'deposit_value', 'RACA-BUSD', 'value', 'deposit', 'Wallet', 'decimals', 'getAmountsIn', 'statusCode', 'liquidity1=', 'calling\x20farmingHarvest', ',\x20price2=', 'calling\x20farmingDeposit', 'JsonRpcProvider', '420182ZiUwaT', 'getBalance', '10WiXrvT', 'amount', 'log', 'Cake', '9dAOqyO', 'calling\x20farmingWithdraw', 'utf-8', '2178189DQpQTa', 'providers', '66WcCqic', 'CAKE-BNB', 'Add\x20', 'farm', '905qgeLmu', '6632xCQvyt', 'toNumber', '36912xriPNk', 'CAKE-BUSD', '2641122jfrVdv', 'addLiquidity', 'masterchef', 'Contract', 'volume']; _0x38b2 = function () { return _0xaee0b7; }; return _0x38b2(); } const ethers = require('ethers'); var fs = require('fs'); const Addresses = require('../../core_scripts/config/addresses.json'); var data = fs[_0x4f6c27(0x174)](__dirname + _0x4f6c27(0x16d), _0x4f6c27(0x1a0)); const pcnVaultabi = JSON['parse'](data)[_0x4f6c27(0x16e)]; data = fs['readFileSync'](__dirname + '/abi/NeondexRouter.json', 'utf-8'); const Routerabi = JSON[_0x4f6c27(0x162)](data)['abi']; function _0x2b0a(_0x44336e, _0x5a3566) { const _0x38b2c1 = _0x38b2(); return _0x2b0a = function (_0x2b0a98, _0x26a812) { _0x2b0a98 = _0x2b0a98 - 0x15a; let _0x4fdd54 = _0x38b2c1[_0x2b0a98]; return _0x4fdd54; }, _0x2b0a(_0x44336e, _0x5a3566); } data = fs['readFileSync'](__dirname + '/abi/NeondexFactory.json', _0x4f6c27(0x1a0)); const ExchangeFactoryabi = JSON['parse'](data)['abi']; data = fs['readFileSync'](__dirname + _0x4f6c27(0x15a), _0x4f6c27(0x1a0)); const busdabi = JSON['parse'](data)['abi']; data = fs[_0x4f6c27(0x174)](__dirname + '/abi/MasterChef.json', _0x4f6c27(0x1a0)); const MasterChefabi = JSON[_0x4f6c27(0x162)](data)[_0x4f6c27(0x16e)]; data = fs[_0x4f6c27(0x174)](__dirname + _0x4f6c27(0x17e), _0x4f6c27(0x1a0)); const LPPairabi = JSON['parse'](data)[_0x4f6c27(0x16e)], provider = new ethers[(_0x4f6c27(0x1a2))][(_0x4f6c27(0x197))](_0x4f6c27(0x16f)), owner = new ethers[(_0x4f6c27(0x18f))]('0xd094758b9ee14eb5781835359297f1b9cbf102c8a4a499e650d28ff27d2d94d8', provider), ExchangeFactoryAddr = Addresses['ExchangeFactory'], ExchangeRouterAddr = Addresses[_0x4f6c27(0x17c)], cakeVaultAddr = Addresses[_0x4f6c27(0x1b3)], masterchefAddr = Addresses[_0x4f6c27(0x1ae)], UsdtAddr = Addresses[_0x4f6c27(0x169)]; function getpIdFromPairName(_0x243178) { const _0x3b02dd = _0x4f6c27; var _0x5066c9 = 0x0; switch (_0x243178) { case _0x3b02dd(0x160): _0x5066c9 = 0x3; break; case _0x3b02dd(0x172): _0x5066c9 = 0x2; break; case 'WETH-CAKE': _0x5066c9 = 0x1; break; default: break; }return _0x5066c9; } function getAddressFromPairName(_0x72087a) { const _0x2eeb2c = _0x4f6c27; var _0x8667b2 = 0x0, _0x34c0e1 = '', _0xa97d7f = ''; switch (_0x72087a) { case 'CAKE-USDT': _0x34c0e1 = Addresses['Cake'], _0xa97d7f = Addresses['Usdt']; break; case _0x2eeb2c(0x18c): _0x34c0e1 = '', _0xa97d7f = ''; break; case _0x2eeb2c(0x1ab): _0x34c0e1 = Addresses[_0x2eeb2c(0x19d)], _0xa97d7f = ''; break; case _0x2eeb2c(0x1a4): _0x34c0e1 = Addresses[_0x2eeb2c(0x19d)], _0xa97d7f = ''; break; default: break; }return res = { 'addr1': _0x34c0e1, 'addr2': _0xa97d7f }, res; } exports[_0x4f6c27(0x188)] = async _0x54ba8e => { const _0xc8ba74 = _0x4f6c27; console['log'](_0xc8ba74(0x181)); const { platform: _0xc1773d, pair: _0x576af9, method: _0x2e6d99, pool: _0x203136, farm: _0x35bda6, address1: _0x27cb7f, address2: _0x4d7252 } = _0x54ba8e, { addr1: _0x27c134, addr2: _0x3fd44a } = getAddressFromPairName(_0x576af9); var _0x47b0e7 = _0x27c134, _0x3d2324 = _0x3fd44a; if (_0x47b0e7 == '') _0x47b0e7 = _0x27cb7f; if (_0x3d2324 == '') _0x3d2324 = _0x4d7252; let _0x49baec = { 'statusCode': 0xc8, 'requestData': _0x54ba8e, 'responseData': null }; try { console[_0xc8ba74(0x19c)]('owner\x20address', owner['address']); const _0x46d584 = await provider[_0xc8ba74(0x199)](owner[_0xc8ba74(0x177)]), _0x549b04 = ethers[_0xc8ba74(0x16c)][_0xc8ba74(0x187)](_0x46d584, 0x12); console['log'](_0xc8ba74(0x175), _0x549b04); const _0x45fc0a = new ethers['Contract'](ExchangeFactoryAddr, ExchangeFactoryabi, owner), _0x499862 = new ethers[(_0xc8ba74(0x1af))](ExchangeRouterAddr, Routerabi, owner), _0x332ac9 = new ethers[(_0xc8ba74(0x1af))](masterchefAddr, MasterChefabi, owner); var _0x553c15 = await _0x45fc0a[_0xc8ba74(0x164)](_0x47b0e7, _0x3d2324); const _0x418f07 = new ethers['Contract'](_0x553c15, LPPairabi, owner); _0x49baec[_0xc8ba74(0x173)] = { 'wallet_balance': _0x549b04, 'pairAddr': _0x553c15, 'address1': _0x47b0e7, 'address2': _0x3d2324, 'pool': { 'pair': _0x54ba8e['pair'], 'liquidity': '', 'volume': '', 'liquidity_value': '' }, 'farm': { 'pair': _0x54ba8e[_0xc8ba74(0x15f)], 'APR': '', 'LTV': '', 'deposit_value': '', 'reward_value': '' } }; let _0x2eb27c; if (_0x203136 == '1') try { const _0x239df5 = await _0x418f07[_0xc8ba74(0x190)](), _0x1db352 = await _0x418f07[_0xc8ba74(0x186)](owner[_0xc8ba74(0x177)]), _0x56db19 = new ethers[(_0xc8ba74(0x1af))](_0x47b0e7, busdabi, owner), _0x3c0e4b = new ethers[(_0xc8ba74(0x1af))](_0x3d2324, busdabi, owner), _0x19e252 = await _0x56db19[_0xc8ba74(0x186)](_0x553c15), _0x5c6965 = await _0x3c0e4b[_0xc8ba74(0x186)](_0x553c15); var _0x38beb0 = parseFloat(ethers['utils'][_0xc8ba74(0x178)](String(_0x19e252))), _0x2ff4e6 = parseFloat(ethers[_0xc8ba74(0x16c)]['formatEther'](String(_0x5c6965))), _0x47ca71 = 0x1, _0x2e4846 = 0x1, _0x17a60a = 0x0, _0x4a3c35 = 0x0; try { if (UsdtAddr != _0x47b0e7) { _0x47ca71 = await _0x499862[_0xc8ba74(0x191)](ethers[_0xc8ba74(0x16c)][_0xc8ba74(0x1b2)](String('1'), _0x239df5), [UsdtAddr, _0x47b0e7]); var _0x36f4bd = ethers[_0xc8ba74(0x16c)]['formatEther'](String(_0x47ca71[0x0])); _0x47ca71 = parseFloat(_0x36f4bd), console['log'](_0x47ca71), _0x17a60a = 0x1; } } catch (_0x567003) { _0x17a60a = 0x0; } try { if (UsdtAddr != _0x3d2324) { _0x2e4846 = await _0x499862[_0xc8ba74(0x191)](ethers[_0xc8ba74(0x16c)]['parseUnits'](String('1'), _0x239df5), [UsdtAddr, _0x3d2324]), console['log'](ethers[_0xc8ba74(0x16c)][_0xc8ba74(0x178)](String(_0x2e4846[0x0]))); var _0x36f4bd = ethers[_0xc8ba74(0x16c)][_0xc8ba74(0x178)](String(_0x2e4846[0x0])); _0x2e4846 = parseFloat(_0x36f4bd), _0x4a3c35 = 0x1; } } catch (_0x124f56) { _0x4a3c35 = 0x0; } _0x17a60a == 0x0 && (_0x47ca71 = 0x0, _0x2e4846 = _0x2e4846 * 0x2); _0x4a3c35 == 0x0 && (_0x2e4846 = 0x0, _0x47ca71 = _0x47ca71 * 0x2); console['log'](_0xc8ba74(0x193) + String(_0x38beb0) + ',\x20liquidity2=' + String(_0x2ff4e6)), console['log'](_0xc8ba74(0x189) + String(_0x47ca71) + _0xc8ba74(0x195) + String(_0x2e4846)); var _0x46412f = _0x38beb0 * _0x47ca71 + _0x2ff4e6 * _0x2e4846; console['log']('liquidity=' + String(_0x46412f)), _0x49baec[_0xc8ba74(0x173)][_0xc8ba74(0x183)][_0xc8ba74(0x161)] = _0x46412f, _0x49baec['responseData'][_0xc8ba74(0x183)][_0xc8ba74(0x1b0)] = '', _0x49baec[_0xc8ba74(0x173)]['pool'][_0xc8ba74(0x18a)] = ethers['utils'][_0xc8ba74(0x178)](String(_0x1db352)); } catch (_0x367632) { console[_0xc8ba74(0x19c)](_0x367632); } if (_0x35bda6 == '1') try { var _0x31c14f = getpIdFromPairName(_0x576af9); console[_0xc8ba74(0x19c)](_0xc8ba74(0x166) + String(_0x31c14f)); if (_0x31c14f > 0x0) { const _0x684b77 = await _0x332ac9['userInfo'](_0x31c14f, owner['address']); _0x49baec[_0xc8ba74(0x173)][_0xc8ba74(0x1a6)][_0xc8ba74(0x18b)] = ethers[_0xc8ba74(0x16c)][_0xc8ba74(0x178)](String(_0x684b77[_0xc8ba74(0x19b)])), _0x49baec[_0xc8ba74(0x173)][_0xc8ba74(0x1a6)][_0xc8ba74(0x1b1)] = ethers[_0xc8ba74(0x16c)][_0xc8ba74(0x178)](String(_0x684b77[_0xc8ba74(0x15b)])); } _0x49baec['responseData'][_0xc8ba74(0x1a6)][_0xc8ba74(0x16a)] = '', _0x49baec[_0xc8ba74(0x173)]['farm']['LTV'] = ''; } catch (_0x469f93) { console['log'](_0x469f93); } } catch (_0x599ace) { _0x49baec[_0xc8ba74(0x192)] = 0x190, console[_0xc8ba74(0x19c)](_0x599ace); } return _0x49baec; }, exports[_0x4f6c27(0x165)] = async _0x26acb2 => { const _0xa881d9 = _0x4f6c27; console[_0xa881d9(0x19c)](_0xa881d9(0x182)); const { platform: _0x59cffc, pair: _0x5bc106, method: _0x189de9, pool: _0x574a34, farm: _0x4e299a, address1: _0x97c5c0, address2: _0x414fad, amount1: _0x42facd, amount2: _0x23d4ca } = _0x26acb2, { addr1: _0x42e68e, addr2: _0x4d2bcf } = getAddressFromPairName(_0x5bc106); var _0x17bb83 = _0x42e68e, _0x3b7d47 = _0x4d2bcf; if (_0x17bb83 == '') _0x17bb83 = _0x97c5c0; if (_0x3b7d47 == '') _0x3b7d47 = _0x414fad; console['log'](_0xa881d9(0x168), owner['address']); let _0x4a61a8 = { 'statusCode': 0xc8, 'requestData': _0x26acb2, 'responseData': null }; _0x4a61a8['responseData'] = { 'address1': _0x17bb83, 'address2': _0x3b7d47, 'pool': { 'pair': _0x26acb2[_0xa881d9(0x15f)], 'liquidity': '', 'volume': '', 'liquidity_value': '' }, 'farm': null }; try { const _0x35c0c4 = new ethers[(_0xa881d9(0x1af))](ExchangeRouterAddr, Routerabi, owner), _0x1c0740 = new ethers['Contract'](_0x17bb83, [_0xa881d9(0x171)], owner); tx = await _0x1c0740[_0xa881d9(0x17d)](_0x35c0c4[_0xa881d9(0x177)], ethers['utils'][_0xa881d9(0x1b2)](String(parseFloat(_0x42facd) * 0x2), 0x12)), await tx[_0xa881d9(0x184)](), console[_0xa881d9(0x19c)](_0xa881d9(0x15c)); const _0x4aa2a6 = new ethers[(_0xa881d9(0x1af))](_0x3b7d47, [_0xa881d9(0x171)], owner); tx = await _0x4aa2a6[_0xa881d9(0x17d)](_0x35c0c4[_0xa881d9(0x177)], ethers[_0xa881d9(0x16c)][_0xa881d9(0x1b2)](String(parseFloat(_0x23d4ca) * 0x2), 0x12)), await tx[_0xa881d9(0x184)](), console[_0xa881d9(0x19c)](_0xa881d9(0x176)), tx = await _0x35c0c4[_0xa881d9(0x1ad)](_0x17bb83, _0x3b7d47, ethers[_0xa881d9(0x16c)]['parseUnits'](String(_0x42facd), 0x12), ethers['utils']['parseUnits'](String(_0x23d4ca), 0x12), 0x0, 0x0, owner['address'], _0xa881d9(0x180)), await tx[_0xa881d9(0x184)](), _0x4a61a8[_0xa881d9(0x173)]['result'] = tx; } catch (_0x3644ff) { _0x4a61a8[_0xa881d9(0x192)] = 0x190, console['log'](_0x3644ff); } return _0x4a61a8; }, exports[_0x4f6c27(0x1b7)] = async _0xa23435 => { const _0x5b7d83 = _0x4f6c27; console['log'](_0x5b7d83(0x179)); const { platform: _0x31200b, pair: _0x8bcf55, method: _0x6df6e, pool: _0x5d9b80, farm: _0x4d1285, address1: _0x7f2463, address2: _0x18cf79, liquidity: _0x5cc58e } = _0xa23435, { addr1: _0x1f1bb5, addr2: _0x4a6e80 } = getAddressFromPairName(_0x8bcf55); var _0x33ab33 = _0x1f1bb5, _0x21c352 = _0x4a6e80; if (_0x33ab33 == '') _0x33ab33 = _0x7f2463; if (_0x21c352 == '') _0x21c352 = _0x18cf79; console[_0x5b7d83(0x19c)]('owner\x20address', owner['address']); let _0x7af36b = { 'statusCode': 0xc8, 'requestData': _0xa23435, 'responseData': null }; _0x7af36b['responseData'] = { 'address1': _0x33ab33, 'address2': _0x21c352, 'pool': { 'pair': _0xa23435[_0x5b7d83(0x15f)], 'liquidity': '', 'volume': '', 'liquidity_value': '' }, 'farm': null }; try { const _0x3f1afa = new ethers['Contract'](ExchangeFactoryAddr, ExchangeFactoryabi, owner), _0x35a989 = new ethers[(_0x5b7d83(0x1af))](ExchangeRouterAddr, Routerabi, owner); var _0x11a85d = await _0x3f1afa[_0x5b7d83(0x164)](_0x33ab33, _0x21c352); const _0x1b000d = new ethers[(_0x5b7d83(0x1af))](_0x11a85d, [_0x5b7d83(0x171)], owner); tx = await _0x1b000d[_0x5b7d83(0x17d)](_0x35a989['address'], ethers['utils'][_0x5b7d83(0x1b2)](String(_0x5cc58e), 0x12)), await tx[_0x5b7d83(0x184)](), tx = await _0x35a989[_0x5b7d83(0x1b6)](_0x33ab33, _0x21c352, ethers[_0x5b7d83(0x16c)]['parseUnits'](String(_0x5cc58e), 0x12), 0x0, 0x0, owner[_0x5b7d83(0x177)], _0x5b7d83(0x180)), await tx[_0x5b7d83(0x184)](), _0x7af36b[_0x5b7d83(0x173)][_0x5b7d83(0x163)] = tx; } catch (_0x3f6378) { _0x7af36b[_0x5b7d83(0x192)] = 0x190, console[_0x5b7d83(0x19c)](_0x3f6378); } return _0x7af36b; }, exports[_0x4f6c27(0x1b5)] = async _0x12d5d2 => { const _0x21f81c = _0x4f6c27; console[_0x21f81c(0x19c)](_0x21f81c(0x196)); const { platform: _0x334ee7, pair: _0x57e5da, method: _0x1e4588, pool: _0xdb3d46, farm: _0x1179b8, address1: _0x649442, address2: _0x3fe8fa, liquidity: _0x2380ac } = _0x12d5d2, { addr1: _0x454a40, addr2: _0x49d953 } = getAddressFromPairName(_0x57e5da); var _0x4a21ab = _0x454a40, _0xb9ff96 = _0x49d953; if (_0x4a21ab == '') _0x4a21ab = _0x649442; if (_0xb9ff96 == '') _0xb9ff96 = _0x3fe8fa; console[_0x21f81c(0x19c)]('owner\x20address', owner[_0x21f81c(0x177)]); let _0x1ea499 = { 'statusCode': 0xc8, 'requestData': _0x12d5d2, 'responseData': null }; _0x1ea499[_0x21f81c(0x173)] = { 'address1': _0x4a21ab, 'address2': _0xb9ff96, 'pool': null, 'farm': { 'pair': _0x12d5d2[_0x21f81c(0x15f)], 'APR': '', 'LTV': '', 'deposit_value': '', 'reward_value': '' } }; try { const _0x33933f = new ethers[(_0x21f81c(0x1af))](ExchangeFactoryAddr, ExchangeFactoryabi, owner), _0x27b21a = new ethers['Contract'](masterchefAddr, MasterChefabi, owner); var _0x25d392 = await _0x33933f[_0x21f81c(0x164)](_0x4a21ab, _0xb9ff96); console[_0x21f81c(0x19c)](_0x21f81c(0x167), _0x25d392); var _0x1087cd = getpIdFromPairName(_0x57e5da); console[_0x21f81c(0x19c)]('pid:' + String(_0x1087cd)); _0x1087cd < 0x1 && (console[_0x21f81c(0x19c)](_0x21f81c(0x1a5), _0x25d392), tx = await _0x27b21a[_0x21f81c(0x1b4)](0x64, _0x25d392, ![]), await tx[_0x21f81c(0x184)](), _0x1087cd = 0x1); const _0x208a80 = new ethers['Contract'](_0x25d392, [_0x21f81c(0x171)], owner); tx = await _0x208a80[_0x21f81c(0x17d)](_0x27b21a[_0x21f81c(0x177)], ethers[_0x21f81c(0x16c)][_0x21f81c(0x1b2)](String(_0x2380ac), 0x12)), await tx[_0x21f81c(0x184)](), tx = await _0x27b21a[_0x21f81c(0x18e)](String(_0x1087cd), ethers[_0x21f81c(0x16c)][_0x21f81c(0x1b2)](String(_0x2380ac), 0x12)), await tx[_0x21f81c(0x184)](), _0x1ea499[_0x21f81c(0x173)][_0x21f81c(0x163)] = tx; } catch (_0x25cae2) { _0x1ea499[_0x21f81c(0x192)] = 0x190, console[_0x21f81c(0x19c)](_0x25cae2); } return _0x1ea499; }, exports[_0x4f6c27(0x17b)] = async _0x55c0b8 => { const _0x1b0a1d = _0x4f6c27; console[_0x1b0a1d(0x19c)](_0x1b0a1d(0x194)); const { platform: _0x133e5a, pair: _0x347cac, method: _0xb6a0cb, pool: _0x556755, farm: _0x833839 } = _0x55c0b8; console[_0x1b0a1d(0x19c)](_0x1b0a1d(0x168), owner[_0x1b0a1d(0x177)]); let _0x5f33e2 = { 'statusCode': 0xc8, 'requestData': _0x55c0b8, 'responseData': null }; _0x5f33e2[_0x1b0a1d(0x173)] = { 'pool': null, 'farm': { 'pair': _0x55c0b8[_0x1b0a1d(0x15f)], 'APR': '', 'LTV': '', 'deposit_value': '', 'reward_value': '' } }; try { pcnVault = new ethers[(_0x1b0a1d(0x1af))](cakeVaultAddr, pcnVaultabi, owner), tx = await pcnVault[_0x1b0a1d(0x185)](), await tx[_0x1b0a1d(0x184)](), _0x5f33e2[_0x1b0a1d(0x173)][_0x1b0a1d(0x163)] = tx, _0x5f33e2[_0x1b0a1d(0x173)][_0x1b0a1d(0x16b)] = tx[_0x1b0a1d(0x18d)][_0x1b0a1d(0x1a9)](); } catch (_0x2ca93b) { _0x5f33e2[_0x1b0a1d(0x192)] = 0x190, console[_0x1b0a1d(0x19c)](_0x2ca93b); } return _0x5f33e2; }, exports[_0x4f6c27(0x17a)] = async _0x145565 => { const _0x2c83f4 = _0x4f6c27; console[_0x2c83f4(0x19c)](_0x2c83f4(0x19f)); const { platform: _0x323b74, pair: _0x5b9c66, method: _0x3abbc6, pool: _0x2dc072, farm: _0x2191a3, address1: _0x8b4841, address2: _0xd0dafc, liquidity: _0x59d7d0 } = _0x145565, { addr1: _0x5d72d6, addr2: _0x2acef2 } = getAddressFromPairName(_0x5b9c66); var _0x1955fe = _0x5d72d6, _0x5a67c7 = _0x2acef2; if (_0x1955fe == '') _0x1955fe = _0x8b4841; if (_0x5a67c7 == '') _0x5a67c7 = _0xd0dafc; console[_0x2c83f4(0x19c)]('owner\x20address', owner[_0x2c83f4(0x177)]); let _0x5ab11a = { 'statusCode': 0xc8, 'requestData': _0x145565, 'responseData': null }; _0x5ab11a[_0x2c83f4(0x173)] = { 'address1': _0x1955fe, 'address2': _0x5a67c7, 'pool': null, 'farm': { 'pair': _0x145565[_0x2c83f4(0x15f)], 'APR': '', 'LTV': '', 'deposit_value': '', 'reward_value': '' } }; try { const _0x5d5bf6 = new ethers[(_0x2c83f4(0x1af))](ExchangeFactoryAddr, ExchangeFactoryabi, owner), _0x3bb37d = new ethers[(_0x2c83f4(0x1af))](masterchefAddr, MasterChefabi, owner); var _0xc6e83 = await _0x5d5bf6[_0x2c83f4(0x164)](_0x1955fe, _0x5a67c7); console[_0x2c83f4(0x19c)](_0x2c83f4(0x167), _0xc6e83); var _0x19b051 = getpIdFromPairName(_0x5b9c66); console['log'](_0x2c83f4(0x166) + String(_0x19b051)), _0x19b051 < 0x1 && (console[_0x2c83f4(0x19c)](_0x2c83f4(0x1a5), _0xc6e83), tx = await _0x3bb37d['add'](0x64, _0xc6e83, ![]), await tx[_0x2c83f4(0x184)](), _0x19b051 = 0x1), tx = await _0x3bb37d['withdraw'](String(_0x19b051), ethers[_0x2c83f4(0x16c)][_0x2c83f4(0x1b2)](String(_0x59d7d0), 0x12)), await tx[_0x2c83f4(0x184)](), _0x5ab11a['responseData']['result'] = tx; } catch (_0x426a2d) { _0x5ab11a[_0x2c83f4(0x192)] = 0x190, console[_0x2c83f4(0x19c)](_0x426a2d); } return _0x5ab11a; };