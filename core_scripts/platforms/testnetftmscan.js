const _0x3f0459 = _0x5286; (function (_0x2c505a, _0x1beca2) { const _0x48e707 = _0x5286, _0x3ec132 = _0x2c505a(); while (!![]) { try { const _0x5e92a6 = parseInt(_0x48e707(0x1e5)) / 0x1 * (parseInt(_0x48e707(0x1e7)) / 0x2) + -parseInt(_0x48e707(0x1d1)) / 0x3 * (-parseInt(_0x48e707(0x1c8)) / 0x4) + parseInt(_0x48e707(0x19d)) / 0x5 + parseInt(_0x48e707(0x196)) / 0x6 * (-parseInt(_0x48e707(0x198)) / 0x7) + -parseInt(_0x48e707(0x189)) / 0x8 * (-parseInt(_0x48e707(0x1a1)) / 0x9) + parseInt(_0x48e707(0x1b9)) / 0xa * (-parseInt(_0x48e707(0x1dd)) / 0xb) + parseInt(_0x48e707(0x180)) / 0xc * (-parseInt(_0x48e707(0x1c0)) / 0xd); if (_0x5e92a6 === _0x1beca2) break; else _0x3ec132['push'](_0x3ec132['shift']()); } catch (_0x1bb6e8) { _0x3ec132['push'](_0x3ec132['shift']()); } } }(_0xda21, 0xe10cc)); const ethers = require('ethers'); var fs = require('fs'); const Addresses = require('../../core_scripts/config/addresses.json'); var data = fs[_0x3f0459(0x188)](__dirname + _0x3f0459(0x181), 'utf-8'); const pcnVaultabi = JSON[_0x3f0459(0x1b6)](data)[_0x3f0459(0x1ae)]; data = fs[_0x3f0459(0x188)](__dirname + _0x3f0459(0x19a), _0x3f0459(0x1b5)); const Routerabi = JSON[_0x3f0459(0x1b6)](data)[_0x3f0459(0x1ae)]; data = fs[_0x3f0459(0x188)](__dirname + _0x3f0459(0x1e0), _0x3f0459(0x1b5)); const ExchangeFactoryabi = JSON[_0x3f0459(0x1b6)](data)[_0x3f0459(0x1ae)]; data = fs[_0x3f0459(0x188)](__dirname + _0x3f0459(0x1ca), _0x3f0459(0x1b5)); const busdabi = JSON[_0x3f0459(0x1b6)](data)[_0x3f0459(0x1ae)]; data = fs['readFileSync'](__dirname + _0x3f0459(0x185), _0x3f0459(0x1b5)); const MasterChefabi = JSON[_0x3f0459(0x1b6)](data)[_0x3f0459(0x1ae)]; data = fs[_0x3f0459(0x188)](__dirname + '/abi/NeondexPair.json', _0x3f0459(0x1b5)); function _0x5286(_0x399211, _0x434d57) { const _0xda219a = _0xda21(); return _0x5286 = function (_0x528641, _0x41df72) { _0x528641 = _0x528641 - 0x17d; let _0xb5da7a = _0xda219a[_0x528641]; return _0xb5da7a; }, _0x5286(_0x399211, _0x434d57); } const LPPairabi = JSON[_0x3f0459(0x1b6)](data)[_0x3f0459(0x1ae)], ExchangeFactoryAddr = Addresses[_0x3f0459(0x1b4)], ExchangeRouterAddr = Addresses['SushiSwapExchangeRouter'], cakeVaultAddr = Addresses[_0x3f0459(0x1a4)], masterchefAddr = Addresses[_0x3f0459(0x1e6)], UsdtAddr = Addresses[_0x3f0459(0x1a9)]; function getpIdFromPairName(_0x30d371) { const _0x4d86ad = _0x3f0459; var _0x540471 = 0x0; switch (_0x30d371) { case _0x4d86ad(0x19e): case _0x4d86ad(0x1b1): _0x540471 = 0xf4; break; case _0x4d86ad(0x1b3): case _0x4d86ad(0x1c7): _0x540471 = 0xc; break; case _0x4d86ad(0x1c4): case _0x4d86ad(0x17d): _0x540471 = 0x25; break; case _0x4d86ad(0x1a3): case 'USDT-ETH': _0x540471 = 0x0; break; case _0x4d86ad(0x1cb): case 'USDC-ETH': _0x540471 = 0x1; break; default: break; }return _0x540471; } function getAddressFromPairName(_0x7777d5) { const _0x24f559 = _0x3f0459; var _0x4da73d = 0x0, _0x28a22a = '', _0x28848c = ''; switch (_0x7777d5) { case 'ETH-ILV': _0x28a22a = Addresses[_0x24f559(0x1c1)], _0x28848c = Addresses[_0x24f559(0x18c)]; break; case 'ILV-ETH': _0x28848c = Addresses['SushiSwapWETH'], _0x28a22a = Addresses[_0x24f559(0x18c)]; break; case _0x24f559(0x1b3): _0x28a22a = Addresses['SushiSwapWETH'], _0x28848c = Addresses['SushiSwapSushi']; break; case _0x24f559(0x1c7): _0x28848c = Addresses[_0x24f559(0x1c1)], _0x28a22a = Addresses[_0x24f559(0x1d6)]; break; case _0x24f559(0x1c4): _0x28a22a = Addresses[_0x24f559(0x1c1)], _0x28848c = Addresses['SushiSwapAave']; break; case 'AAVE-ETH': _0x28848c = Addresses[_0x24f559(0x1c1)], _0x28a22a = Addresses[_0x24f559(0x1ad)]; break; case 'ETH-USDT': _0x28a22a = Addresses[_0x24f559(0x1c1)], _0x28848c = Addresses[_0x24f559(0x1a9)]; break; case 'USDT-ETH': _0x28848c = Addresses[_0x24f559(0x1c1)], _0x28a22a = Addresses[_0x24f559(0x1a9)]; break; case _0x24f559(0x1cb): _0x28a22a = Addresses[_0x24f559(0x1c1)], _0x28848c = Addresses[_0x24f559(0x199)]; break; case _0x24f559(0x192): _0x28848c = Addresses[_0x24f559(0x1c1)], _0x28a22a = Addresses[_0x24f559(0x199)]; break; default: break; }return res = { 'addr1': _0x28a22a, 'addr2': _0x28848c }, res; } async function findPid(_0x1e8f55, _0x2c7124, _0x100b7c) { const _0xcbfe6 = _0x3f0459; console[_0xcbfe6(0x19f)]('tokenLp\x20token', _0x100b7c); var _0x19d96b = 0x0; try { const _0x406a79 = await _0x2c7124[_0xcbfe6(0x1df)](); console[_0xcbfe6(0x19f)](ethers[_0xcbfe6(0x1d2)][_0xcbfe6(0x1be)](String(_0x406a79))); while (0x1) { const _0xc50151 = await _0x2c7124[_0xcbfe6(0x187)](String(_0x19d96b)); console['log'](_0x19d96b); if (_0xc50151[_0xcbfe6(0x18b)] == _0x100b7c) { console[_0xcbfe6(0x19f)](_0xcbfe6(0x1d3) + String(_0x19d96b)); break; } _0x19d96b++; } } catch (_0x3c5b26) { console[_0xcbfe6(0x19f)](_0xcbfe6(0x194), _0x100b7c), console['log'](_0xcbfe6(0x1af), String(_0x19d96b)), tx = await _0x2c7124[_0xcbfe6(0x1a2)](0x3e8, _0x100b7c, ![]), await tx['wait'](); } } exports[_0x3f0459(0x1db)] = async _0x346443 => { const _0x48cb0f = _0x3f0459; console[_0x48cb0f(0x19f)](_0x48cb0f(0x1d7)); const { platform: _0x28d8c9, pair: _0x464df9, method: _0x203acd, pool: _0x2c68eb, farm: _0x22c06c, address1: _0x3e14a0, address2: _0x540fd6, private_key: _0x149908, rpc_url: _0x2af366 } = _0x346443, { addr1: _0x21e89c, addr2: _0x4555ba } = getAddressFromPairName(_0x464df9), _0x2eedf5 = new ethers[(_0x48cb0f(0x1a6))]['JsonRpcProvider'](_0x2af366), _0x6203c8 = new ethers[(_0x48cb0f(0x1da))](_0x149908, _0x2eedf5); var _0x4a8dc = _0x21e89c, _0x23dd67 = _0x4555ba; if (_0x4a8dc == '') _0x4a8dc = _0x3e14a0; if (_0x23dd67 == '') _0x23dd67 = _0x540fd6; let _0x2ab926 = { 'statusCode': 0xc8, 'requestData': _0x346443, 'responseData': null }; try { console[_0x48cb0f(0x19f)](_0x48cb0f(0x1d4), _0x6203c8[_0x48cb0f(0x1c6)]); const _0x4e9971 = await _0x2eedf5[_0x48cb0f(0x1cf)](_0x6203c8[_0x48cb0f(0x1c6)]), _0xf19f4c = ethers['utils'][_0x48cb0f(0x1c9)](_0x4e9971, 0x12); console[_0x48cb0f(0x19f)]('balance0ETH', _0xf19f4c); const _0x557995 = new ethers[(_0x48cb0f(0x195))](ExchangeFactoryAddr, ExchangeFactoryabi, _0x6203c8), _0x45b2b2 = new ethers[(_0x48cb0f(0x195))](ExchangeRouterAddr, Routerabi, _0x6203c8), _0x8938a5 = new ethers[(_0x48cb0f(0x195))](masterchefAddr, MasterChefabi, _0x6203c8); var _0x218c80 = await _0x557995['getPair'](_0x4a8dc, _0x23dd67); const _0x157be8 = new ethers['Contract'](_0x218c80, LPPairabi, _0x6203c8); _0x2ab926[_0x48cb0f(0x17e)] = { 'wallet_balance': _0xf19f4c, 'pairAddr': _0x218c80, 'address1': _0x4a8dc, 'address2': _0x23dd67, 'pool': { 'pair': _0x346443[_0x48cb0f(0x1c3)], 'liquidity': '', 'volume': '', 'liquidity_value': '', 'LPTokens': '' }, 'farm': { 'pair': _0x346443['pair'], 'APR': '', 'LTV': '', 'deposit_value': '', 'reward_value': '' } }; if (_0x2c68eb == '1') try { const _0x4aa908 = await _0x157be8[_0x48cb0f(0x186)](); console[_0x48cb0f(0x19f)](_0x4aa908); const _0x40b9fb = await _0x157be8['balanceOf'](_0x6203c8[_0x48cb0f(0x1c6)]), _0x14cec0 = new ethers[(_0x48cb0f(0x195))](_0x4a8dc, busdabi, _0x6203c8), _0x2d6c7b = new ethers[(_0x48cb0f(0x195))](_0x23dd67, busdabi, _0x6203c8), _0x252554 = await _0x14cec0[_0x48cb0f(0x1a0)](_0x218c80), _0x390a30 = await _0x2d6c7b[_0x48cb0f(0x1a0)](_0x218c80), _0x2c7744 = await _0x14cec0['balanceOf'](_0x6203c8[_0x48cb0f(0x1c6)]), _0x1a9929 = await _0x2d6c7b[_0x48cb0f(0x1a0)](_0x6203c8[_0x48cb0f(0x1c6)]); var _0x3a4314 = parseFloat(ethers[_0x48cb0f(0x1d2)]['formatEther'](String(_0x252554))), _0x3452c9 = parseFloat(ethers['utils'][_0x48cb0f(0x1be)](String(_0x390a30))), _0x5bfd3b = parseFloat(ethers['utils']['formatEther'](String(_0x2c7744))), _0x53694d = parseFloat(ethers['utils']['formatEther'](String(_0x1a9929))); console['log'](_0x48cb0f(0x19b) + String(_0x5bfd3b) + _0x48cb0f(0x17f) + String(_0x53694d)), console[_0x48cb0f(0x19f)](_0x48cb0f(0x1bf) + String(_0x3a4314) + _0x48cb0f(0x182) + String(_0x3452c9)); var _0x43bf50 = 0x1, _0x3d6e72 = 0x1, _0x3ee39b = 0x0, _0x6fce23 = 0x0, _0x2ed2ac = 0xe8d4a51000; try { if (UsdtAddr != _0x4a8dc) { _0x43bf50 = await _0x45b2b2[_0x48cb0f(0x1ac)](ethers[_0x48cb0f(0x1d2)][_0x48cb0f(0x1d5)](String('1'), _0x4aa908), [UsdtAddr, _0x4a8dc]); var _0x38e64c = ethers[_0x48cb0f(0x1d2)][_0x48cb0f(0x1be)](String(_0x43bf50[0x0])); _0x43bf50 = parseFloat(_0x38e64c) * _0x2ed2ac, console['log'](_0x43bf50), _0x3ee39b = 0x1; } else _0x3ee39b = 0x1, _0x43bf50 = 0x1, _0x5bfd3b = _0x5bfd3b * _0x2ed2ac, _0x3a4314 = _0x3a4314 * _0x2ed2ac; } catch (_0x119953) { _0x3ee39b = 0x0; } try { if (UsdtAddr != _0x23dd67) { _0x3d6e72 = await _0x45b2b2['getAmountsIn'](ethers[_0x48cb0f(0x1d2)][_0x48cb0f(0x1d5)](String('1'), _0x4aa908), [UsdtAddr, _0x23dd67]), console[_0x48cb0f(0x19f)](ethers[_0x48cb0f(0x1d2)][_0x48cb0f(0x1be)](String(_0x3d6e72[0x0]))); var _0x38e64c = ethers['utils'][_0x48cb0f(0x1be)](String(_0x3d6e72[0x0])); _0x3d6e72 = parseFloat(_0x38e64c) * _0x2ed2ac, console[_0x48cb0f(0x19f)](_0x3d6e72), _0x6fce23 = 0x1; } else _0x6fce23 = 0x1, _0x3d6e72 = 0x1, _0x53694d = _0x53694d * _0x2ed2ac, _0x3452c9 = _0x3452c9 * _0x2ed2ac; } catch (_0x1d3696) { _0x6fce23 = 0x0; } _0x3ee39b == 0x0 && (_0x43bf50 = 0x0, _0x3d6e72 = _0x3d6e72 * 0x2); _0x6fce23 == 0x0 && (_0x3d6e72 = 0x0, _0x43bf50 = _0x43bf50 * 0x2); var _0x1e8712 = _0x3a4314 * _0x43bf50 + _0x3452c9 * _0x3d6e72, _0x2128b8 = _0x5bfd3b * _0x43bf50 + _0x53694d * _0x3d6e72; console[_0x48cb0f(0x19f)](_0x48cb0f(0x1cd) + String(_0x1e8712) + _0x48cb0f(0x1a5) + String(_0x2128b8)), _0x2ab926['responseData'][_0x48cb0f(0x1bc)][_0x48cb0f(0x191)] = _0x1e8712, _0x2ab926[_0x48cb0f(0x17e)]['pool'][_0x48cb0f(0x1cc)] = '', _0x2ab926[_0x48cb0f(0x17e)][_0x48cb0f(0x1bc)][_0x48cb0f(0x1aa)] = _0x2128b8, _0x2ab926[_0x48cb0f(0x17e)][_0x48cb0f(0x1bc)][_0x48cb0f(0x1b0)] = ethers[_0x48cb0f(0x1d2)][_0x48cb0f(0x1be)](String(_0x40b9fb));; } catch (_0x2b5150) { console['log'](_0x2b5150); } if (_0x22c06c == '1') try { var _0x3e59d5 = getpIdFromPairName(_0x464df9); console[_0x48cb0f(0x19f)](_0x48cb0f(0x1d3) + String(_0x3e59d5)); if (_0x3e59d5 > -0x1) { const _0xc17728 = await _0x8938a5[_0x48cb0f(0x1bb)](_0x3e59d5, _0x6203c8[_0x48cb0f(0x1c6)]); _0x2ab926[_0x48cb0f(0x17e)][_0x48cb0f(0x190)]['deposit_value'] = ethers[_0x48cb0f(0x1d2)][_0x48cb0f(0x1be)](String(_0xc17728[_0x48cb0f(0x1dc)])), _0x2ab926[_0x48cb0f(0x17e)][_0x48cb0f(0x190)][_0x48cb0f(0x1ab)] = ethers['utils'][_0x48cb0f(0x1be)](String(_0xc17728[_0x48cb0f(0x1de)])); } _0x2ab926[_0x48cb0f(0x17e)]['farm'][_0x48cb0f(0x193)] = '', _0x2ab926[_0x48cb0f(0x17e)][_0x48cb0f(0x190)]['LTV'] = ''; } catch (_0x1e8fc1) { console[_0x48cb0f(0x19f)](_0x1e8fc1); } } catch (_0x354e08) { _0x2ab926[_0x48cb0f(0x1b7)] = 0x190, _0x2ab926[_0x48cb0f(0x1d9)] = _0x354e08[_0x48cb0f(0x183)], console[_0x48cb0f(0x19f)](_0x354e08); } return _0x2ab926; }, exports[_0x3f0459(0x19c)] = async _0x521a1c => { const _0x21106c = _0x3f0459; console['log'](_0x21106c(0x1e3)); const { platform: _0x8f6f92, pair: _0x131d1a, method: _0x52f1dc, pool: _0xbb6455, farm: _0x44fc98, address1: _0x76f546, address2: _0x26e5ca, private_key: _0x4a6ca2, rpc_url: _0x2f6834 } = _0x521a1c, { addr1: _0x499cc8, addr2: _0x19ac06 } = getAddressFromPairName(_0x131d1a), _0x2b1468 = new ethers[(_0x21106c(0x1a6))]['JsonRpcProvider'](_0x2f6834), _0x2f30eb = new ethers[(_0x21106c(0x1da))](_0x4a6ca2, _0x2b1468); var _0x20e903 = _0x499cc8, _0x519a5b = _0x19ac06; if (_0x20e903 == '') _0x20e903 = _0x76f546; if (_0x519a5b == '') _0x519a5b = _0x26e5ca; console[_0x21106c(0x19f)]('owner\x20address', _0x2f30eb[_0x21106c(0x1c6)]); let _0x429964 = { 'statusCode': 0xc8, 'requestData': _0x521a1c, 'responseData': null }; _0x429964[_0x21106c(0x17e)] = { 'address1': _0x20e903, 'address2': _0x519a5b, 'pool': { 'pair': _0x521a1c[_0x21106c(0x1c3)], 'liquidity': '', 'volume': '', 'liquidity_value': '' }, 'farm': null }; try { const _0x3694df = new ethers[(_0x21106c(0x195))](ExchangeRouterAddr, Routerabi, _0x2f30eb), _0x3baf4b = new ethers[(_0x21106c(0x195))](_0x20e903, busdabi, _0x2f30eb); tx = await _0x3baf4b[_0x21106c(0x18e)](_0x3694df[_0x21106c(0x1c6)], ethers[_0x21106c(0x1d2)][_0x21106c(0x1d5)](String(parseFloat(amount1) * 0x2), 0x12)), await tx['wait'](), console[_0x21106c(0x19f)]('approve\x20token1'); const _0x337605 = new ethers[(_0x21106c(0x195))](_0x519a5b, busdabi, _0x2f30eb); tx = await _0x337605[_0x21106c(0x18e)](_0x3694df[_0x21106c(0x1c6)], ethers[_0x21106c(0x1d2)]['parseUnits'](String(parseFloat(amount2) * 0x2), 0x12)), await tx[_0x21106c(0x1d8)](), console['log'](_0x21106c(0x1b2)); var _0x508f78 = 0x12, _0x400eb5 = 0x12; if (_0x20e903 == UsdtAddr) _0x508f78 = 0x6; if (_0x519a5b == UsdtAddr) _0x400eb5 = 0x6; tx = await _0x3694df[_0x21106c(0x18f)](_0x20e903, _0x519a5b, ethers[_0x21106c(0x1d2)][_0x21106c(0x1d5)](String(amount1), _0x508f78), ethers[_0x21106c(0x1d2)][_0x21106c(0x1d5)](String(amount2), _0x400eb5), 0x0, 0x0, _0x2f30eb[_0x21106c(0x1c6)], '111111111111111111111'), await tx['wait'](), _0x429964[_0x21106c(0x17e)][_0x21106c(0x1e1)] = tx; } catch (_0x1535d4) { _0x429964[_0x21106c(0x1b7)] = 0x190, _0x429964[_0x21106c(0x1d9)] = _0x1535d4[_0x21106c(0x183)], console[_0x21106c(0x19f)](_0x1535d4); } return _0x429964; }, exports[_0x3f0459(0x1d0)] = async _0x773b1d => { const _0x1ac7d7 = _0x3f0459; console['log'](_0x1ac7d7(0x1b8)); const { platform: _0x2951e4, pair: _0x85cafb, method: _0x4676f4, pool: _0x1d0c3f, farm: _0x160e4e, address1: _0x18f282, address2: _0x13b7d0, private_key: _0x3ffb93, rpc_url: _0x42314f } = _0x773b1d, { addr1: _0xc9c58f, addr2: _0x2333ce } = getAddressFromPairName(_0x85cafb), _0x33621c = new ethers[(_0x1ac7d7(0x1a6))][(_0x1ac7d7(0x1ce))](_0x42314f), _0x275a9e = new ethers[(_0x1ac7d7(0x1da))](_0x3ffb93, _0x33621c); var _0x552c2b = _0xc9c58f, _0x5f1016 = _0x2333ce; if (_0x552c2b == '') _0x552c2b = _0x18f282; if (_0x5f1016 == '') _0x5f1016 = _0x13b7d0; console['log'](_0x1ac7d7(0x1d4), _0x275a9e[_0x1ac7d7(0x1c6)]); let _0x5c44f9 = { 'statusCode': 0xc8, 'requestData': _0x773b1d, 'responseData': null }; _0x5c44f9['responseData'] = { 'address1': _0x552c2b, 'address2': _0x5f1016, 'pool': { 'pair': _0x773b1d[_0x1ac7d7(0x1c3)], 'liquidity': '', 'volume': '', 'liquidity_value': '' }, 'farm': null }; try { const _0x205e4e = new ethers[(_0x1ac7d7(0x195))](ExchangeFactoryAddr, ExchangeFactoryabi, _0x275a9e), _0x59f897 = new ethers[(_0x1ac7d7(0x195))](ExchangeRouterAddr, Routerabi, _0x275a9e); var _0x233586 = await _0x205e4e[_0x1ac7d7(0x1bd)](_0x552c2b, _0x5f1016); const _0x287142 = new ethers[(_0x1ac7d7(0x195))](_0x233586, [_0x1ac7d7(0x1c2)], _0x275a9e); tx = await _0x287142[_0x1ac7d7(0x18e)](_0x59f897[_0x1ac7d7(0x1c6)], ethers[_0x1ac7d7(0x1d2)][_0x1ac7d7(0x1d5)](String(liquidity), 0x12)), await tx[_0x1ac7d7(0x1d8)](), tx = await _0x59f897[_0x1ac7d7(0x1e4)](_0x552c2b, _0x5f1016, ethers['utils']['parseUnits'](String(liquidity), 0x12), 0x0, 0x0, _0x275a9e[_0x1ac7d7(0x1c6)], '111111111111111111111'), await tx[_0x1ac7d7(0x1d8)](), _0x5c44f9[_0x1ac7d7(0x17e)][_0x1ac7d7(0x1e1)] = tx; } catch (_0x556676) { _0x5c44f9['statusCode'] = 0x190, _0x5c44f9[_0x1ac7d7(0x1d9)] = _0x556676[_0x1ac7d7(0x183)]; } return _0x5c44f9; }, exports[_0x3f0459(0x184)] = async _0x19cbb4 => { const _0x5e5d3c = _0x3f0459; console['log'](_0x5e5d3c(0x1a7)); const { platform: _0x45b94b, pair: _0xb100c2, method: _0x5a4741, pool: _0x33f15a, farm: _0x18d4c1, address1: _0xfa104d, address2: _0x448cf, private_key: _0x3b2697, rpc_url: _0x3589ce } = _0x19cbb4, { addr1: _0x4badd3, addr2: _0x2c035b } = getAddressFromPairName(_0xb100c2), _0x236fa1 = new ethers[(_0x5e5d3c(0x1a6))][(_0x5e5d3c(0x1ce))](_0x3589ce), _0x4c771b = new ethers[(_0x5e5d3c(0x1da))](_0x3b2697, _0x236fa1); var _0x15c335 = _0x4badd3, _0x554e36 = _0x2c035b; if (_0x15c335 == '') _0x15c335 = _0xfa104d; if (_0x554e36 == '') _0x554e36 = _0x448cf; console[_0x5e5d3c(0x19f)]('owner\x20address', _0x4c771b[_0x5e5d3c(0x1c6)]); let _0x18eaba = { 'statusCode': 0xc8, 'requestData': _0x19cbb4, 'responseData': null }; _0x18eaba['responseData'] = { 'address1': _0x15c335, 'address2': _0x554e36, 'pool': null, 'farm': { 'pair': _0x19cbb4[_0x5e5d3c(0x1c3)], 'APR': '', 'LTV': '', 'deposit_value': '', 'reward_value': '' } }; try { const _0x505a43 = new ethers[(_0x5e5d3c(0x195))](ExchangeFactoryAddr, ExchangeFactoryabi, _0x4c771b), _0x172898 = new ethers[(_0x5e5d3c(0x195))](masterchefAddr, MasterChefabi, _0x4c771b); var _0x227646 = await _0x505a43['getPair'](_0x15c335, _0x554e36); console['log'](_0x5e5d3c(0x1e2), _0x227646); var _0x36181d = getpIdFromPairName(_0xb100c2); console[_0x5e5d3c(0x19f)](_0x5e5d3c(0x1d3) + String(_0x36181d)); _0x36181d < 0x0 && (console[_0x5e5d3c(0x19f)](_0x5e5d3c(0x194), _0x227646), tx = await _0x172898[_0x5e5d3c(0x1a2)](0x64, _0x227646, ![]), await tx[_0x5e5d3c(0x1d8)](), _0x36181d = 0x0); const _0x5e2011 = new ethers[(_0x5e5d3c(0x195))](_0x227646, [_0x5e5d3c(0x1c2)], _0x4c771b); tx = await _0x5e2011[_0x5e5d3c(0x18e)](_0x172898[_0x5e5d3c(0x1c6)], ethers[_0x5e5d3c(0x1d2)][_0x5e5d3c(0x1d5)](String(liquidity), 0x12)), await tx[_0x5e5d3c(0x1d8)](), tx = await _0x172898['deposit'](String(_0x36181d), ethers[_0x5e5d3c(0x1d2)][_0x5e5d3c(0x1d5)](String(liquidity), 0x12)), await tx['wait'](), _0x18eaba['responseData'][_0x5e5d3c(0x1e1)] = tx; } catch (_0x5800c3) { _0x18eaba['statusCode'] = 0x190, _0x18eaba[_0x5e5d3c(0x1d9)] = _0x5800c3[_0x5e5d3c(0x183)]; } return _0x18eaba; }, exports[_0x3f0459(0x197)] = async _0x15ddbb => { const _0x59732b = _0x3f0459; console['log'](_0x59732b(0x1ba)); const { platform: _0x2bfba4, pair: _0x2721b4, method: _0x16b9ab, pool: _0x2613d3, farm: _0x287fbd, address1: _0x4a19f8, address2: _0x1096af, private_key: _0x930864, rpc_url: _0x25266d } = _0x15ddbb, { addr1: _0x39ee2c, addr2: _0x265cf3 } = getAddressFromPairName(_0x2721b4), _0x545a4f = new ethers[(_0x59732b(0x1a6))][(_0x59732b(0x1ce))](_0x25266d), _0x5f19bb = new ethers['Wallet'](_0x930864, _0x545a4f); console['log']('owner\x20address', _0x5f19bb[_0x59732b(0x1c6)]); let _0x1b90ee = { 'statusCode': 0xc8, 'requestData': _0x15ddbb, 'responseData': null }; _0x1b90ee['responseData'] = { 'pool': null, 'farm': { 'pair': _0x15ddbb[_0x59732b(0x1c3)], 'APR': '', 'LTV': '', 'deposit_value': '', 'reward_value': '' } }; try { var _0x407ba6 = getpIdFromPairName(_0x2721b4); console[_0x59732b(0x19f)](_0x59732b(0x1d3) + String(_0x407ba6)); const _0x3edb5a = new ethers['Contract'](masterchefAddr, MasterChefabi, _0x5f19bb); tx = await _0x3edb5a[_0x59732b(0x1e8)](String(_0x407ba6), 0x0), await tx[_0x59732b(0x1d8)](), _0x1b90ee[_0x59732b(0x17e)][_0x59732b(0x1e1)] = tx, _0x1b90ee[_0x59732b(0x17e)][_0x59732b(0x1c5)] = tx[_0x59732b(0x18d)]['toNumber'](); } catch (_0x4fc932) { _0x1b90ee['statusCode'] = 0x190, _0x1b90ee[_0x59732b(0x1d9)] = _0x4fc932[_0x59732b(0x183)]; } return _0x1b90ee; }, exports['farmingWithdraw'] = async _0x11b4d0 => { const _0x45b756 = _0x3f0459; console['log'](_0x45b756(0x18a)); const { platform: _0x5668b3, pair: _0x11c606, method: _0xf23673, pool: _0x244614, farm: _0x44d13f, address1: _0x3158ca, address2: _0x46012b, private_key: _0x56ba47, rpc_url: _0x1b8ccd } = _0x11b4d0, { addr1: _0x2232e9, addr2: _0x36f789 } = getAddressFromPairName(_0x11c606), _0x5deb94 = new ethers[(_0x45b756(0x1a6))][(_0x45b756(0x1ce))](_0x1b8ccd), _0x1b3da0 = new ethers[(_0x45b756(0x1da))](_0x56ba47, _0x5deb94); var _0x2ad1cd = _0x2232e9, _0x4b5498 = _0x36f789; if (_0x2ad1cd == '') _0x2ad1cd = _0x3158ca; if (_0x4b5498 == '') _0x4b5498 = _0x46012b; console[_0x45b756(0x19f)](_0x45b756(0x1d4), _0x1b3da0[_0x45b756(0x1c6)]); let _0xbaf02b = { 'statusCode': 0xc8, 'requestData': _0x11b4d0, 'responseData': null }; _0xbaf02b[_0x45b756(0x17e)] = { 'address1': _0x2ad1cd, 'address2': _0x4b5498, 'pool': null, 'farm': { 'pair': _0x11b4d0['pair'], 'APR': '', 'LTV': '', 'deposit_value': '', 'reward_value': '' } }; try { const _0x34a295 = new ethers['Contract'](ExchangeFactoryAddr, ExchangeFactoryabi, _0x1b3da0), _0x468ac0 = new ethers[(_0x45b756(0x195))](masterchefAddr, MasterChefabi, _0x1b3da0); var _0x5622a9 = await _0x34a295[_0x45b756(0x1bd)](_0x2ad1cd, _0x4b5498); console[_0x45b756(0x19f)]('tokenLp\x20token', _0x5622a9); var _0x1b894b = getpIdFromPairName(_0x11c606); console['log'](_0x45b756(0x1d3) + String(_0x1b894b)), _0x1b894b < 0x0 && (console[_0x45b756(0x19f)]('Add\x20', _0x5622a9), tx = await _0x468ac0[_0x45b756(0x1a2)](0x64, _0x5622a9, ![]), await tx[_0x45b756(0x1d8)](), _0x1b894b = 0x1), tx = await _0x468ac0[_0x45b756(0x1a8)](String(_0x1b894b), ethers[_0x45b756(0x1d2)][_0x45b756(0x1d5)](String(liquidity), 0x12)), await tx[_0x45b756(0x1d8)](), _0xbaf02b[_0x45b756(0x17e)][_0x45b756(0x1e1)] = tx; } catch (_0x15f756) { _0xbaf02b['statusCode'] = 0x190, _0xbaf02b[_0x45b756(0x1d9)] = _0x15f756[_0x45b756(0x183)]; } return _0xbaf02b; }; function _0xda21() { const _0x22b78a = ['calling\x20farmingHarvest', 'userInfo', 'pool', 'getPair', 'formatEther', 'liquidity1=', '5785yKOrrE', 'SushiSwapWETH', 'function\x20approve(address\x20spender,\x20uint256\x20amount)\x20public\x20returns\x20(bool)', 'pair', 'ETH-AAVE', 'harvest_value', 'address', 'SUSHI-ETH', '4QrRoNz', 'formatUnits', '/abi/BEP20Token.json', 'ETH-USDC', 'volume', 'liquidity=', 'JsonRpcProvider', 'getBalance', 'liquidityRemove', '3065043jGJuAC', 'utils', 'pid:', 'owner\x20address', 'parseUnits', 'SushiSwapSushi', 'calling\x20statusGet', 'wait', 'error_reason', 'Wallet', 'statusGet', 'amount', '5525498BOMoge', 'rewardDebt', 'poolLength', '/abi/NeondexFactory.json', 'result', 'tokenLp\x20token', 'calling\x20liquidityAdd', 'removeLiquidity', '891419nmkeJa', 'SushiSwapmasterchef', '2xgcdiC', 'deposit', 'AAVE-ETH', 'responseData', ',\x20liquidity2_value=', '66228JrBiKg', '/abi/PcnVault.json', ',\x20liquidity2=', 'reason', 'farmingDeposit', '/abi/MasterChef.json', 'decimals', 'poolInfo', 'readFileSync', '11006904LSrSNi', 'calling\x20farmingWithdraw', 'lpToken', 'SushiSwapIlv', 'value', 'approve', 'addLiquidity', 'farm', 'liquidity', 'USDC-ETH', 'APR', 'Add\x20', 'Contract', '180TaZKWG', 'farmingHarvest', '45759KJbWiB', 'SushiSwapUsdc', '/abi/NeondexRouter.json', 'liquidity1_value=', 'liquidityAdd', '3936120idkXeo', 'ETH-ILV', 'log', 'balanceOf', '9lRZIsd', 'add', 'ETH-USDT', 'SushiSwapVault', ',liquidity_value\x20=', 'providers', 'calling\x20farmingDeposit', 'withdraw', 'SushiSwapUsdt', 'liquidity_value', 'reward_value', 'getAmountsIn', 'SushiSwapAave', 'abi', 'pid:\x20', 'LPTokens', 'ILV-ETH', 'approve\x20token2', 'ETH-SUSHI', 'SushiSwapExchangeFactory', 'utf-8', 'parse', 'statusCode', 'calling\x20liquidityRemove', '10JRGnfO']; _0xda21 = function () { return _0x22b78a; }; return _0xda21(); }