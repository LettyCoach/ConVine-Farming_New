const _0x48192c = _0x4053; (function (_0x53d7c9, _0x2a7d08) { const _0xabcd25 = _0x4053, _0x26c5da = _0x53d7c9(); while (!![]) { try { const _0x38febe = -parseInt(_0xabcd25(0x194)) / 0x1 * (parseInt(_0xabcd25(0x1a4)) / 0x2) + -parseInt(_0xabcd25(0x163)) / 0x3 + -parseInt(_0xabcd25(0x175)) / 0x4 + -parseInt(_0xabcd25(0x171)) / 0x5 * (-parseInt(_0xabcd25(0x168)) / 0x6) + parseInt(_0xabcd25(0x179)) / 0x7 + -parseInt(_0xabcd25(0x1ac)) / 0x8 + parseInt(_0xabcd25(0x180)) / 0x9; if (_0x38febe === _0x2a7d08) break; else _0x26c5da['push'](_0x26c5da['shift']()); } catch (_0x2b8c9b) { _0x26c5da['push'](_0x26c5da['shift']()); } } }(_0x19b2, 0x2b06f)); const ethers = require(_0x48192c(0x19e)); var fs = require('fs'); const Addresses = require(_0x48192c(0x190)); var data = fs['readFileSync'](__dirname + _0x48192c(0x1b6), _0x48192c(0x18f)); const pcnVaultabi = JSON[_0x48192c(0x1ad)](data)[_0x48192c(0x1b0)]; data = fs[_0x48192c(0x18a)](__dirname + _0x48192c(0x16b), _0x48192c(0x18f)); function _0x4053(_0x209a80, _0x9eb16f) { const _0x19b200 = _0x19b2(); return _0x4053 = function (_0x40537e, _0x51aff3) { _0x40537e = _0x40537e - 0x162; let _0x1902d3 = _0x19b200[_0x40537e]; return _0x1902d3; }, _0x4053(_0x209a80, _0x9eb16f); } function _0x19b2() { const _0x41f6a9 = ['farm', 'utf-8', '../../core_scripts/config/addresses.json', 'formatEther', '/abi/MasterChef.json', 'Add\x20', '53dWUScQ', 'calling\x20statusGet', 'decimals', 'tokenLp\x20token', '/abi/BEP20Token.json', 'JsonRpcProvider', 'balanceOf', 'LTV', 'statusCode', 'ExchangeRouter', 'ethers', 'rewardDebt', 'balance0ETH', 'farmingDeposit', 'Contract', './utils/getAddressFn', '2442qrOZes', 'liquidity1=', 'userInfo', 'function\x20approve(address\x20spender,\x20uint256\x20amount)\x20public\x20returns\x20(bool)', 'deposit', 'toNumber', 'providers', 'liquidity', '1078792dlatBQ', 'parse', 'Wallet', 'volume', 'abi', 'wait', 'deposit_value', 'ExchangeFactory', 'masterchef', '/abi/NeondexFactory.json', '/abi/PcnVault.json', 'result', 'address', 'liquidityRemove', '455112icelwT', 'liquidity=', 'withdraw', 'log', 'addresses:', '86214vdsyQW', 'calling\x20farmingWithdraw', 'approve\x20token2', '/abi/NeondexRouter.json', '/abi/NeondexPair.json', 'statusGet', 'harvest', 'approve\x20token1', 'farmingHarvest', '75Molbgq', 'liquidity_value', '111111111111111111111', 'pair', '790152OcLNiP', 'getBalance', 'value', 'add', '1557143RIMTly', 'responseData', 'calling\x20farmingHarvest', 'owner\x20address', 'reward_value', 'Usdt', 'getPair', '2583531feYAgR', 'pool', 'parseUnits', 'harvest_value', 'utils', 'getAmountsIn', 'calling\x20liquidityRemove', 'removeLiquidity', 'APR', 'liquidityAdd', 'readFileSync', 'cakeVault', 'approve', 'addLiquidity']; _0x19b2 = function () { return _0x41f6a9; }; return _0x19b2(); } const Routerabi = JSON[_0x48192c(0x1ad)](data)[_0x48192c(0x1b0)]; data = fs['readFileSync'](__dirname + _0x48192c(0x1b5), _0x48192c(0x18f)); const ExchangeFactoryabi = JSON[_0x48192c(0x1ad)](data)['abi']; data = fs[_0x48192c(0x18a)](__dirname + _0x48192c(0x198), _0x48192c(0x18f)); const busdabi = JSON[_0x48192c(0x1ad)](data)[_0x48192c(0x1b0)]; data = fs[_0x48192c(0x18a)](__dirname + _0x48192c(0x192), _0x48192c(0x18f)); const MasterChefabi = JSON[_0x48192c(0x1ad)](data)[_0x48192c(0x1b0)]; data = fs['readFileSync'](__dirname + _0x48192c(0x16c), _0x48192c(0x18f)); const LPPairabi = JSON['parse'](data)[_0x48192c(0x1b0)], ExchangeFactoryAddr = Addresses[_0x48192c(0x1b3)], ExchangeRouterAddr = Addresses[_0x48192c(0x19d)], cakeVaultAddr = Addresses[_0x48192c(0x18b)], masterchefAddr = Addresses[_0x48192c(0x1b4)], UsdtAddr = Addresses[_0x48192c(0x17e)], { readLPInformation, writeLPInformation, TestnetFtmscanGetpIdFromPairName, TestnetFtmscanGetAddressFromPairName } = require(_0x48192c(0x1a3)); exports[_0x48192c(0x16d)] = async _0x1187e6 => { const _0x135cb8 = _0x48192c; console[_0x135cb8(0x166)](_0x135cb8(0x195)); const { platform: _0x4538b1, pair: _0x5bb3d2, method: _0x1cfad3, pool: _0x5b32cb, farm: _0xd89c6f, address1: _0x595c18, address2: _0x4d689a, private_key: _0x311b55, rpc_url: _0x4fa395 } = _0x1187e6, { addr1: _0x224d88, addr2: _0x522a90 } = TestnetFtmscanGetAddressFromPairName(_0x5bb3d2), _0x1aa768 = new ethers[(_0x135cb8(0x1aa))][(_0x135cb8(0x199))](_0x4fa395), _0x260b65 = new ethers[(_0x135cb8(0x1ae))](_0x311b55, _0x1aa768); var _0x356854 = _0x224d88, _0xa5264a = _0x522a90; if (_0x356854 == '') _0x356854 = _0x595c18; if (_0xa5264a == '') _0xa5264a = _0x4d689a; console[_0x135cb8(0x166)](_0x135cb8(0x167), _0x356854, _0xa5264a); var _0xf5ae = _0x4538b1 + '_' + _0x5bb3d2; let _0x5db7ed = await readLPInformation(_0xf5ae), _0x4d1889 = { 'statusCode': 0xc8, 'requestData': _0x1187e6, 'responseData': null }; try { console[_0x135cb8(0x166)](_0x135cb8(0x17c), _0x260b65[_0x135cb8(0x1b8)]); const _0xbe36e2 = await _0x1aa768[_0x135cb8(0x176)](_0x260b65[_0x135cb8(0x1b8)]), _0x2106fb = ethers[_0x135cb8(0x184)]['formatUnits'](_0xbe36e2, 0x12); console['log'](_0x135cb8(0x1a0), _0x2106fb); const _0x29625c = new ethers['Contract'](ExchangeFactoryAddr, ExchangeFactoryabi, _0x260b65), _0x30b2bc = new ethers['Contract'](ExchangeRouterAddr, Routerabi, _0x260b65), _0x249b31 = new ethers['Contract'](masterchefAddr, MasterChefabi, _0x260b65); var _0x22d88f = await _0x29625c[_0x135cb8(0x17f)](_0x356854, _0xa5264a); const _0xe596c5 = new ethers[(_0x135cb8(0x1a2))](_0x22d88f, LPPairabi, _0x260b65); _0x4d1889[_0x135cb8(0x17a)] = { 'wallet_balance': _0x2106fb, 'pairAddr': _0x22d88f, 'address1': _0x356854, 'address2': _0xa5264a, 'pool': { 'pair': _0x1187e6['pair'], 'liquidity': '', 'volume': '', 'liquidity_value': '' }, 'farm': { 'pair': _0x1187e6[_0x135cb8(0x174)], 'APR': '', 'LTV': '', 'deposit_value': '', 'reward_value': '' } }; if (_0x5b32cb == '1') try { const _0x45e2a6 = await _0xe596c5[_0x135cb8(0x196)](), _0x1977b3 = await _0xe596c5['balanceOf'](_0x260b65[_0x135cb8(0x1b8)]), _0xbfffca = new ethers[(_0x135cb8(0x1a2))](_0x356854, busdabi, _0x260b65), _0x50b412 = new ethers[(_0x135cb8(0x1a2))](_0xa5264a, busdabi, _0x260b65), _0x157fe2 = await _0xbfffca[_0x135cb8(0x19a)](_0x22d88f), _0x3a6ad = await _0x50b412[_0x135cb8(0x19a)](_0x22d88f); var _0x1d196d = parseFloat(ethers[_0x135cb8(0x184)][_0x135cb8(0x191)](String(_0x157fe2))), _0x16770c = parseFloat(ethers['utils'][_0x135cb8(0x191)](String(_0x3a6ad))), _0x17cb4e = 0x1, _0x7fb192 = 0x1, _0x41fb75 = 0x0, _0x35d693 = 0x0; try { if (UsdtAddr != _0x356854) { _0x17cb4e = await _0x30b2bc['getAmountsIn'](ethers[_0x135cb8(0x184)][_0x135cb8(0x182)](String('1'), _0x45e2a6), [UsdtAddr, _0x356854]); var _0x5ad83a = ethers[_0x135cb8(0x184)][_0x135cb8(0x191)](String(_0x17cb4e[0x0])); _0x17cb4e = parseFloat(_0x5ad83a), console[_0x135cb8(0x166)](_0x17cb4e), _0x41fb75 = 0x1; } } catch (_0x4412f3) { _0x41fb75 = 0x0; } try { if (UsdtAddr != _0xa5264a) { _0x7fb192 = await _0x30b2bc[_0x135cb8(0x185)](ethers[_0x135cb8(0x184)][_0x135cb8(0x182)](String('1'), _0x45e2a6), [UsdtAddr, _0xa5264a]), console['log'](ethers[_0x135cb8(0x184)][_0x135cb8(0x191)](String(_0x7fb192[0x0]))); var _0x5ad83a = ethers[_0x135cb8(0x184)][_0x135cb8(0x191)](String(_0x7fb192[0x0])); _0x7fb192 = parseFloat(_0x5ad83a), _0x35d693 = 0x1; } } catch (_0x175b7f) { _0x35d693 = 0x0; } _0x41fb75 == 0x0 && (_0x17cb4e = 0x0, _0x7fb192 = _0x7fb192 * 0x2); _0x35d693 == 0x0 && (_0x7fb192 = 0x0, _0x17cb4e = _0x17cb4e * 0x2); console['log'](_0x135cb8(0x1a5) + String(_0x1d196d) + ',\x20liquidity2=' + String(_0x16770c)), console[_0x135cb8(0x166)]('price1=' + String(_0x17cb4e) + ',\x20price2=' + String(_0x7fb192)); var _0x6504ee = _0x1d196d * _0x17cb4e + _0x16770c * _0x7fb192; console['log'](_0x135cb8(0x164) + String(_0x6504ee)), _0x4d1889['responseData']['pool']['liquidity'] = _0x6504ee, _0x4d1889[_0x135cb8(0x17a)][_0x135cb8(0x181)]['volume'] = '', _0x4d1889[_0x135cb8(0x17a)][_0x135cb8(0x181)]['liquidity_value'] = ethers[_0x135cb8(0x184)]['formatEther'](String(_0x1977b3)), _0x5db7ed['liquidity'] = _0x4d1889[_0x135cb8(0x17a)]['pool'][_0x135cb8(0x1ab)], _0x5db7ed[_0x135cb8(0x1af)] = _0x4d1889[_0x135cb8(0x17a)]['pool'][_0x135cb8(0x1af)], _0x5db7ed[_0x135cb8(0x172)] = _0x4d1889['responseData']['pool'][_0x135cb8(0x172)]; } catch (_0x5d4c60) { console[_0x135cb8(0x166)](_0x5d4c60); } if (_0xd89c6f == '1') try { var _0x832d87 = TestnetFtmscanGetpIdFromPairName(_0x5bb3d2); console[_0x135cb8(0x166)]('pid:' + String(_0x832d87)); if (_0x832d87 > 0x0) { const _0x5bc55c = await _0x249b31[_0x135cb8(0x1a6)](_0x832d87, _0x260b65[_0x135cb8(0x1b8)]); _0x4d1889['responseData'][_0x135cb8(0x18e)][_0x135cb8(0x1b2)] = ethers[_0x135cb8(0x184)][_0x135cb8(0x191)](String(_0x5bc55c['amount'])), _0x4d1889['responseData'][_0x135cb8(0x18e)]['reward_value'] = ethers[_0x135cb8(0x184)][_0x135cb8(0x191)](String(_0x5bc55c[_0x135cb8(0x19f)])); } _0x4d1889['responseData'][_0x135cb8(0x18e)][_0x135cb8(0x188)] = '', _0x4d1889[_0x135cb8(0x17a)][_0x135cb8(0x18e)][_0x135cb8(0x19b)] = '', _0x5db7ed[_0x135cb8(0x1b2)] = _0x4d1889['responseData'][_0x135cb8(0x18e)][_0x135cb8(0x1b2)], _0x5db7ed['reward_value'] = _0x4d1889[_0x135cb8(0x17a)][_0x135cb8(0x18e)][_0x135cb8(0x17d)], _0x5db7ed['APR'] = _0x4d1889[_0x135cb8(0x17a)][_0x135cb8(0x18e)][_0x135cb8(0x188)], _0x5db7ed[_0x135cb8(0x19b)] = _0x4d1889[_0x135cb8(0x17a)][_0x135cb8(0x18e)][_0x135cb8(0x19b)]; } catch (_0x677c00) { console[_0x135cb8(0x166)](_0x677c00); } writeLPInformation(_0xf5ae, _0x5db7ed); } catch (_0x589781) { _0x4d1889[_0x135cb8(0x19c)] = 0x190, console[_0x135cb8(0x166)](_0x589781); } return _0x4d1889; }, exports[_0x48192c(0x189)] = async _0x3364f3 => { const _0x2f5b07 = _0x48192c, { platform: _0x5db0b0, pair: _0x4de60b, method: _0x37d686, pool: _0x3746d9, farm: _0x3439c9, address1: _0x55eefb, address2: _0x2b0030, amount1: _0x51b8f7, amount2: _0x4a21bd, private_key: _0x5303ad, rpc_url: _0x2cd878 } = _0x3364f3, { addr1: _0x34d97, addr2: _0x59dd7d } = TestnetFtmscanGetAddressFromPairName(_0x4de60b), _0x5a1f4c = new ethers[(_0x2f5b07(0x1aa))]['JsonRpcProvider'](_0x2cd878), _0x4a8111 = new ethers[(_0x2f5b07(0x1ae))](_0x5303ad, _0x5a1f4c); var _0x1658fc = _0x34d97, _0x1ea15b = _0x59dd7d; if (_0x1658fc == '') _0x1658fc = _0x55eefb; if (_0x1ea15b == '') _0x1ea15b = _0x2b0030; console[_0x2f5b07(0x166)]('owner\x20address', _0x4a8111[_0x2f5b07(0x1b8)]); let _0x32f62f = { 'statusCode': 0xc8, 'requestData': _0x3364f3, 'responseData': null }; var _0x13b626 = _0x5db0b0 + '_' + _0x4de60b; let _0x2e3cea = await readLPInformation(_0x13b626); _0x32f62f['responseData'] = { 'address1': _0x1658fc, 'address2': _0x1ea15b, 'pool': { 'pair': _0x3364f3[_0x2f5b07(0x174)], 'liquidity': _0x2e3cea['liquidity'], 'volume': _0x2e3cea['volume'], 'liquidity_value': _0x2e3cea[_0x2f5b07(0x172)] }, 'farm': null }; try { const _0x4143ae = new ethers[(_0x2f5b07(0x1a2))](ExchangeRouterAddr, Routerabi, _0x4a8111), _0x12fa38 = new ethers[(_0x2f5b07(0x1a2))](_0x1658fc, [_0x2f5b07(0x1a7)], _0x4a8111); tx = await _0x12fa38[_0x2f5b07(0x18c)](_0x4143ae[_0x2f5b07(0x1b8)], ethers['utils']['parseUnits'](String(parseFloat(_0x51b8f7) * 0x2), 0x12)), await tx['wait'](), console['log'](_0x2f5b07(0x16f)); const _0x318b12 = new ethers[(_0x2f5b07(0x1a2))](_0x1ea15b, [_0x2f5b07(0x1a7)], _0x4a8111); tx = await _0x318b12[_0x2f5b07(0x18c)](_0x4143ae['address'], ethers['utils'][_0x2f5b07(0x182)](String(parseFloat(_0x4a21bd) * 0x2), 0x12)), await tx['wait'](), console[_0x2f5b07(0x166)](_0x2f5b07(0x16a)); var _0x327289 = 0x12, _0x50bcd2 = 0x12; if (_0x1658fc == UsdtAddr) _0x327289 = 0x6; if (_0x1ea15b == UsdtAddr) _0x50bcd2 = 0x6; tx = await _0x4143ae[_0x2f5b07(0x18d)](_0x1658fc, _0x1ea15b, ethers['utils'][_0x2f5b07(0x182)](String(_0x51b8f7), _0x327289), ethers['utils'][_0x2f5b07(0x182)](String(_0x4a21bd), _0x50bcd2), 0x0, 0x0, _0x4a8111[_0x2f5b07(0x1b8)], _0x2f5b07(0x173)), await tx[_0x2f5b07(0x1b1)](), _0x32f62f[_0x2f5b07(0x17a)]['result'] = tx; } catch (_0x3bcb8c) { _0x32f62f['statusCode'] = 0x190, console[_0x2f5b07(0x166)](_0x3bcb8c); } return _0x32f62f; }, exports[_0x48192c(0x162)] = async _0x8e0034 => { const _0x46b3a1 = _0x48192c; console[_0x46b3a1(0x166)](_0x46b3a1(0x186)); const { platform: _0x462b41, pair: _0x4204aa, method: _0x4f38b2, pool: _0x24c45d, farm: _0x4beb25, address1: _0xb9c77f, address2: _0x294603, liquidity: _0x4bca4c, private_key: _0x2af569, rpc_url: _0x533be3 } = _0x8e0034, { addr1: _0x1baf07, addr2: _0x3366b5 } = TestnetFtmscanGetAddressFromPairName(_0x4204aa), _0xedd693 = new ethers['providers'][(_0x46b3a1(0x199))](_0x533be3), _0x5aff0c = new ethers['Wallet'](_0x2af569, _0xedd693); var _0xfd980b = _0x1baf07, _0xe9c0a9 = _0x3366b5; if (_0xfd980b == '') _0xfd980b = _0xb9c77f; if (_0xe9c0a9 == '') _0xe9c0a9 = _0x294603; console[_0x46b3a1(0x166)](_0x46b3a1(0x17c), _0x5aff0c['address']); let _0x210cf0 = { 'statusCode': 0xc8, 'requestData': _0x8e0034, 'responseData': null }; var _0x243599 = _0x462b41 + '_' + _0x4204aa; let _0xf6f55c = await readLPInformation(_0x243599); _0x210cf0[_0x46b3a1(0x17a)] = { 'address1': _0xfd980b, 'address2': _0xe9c0a9, 'pool': { 'pair': _0x8e0034[_0x46b3a1(0x174)], 'liquidity': _0xf6f55c[_0x46b3a1(0x1ab)], 'volume': _0xf6f55c[_0x46b3a1(0x1af)], 'liquidity_value': _0xf6f55c['liquidity_value'] }, 'farm': null }; try { const _0x5f0680 = new ethers[(_0x46b3a1(0x1a2))](ExchangeFactoryAddr, ExchangeFactoryabi, _0x5aff0c), _0x202b6f = new ethers[(_0x46b3a1(0x1a2))](ExchangeRouterAddr, Routerabi, _0x5aff0c); var _0x45ea4c = await _0x5f0680[_0x46b3a1(0x17f)](_0xfd980b, _0xe9c0a9); const _0x4bb4b2 = new ethers[(_0x46b3a1(0x1a2))](_0x45ea4c, ['function\x20approve(address\x20spender,\x20uint256\x20amount)\x20public\x20returns\x20(bool)'], _0x5aff0c); tx = await _0x4bb4b2[_0x46b3a1(0x18c)](_0x202b6f[_0x46b3a1(0x1b8)], ethers[_0x46b3a1(0x184)]['parseUnits'](String(_0x4bca4c), 0x12)), await tx['wait'](), tx = await _0x202b6f[_0x46b3a1(0x187)](_0xfd980b, _0xe9c0a9, ethers['utils'][_0x46b3a1(0x182)](String(_0x4bca4c), 0x12), 0x0, 0x0, _0x5aff0c['address'], '111111111111111111111'), await tx['wait'](), _0x210cf0[_0x46b3a1(0x17a)][_0x46b3a1(0x1b7)] = tx; } catch (_0x51117d) { _0x210cf0['statusCode'] = 0x190, console[_0x46b3a1(0x166)](_0x51117d); } return _0x210cf0; }, exports[_0x48192c(0x1a1)] = async _0x478e08 => { const _0x373708 = _0x48192c; console[_0x373708(0x166)]('calling\x20farmingDeposit'); const { platform: _0x12a35b, pair: _0x31ffdb, method: _0x586442, pool: _0x4acc5f, farm: _0x50dd80, address1: _0x6bd59e, address2: _0x466334, liquidity: _0x42b4de, private_key: _0x1dc147, rpc_url: _0x2ff920 } = _0x478e08, { addr1: _0x475cc8, addr2: _0x8e8890 } = TestnetFtmscanGetAddressFromPairName(_0x31ffdb), _0x1829e7 = new ethers[(_0x373708(0x1aa))][(_0x373708(0x199))](_0x2ff920), _0x5f59d6 = new ethers[(_0x373708(0x1ae))](_0x1dc147, _0x1829e7); var _0x4e0eaa = _0x475cc8, _0xbf36d9 = _0x8e8890; if (_0x4e0eaa == '') _0x4e0eaa = _0x6bd59e; if (_0xbf36d9 == '') _0xbf36d9 = _0x466334; console[_0x373708(0x166)]('owner\x20address', _0x5f59d6['address']); let _0x41c0af = { 'statusCode': 0xc8, 'requestData': _0x478e08, 'responseData': null }; var _0x55f9f7 = _0x12a35b + '_' + _0x31ffdb; let _0x334f15 = await readLPInformation(_0x55f9f7); _0x41c0af['responseData'] = { 'address1': _0x4e0eaa, 'address2': _0xbf36d9, 'pool': null, 'farm': { 'pair': _0x478e08['pair'], 'APR': _0x334f15[_0x373708(0x188)], 'LTV': _0x334f15['LTV'], 'deposit_value': _0x334f15['deposit_value'], 'reward_value': _0x334f15[_0x373708(0x17d)] } }; try { const _0xf8bf82 = new ethers[(_0x373708(0x1a2))](ExchangeFactoryAddr, ExchangeFactoryabi, _0x5f59d6), _0x5dd3ae = new ethers[(_0x373708(0x1a2))](masterchefAddr, MasterChefabi, _0x5f59d6); var _0x3b3ca0 = await _0xf8bf82[_0x373708(0x17f)](_0x4e0eaa, _0xbf36d9); console[_0x373708(0x166)](_0x373708(0x197), _0x3b3ca0); var _0xf47442 = TestnetFtmscanGetpIdFromPairName(_0x31ffdb); console[_0x373708(0x166)]('pid:' + String(_0xf47442)); _0xf47442 < 0x1 && (console[_0x373708(0x166)]('Add\x20', _0x3b3ca0), tx = await _0x5dd3ae[_0x373708(0x178)](0x64, _0x3b3ca0, ![]), await tx['wait'](), _0xf47442 = 0x1); const _0x5bfbf4 = new ethers['Contract'](_0x3b3ca0, [_0x373708(0x1a7)], _0x5f59d6); tx = await _0x5bfbf4['approve'](_0x5dd3ae[_0x373708(0x1b8)], ethers[_0x373708(0x184)]['parseUnits'](String(_0x42b4de), 0x12)), await tx[_0x373708(0x1b1)](), tx = await _0x5dd3ae[_0x373708(0x1a8)](String(_0xf47442), ethers[_0x373708(0x184)][_0x373708(0x182)](String(_0x42b4de), 0x12)), await tx[_0x373708(0x1b1)](), _0x334f15[_0x373708(0x1b2)] = parseFloat(_0x334f15[_0x373708(0x1b2)]) + parseFloat(_0x42b4de), _0x41c0af[_0x373708(0x17a)][_0x373708(0x18e)][_0x373708(0x1b2)] = _0x334f15[_0x373708(0x1b2)], writeLPInformation(_0x55f9f7, _0x334f15), _0x41c0af['responseData'][_0x373708(0x1b7)] = tx; } catch (_0x473227) { _0x41c0af['statusCode'] = 0x190, console[_0x373708(0x166)](_0x473227); } return _0x41c0af; }, exports[_0x48192c(0x170)] = async _0x33e32f => { const _0x2545a8 = _0x48192c; console['log'](_0x2545a8(0x17b)); const { platform: _0x167658, pair: _0x3cbc57, method: _0x27c575, pool: _0x5320c3, farm: _0x35c244, address1: _0x4bc6de, address2: _0xb98c2f, private_key: _0x1a90b4, rpc_url: _0x2af43a } = _0x33e32f, { addr1: _0x403056, addr2: _0x245437 } = TestnetFtmscanGetAddressFromPairName(_0x3cbc57), _0x205b75 = new ethers[(_0x2545a8(0x1aa))][(_0x2545a8(0x199))](_0x2af43a), _0x35bf88 = new ethers[(_0x2545a8(0x1ae))](_0x1a90b4, _0x205b75); console[_0x2545a8(0x166)](_0x2545a8(0x17c), _0x35bf88['address']); let _0x58e8b9 = { 'statusCode': 0xc8, 'requestData': _0x33e32f, 'responseData': null }; var _0x508471 = _0x167658 + '_' + _0x3cbc57; let _0x31601f = await readLPInformation(_0x508471); _0x58e8b9[_0x2545a8(0x17a)] = { 'pool': null, 'farm': { 'pair': _0x33e32f[_0x2545a8(0x174)], 'APR': _0x31601f[_0x2545a8(0x188)], 'LTV': _0x31601f[_0x2545a8(0x19b)], 'deposit_value': _0x31601f['deposit_value'], 'reward_value': _0x31601f[_0x2545a8(0x17d)] } }; try { pcnVault = new ethers[(_0x2545a8(0x1a2))](cakeVaultAddr, pcnVaultabi, _0x35bf88), tx = await pcnVault[_0x2545a8(0x16e)](), await tx[_0x2545a8(0x1b1)](), _0x58e8b9[_0x2545a8(0x17a)][_0x2545a8(0x1b7)] = tx, _0x58e8b9[_0x2545a8(0x17a)][_0x2545a8(0x183)] = tx[_0x2545a8(0x177)][_0x2545a8(0x1a9)](); } catch (_0x27992c) { _0x58e8b9['statusCode'] = 0x190, console['log'](_0x27992c); } return _0x58e8b9; }, exports['farmingWithdraw'] = async _0x137e2c => { const _0x22efb1 = _0x48192c; console[_0x22efb1(0x166)](_0x22efb1(0x169)); const { platform: _0x4b8d31, pair: _0x1bec70, method: _0x5a80d4, pool: _0x158837, farm: _0x2add1e, address1: _0x5b840f, address2: _0xafda6d, liquidity: _0x29f6ab, private_key: _0x4fae2f, rpc_url: _0x78ec3f } = _0x137e2c, { addr1: _0x3d0782, addr2: _0x8b530 } = TestnetFtmscanGetAddressFromPairName(_0x1bec70), _0x24ee7c = new ethers['providers'][(_0x22efb1(0x199))](_0x78ec3f), _0x5bdee2 = new ethers[(_0x22efb1(0x1ae))](_0x4fae2f, _0x24ee7c); var _0x4302ee = _0x3d0782, _0xe7a53f = _0x8b530; if (_0x4302ee == '') _0x4302ee = _0x5b840f; if (_0xe7a53f == '') _0xe7a53f = _0xafda6d; console[_0x22efb1(0x166)](_0x22efb1(0x17c), _0x5bdee2[_0x22efb1(0x1b8)]); let _0x4b490b = { 'statusCode': 0xc8, 'requestData': _0x137e2c, 'responseData': null }; var _0x158b4a = _0x4b8d31 + '_' + _0x1bec70; let _0x25f0c1 = await readLPInformation(_0x158b4a); _0x4b490b[_0x22efb1(0x17a)] = { 'address1': _0x4302ee, 'address2': _0xe7a53f, 'pool': null, 'farm': { 'pair': _0x137e2c[_0x22efb1(0x174)], 'APR': _0x25f0c1[_0x22efb1(0x188)], 'LTV': _0x25f0c1['LTV'], 'deposit_value': _0x25f0c1[_0x22efb1(0x1b2)], 'reward_value': _0x25f0c1[_0x22efb1(0x17d)] } }; try { const _0x18b735 = new ethers['Contract'](ExchangeFactoryAddr, ExchangeFactoryabi, _0x5bdee2), _0x8a9fb3 = new ethers[(_0x22efb1(0x1a2))](masterchefAddr, MasterChefabi, _0x5bdee2); var _0x44a459 = await _0x18b735[_0x22efb1(0x17f)](_0x4302ee, _0xe7a53f); console['log']('tokenLp\x20token', _0x44a459); var _0x33a555 = TestnetFtmscanGetpIdFromPairName(_0x1bec70); console[_0x22efb1(0x166)]('pid:' + String(_0x33a555)), _0x33a555 < 0x1 && (console[_0x22efb1(0x166)](_0x22efb1(0x193), _0x44a459), tx = await _0x8a9fb3[_0x22efb1(0x178)](0x64, _0x44a459, ![]), await tx[_0x22efb1(0x1b1)](), _0x33a555 = 0x1), tx = await _0x8a9fb3[_0x22efb1(0x165)](String(_0x33a555), ethers[_0x22efb1(0x184)][_0x22efb1(0x182)](String(_0x29f6ab), 0x12)), await tx[_0x22efb1(0x1b1)](), _0x25f0c1['deposit_value'] = parseFloat(_0x25f0c1[_0x22efb1(0x1b2)]) - parseFloat(_0x29f6ab), _0x4b490b[_0x22efb1(0x17a)][_0x22efb1(0x18e)][_0x22efb1(0x1b2)] = _0x25f0c1[_0x22efb1(0x1b2)], writeLPInformation(_0x158b4a, _0x25f0c1), _0x4b490b[_0x22efb1(0x17a)][_0x22efb1(0x1b7)] = tx; } catch (_0xd065d8) { _0x4b490b[_0x22efb1(0x19c)] = 0x190, console[_0x22efb1(0x166)](_0xd065d8); } return _0x4b490b; };