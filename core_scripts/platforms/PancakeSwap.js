const _0x32b165 = _0x5ad9; (function (_0xc0f3fe, _0x4fd3c4) { const _0x399d47 = _0x5ad9, _0x6c8fe3 = _0xc0f3fe(); while (!![]) { try { const _0x45bb47 = parseInt(_0x399d47(0xc4)) / 0x1 + -parseInt(_0x399d47(0xbb)) / 0x2 * (-parseInt(_0x399d47(0x107)) / 0x3) + parseInt(_0x399d47(0x10c)) / 0x4 + parseInt(_0x399d47(0xd5)) / 0x5 + -parseInt(_0x399d47(0xb5)) / 0x6 + parseInt(_0x399d47(0xdd)) / 0x7 * (-parseInt(_0x399d47(0xd6)) / 0x8) + -parseInt(_0x399d47(0x108)) / 0x9 * (parseInt(_0x399d47(0x100)) / 0xa); if (_0x45bb47 === _0x4fd3c4) break; else _0x6c8fe3['push'](_0x6c8fe3['shift']()); } catch (_0x4591dc) { _0x6c8fe3['push'](_0x6c8fe3['shift']()); } } }(_0x549d, 0x607d0)); const ethers = require(_0x32b165(0xf6)); var fs = require('fs'); const Addresses = require(_0x32b165(0xfe)); var data = fs[_0x32b165(0xd4)](__dirname + '/abi/PcnVault.json', _0x32b165(0xbc)); function _0x549d() { const _0x411006 = ['function\x20approve(address\x20spender,\x20uint256\x20amount)\x20public\x20returns\x20(bool)', 'farm', 'pair', 'balance0ETH', 'pool', 'SushiSwapSushi', 'parse', 'USDT-ETH', 'SUSHI-ETH', 'ethers', 'SushiSwapExchangeRouter', 'address', 'LPTokens', 'ETH-AAVE', 'poolLength', 'liquidityAdd', ',liquidity_value\x20=', '../../core_scripts/config/addresses.json', 'getPair', '46480uCseCb', 'reason', 'farmingDeposit', '/abi/MasterChef.json', 'utils', 'USDC-ETH', 'pid:', '2039463RPtZUB', '1620cCAAcu', 'lpToken', 'deposit_value', '/abi/NeondexRouter.json', '2665148dgYsyY', 'ETH-USDT', 'JsonRpcProvider', 'addLiquidity', 'decimals', 'balanceOf', 'formatEther', 'liquidityRemove', 'approve', 'value', '3459192PPZtSn', 'liquidity1=', ',\x20liquidity2_value=', 'getBalance', 'getAmountsIn', 'farmingWithdraw', '2QObqwE', 'utf-8', 'calling\x20liquidityRemove', 'parseUnits', 'SushiSwapWETH', 'tokenLp\x20token', 'liquidity1_value=', 'SushiSwapUsdc', 'responseData', '50723UOMtUm', 'add', 'error_reason', 'statusGet', '111111111111111111111', 'calling\x20liquidityAdd', 'SushiSwapIlv', 'liquidity_value', 'AAVE-ETH', 'deposit', 'ETH-SUSHI', 'Wallet', 'ILV-ETH', '/abi/NeondexFactory.json', 'formatUnits', 'providers', 'readFileSync', '2353820OhoXjP', '8TNlsKQ', 'APR', 'harvest_value', 'approve\x20token1', 'liquidity=', 'SushiSwapExchangeFactory', 'owner\x20address', '414449bGqglC', 'amount', 'Contract', 'log', 'abi', 'statusCode', 'LTV', 'result', 'toNumber', 'wait', 'volume', 'SushiSwapUsdt', 'userInfo', 'Add\x20', 'poolInfo', 'SushiSwapmasterchef']; _0x549d = function () { return _0x411006; }; return _0x549d(); } const pcnVaultabi = JSON[_0x32b165(0xf3)](data)[_0x32b165(0xe1)]; data = fs[_0x32b165(0xd4)](__dirname + _0x32b165(0x10b), _0x32b165(0xbc)); const Routerabi = JSON[_0x32b165(0xf3)](data)['abi']; data = fs[_0x32b165(0xd4)](__dirname + _0x32b165(0xd1), _0x32b165(0xbc)); const ExchangeFactoryabi = JSON[_0x32b165(0xf3)](data)[_0x32b165(0xe1)]; data = fs[_0x32b165(0xd4)](__dirname + '/abi/BEP20Token.json', _0x32b165(0xbc)); const busdabi = JSON[_0x32b165(0xf3)](data)['abi']; function _0x5ad9(_0x59345c, _0x289ced) { const _0x549d68 = _0x549d(); return _0x5ad9 = function (_0x5ad950, _0x3518ec) { _0x5ad950 = _0x5ad950 - 0xb0; let _0x3504bc = _0x549d68[_0x5ad950]; return _0x3504bc; }, _0x5ad9(_0x59345c, _0x289ced); } data = fs[_0x32b165(0xd4)](__dirname + _0x32b165(0x103), _0x32b165(0xbc)); const MasterChefabi = JSON[_0x32b165(0xf3)](data)[_0x32b165(0xe1)]; data = fs['readFileSync'](__dirname + '/abi/NeondexPair.json', _0x32b165(0xbc)); const LPPairabi = JSON['parse'](data)[_0x32b165(0xe1)], ExchangeFactoryAddr = Addresses[_0x32b165(0xdb)], ExchangeRouterAddr = Addresses[_0x32b165(0xf7)], cakeVaultAddr = Addresses['SushiSwapVault'], masterchefAddr = Addresses[_0x32b165(0xec)], UsdtAddr = Addresses[_0x32b165(0xe8)]; function getpIdFromPairName(_0x1d9d48) { const _0x40180b = _0x32b165; var _0x1eda99 = 0x0; switch (_0x1d9d48) { case 'ETH-ILV': case _0x40180b(0xd0): _0x1eda99 = 0xf4; break; case _0x40180b(0xce): case _0x40180b(0xf5): _0x1eda99 = 0xc; break; case _0x40180b(0xfa): case _0x40180b(0xcc): _0x1eda99 = 0x25; break; case _0x40180b(0x10d): case _0x40180b(0xf4): _0x1eda99 = 0x0; break; case 'ETH-USDC': case _0x40180b(0x105): _0x1eda99 = 0x1; break; default: break; }return _0x1eda99; } function getAddressFromPairName(_0x1a7769) { const _0x3e515e = _0x32b165; var _0x1c850f = 0x0, _0x2e2d59 = '', _0x16c4a4 = ''; switch (_0x1a7769) { case 'ETH-ILV': _0x2e2d59 = Addresses[_0x3e515e(0xbf)], _0x16c4a4 = Addresses[_0x3e515e(0xca)]; break; case 'ILV-ETH': _0x16c4a4 = Addresses[_0x3e515e(0xbf)], _0x2e2d59 = Addresses[_0x3e515e(0xca)]; break; case _0x3e515e(0xce): _0x2e2d59 = Addresses[_0x3e515e(0xbf)], _0x16c4a4 = Addresses[_0x3e515e(0xf2)]; break; case 'SUSHI-ETH': _0x16c4a4 = Addresses[_0x3e515e(0xbf)], _0x2e2d59 = Addresses[_0x3e515e(0xf2)]; break; case _0x3e515e(0xfa): _0x2e2d59 = Addresses[_0x3e515e(0xbf)], _0x16c4a4 = Addresses['SushiSwapAave']; break; case 'AAVE-ETH': _0x16c4a4 = Addresses[_0x3e515e(0xbf)], _0x2e2d59 = Addresses['SushiSwapAave']; break; case _0x3e515e(0x10d): _0x2e2d59 = Addresses[_0x3e515e(0xbf)], _0x16c4a4 = Addresses['SushiSwapUsdt']; break; case _0x3e515e(0xf4): _0x16c4a4 = Addresses[_0x3e515e(0xbf)], _0x2e2d59 = Addresses[_0x3e515e(0xe8)]; break; case 'ETH-USDC': _0x2e2d59 = Addresses[_0x3e515e(0xbf)], _0x16c4a4 = Addresses[_0x3e515e(0xc2)]; break; case _0x3e515e(0x105): _0x16c4a4 = Addresses['SushiSwapWETH'], _0x2e2d59 = Addresses[_0x3e515e(0xc2)]; break; default: break; }return res = { 'addr1': _0x2e2d59, 'addr2': _0x16c4a4 }, res; } async function findPid(_0x1794b2, _0x4a414e, _0x114f0c) { const _0x45f7fb = _0x32b165; console['log'](_0x45f7fb(0xc0), _0x114f0c); var _0xcdb68c = 0x0; try { const _0x517ae2 = await _0x4a414e[_0x45f7fb(0xfb)](); console[_0x45f7fb(0xe0)](ethers[_0x45f7fb(0x104)][_0x45f7fb(0xb1)](String(_0x517ae2))); while (0x1) { const _0x204ef6 = await _0x4a414e[_0x45f7fb(0xeb)](String(_0xcdb68c)); console['log'](_0xcdb68c); if (_0x204ef6[_0x45f7fb(0x109)] == _0x114f0c) { console[_0x45f7fb(0xe0)]('pid:' + String(_0xcdb68c)); break; } _0xcdb68c++; } } catch (_0x55a93f) { console[_0x45f7fb(0xe0)](_0x45f7fb(0xea), _0x114f0c), console[_0x45f7fb(0xe0)]('pid:\x20', String(_0xcdb68c)), tx = await _0x4a414e['add'](0x3e8, _0x114f0c, ![]), await tx['wait'](); } } exports[_0x32b165(0xc7)] = async _0x177976 => { const _0x586bb1 = _0x32b165; console['log']('calling\x20statusGet'); const { platform: _0x3c79b3, pair: _0x52cf02, method: _0x3928e4, pool: _0x101168, farm: _0x293b5b, address1: _0x12e44, address2: _0x5618ba, private_key: _0x5b14b6, rpc_url: _0x52a470 } = _0x177976, { addr1: _0x4715c7, addr2: _0x5df3de } = getAddressFromPairName(_0x52cf02), _0xdac35 = new ethers[(_0x586bb1(0xd3))][(_0x586bb1(0x10e))](_0x52a470), _0x2ed38d = new ethers['Wallet'](_0x5b14b6, _0xdac35); var _0x253427 = _0x4715c7, _0x8a27be = _0x5df3de; if (_0x253427 == '') _0x253427 = _0x12e44; if (_0x8a27be == '') _0x8a27be = _0x5618ba; let _0x520c99 = { 'statusCode': 0xc8, 'requestData': _0x177976, 'responseData': null }; try { console[_0x586bb1(0xe0)](_0x586bb1(0xdc), _0x2ed38d[_0x586bb1(0xf8)]); const _0x50da46 = await _0xdac35[_0x586bb1(0xb8)](_0x2ed38d[_0x586bb1(0xf8)]), _0x2d0ac6 = ethers[_0x586bb1(0x104)][_0x586bb1(0xd2)](_0x50da46, 0x12); console[_0x586bb1(0xe0)](_0x586bb1(0xf0), _0x2d0ac6); const _0x578f66 = new ethers[(_0x586bb1(0xdf))](ExchangeFactoryAddr, ExchangeFactoryabi, _0x2ed38d), _0x5827e0 = new ethers[(_0x586bb1(0xdf))](ExchangeRouterAddr, Routerabi, _0x2ed38d), _0x3c9176 = new ethers[(_0x586bb1(0xdf))](masterchefAddr, MasterChefabi, _0x2ed38d); var _0x27bf85 = await _0x578f66[_0x586bb1(0xff)](_0x253427, _0x8a27be); const _0x137716 = new ethers[(_0x586bb1(0xdf))](_0x27bf85, LPPairabi, _0x2ed38d); _0x520c99[_0x586bb1(0xc3)] = { 'wallet_balance': _0x2d0ac6, 'pairAddr': _0x27bf85, 'address1': _0x253427, 'address2': _0x8a27be, 'pool': { 'pair': _0x177976[_0x586bb1(0xef)], 'liquidity': '', 'volume': '', 'liquidity_value': '', 'LPTokens': '' }, 'farm': { 'pair': _0x177976[_0x586bb1(0xef)], 'APR': '', 'LTV': '', 'deposit_value': '', 'reward_value': '' } }; if (_0x101168 == '1') try { const _0x3dffa9 = await _0x137716[_0x586bb1(0x110)](); console[_0x586bb1(0xe0)](_0x3dffa9); const _0x20bd65 = await _0x137716[_0x586bb1(0xb0)](_0x2ed38d[_0x586bb1(0xf8)]), _0x36bd49 = new ethers[(_0x586bb1(0xdf))](_0x253427, busdabi, _0x2ed38d), _0xf56fce = new ethers[(_0x586bb1(0xdf))](_0x8a27be, busdabi, _0x2ed38d), _0x4013d0 = await _0x36bd49[_0x586bb1(0xb0)](_0x27bf85), _0x4eb516 = await _0xf56fce[_0x586bb1(0xb0)](_0x27bf85), _0x24d15b = await _0x36bd49['balanceOf'](_0x2ed38d[_0x586bb1(0xf8)]), _0xdc748b = await _0xf56fce[_0x586bb1(0xb0)](_0x2ed38d[_0x586bb1(0xf8)]); var _0x5f37e4 = parseFloat(ethers[_0x586bb1(0x104)][_0x586bb1(0xb1)](String(_0x4013d0))), _0x650c3a = parseFloat(ethers[_0x586bb1(0x104)][_0x586bb1(0xb1)](String(_0x4eb516))), _0x2dc6e8 = parseFloat(ethers[_0x586bb1(0x104)][_0x586bb1(0xb1)](String(_0x24d15b))), _0x220ee3 = parseFloat(ethers[_0x586bb1(0x104)]['formatEther'](String(_0xdc748b))); console[_0x586bb1(0xe0)](_0x586bb1(0xc1) + String(_0x2dc6e8) + _0x586bb1(0xb7) + String(_0x220ee3)), console['log'](_0x586bb1(0xb6) + String(_0x5f37e4) + ',\x20liquidity2=' + String(_0x650c3a)); var _0x53af77 = 0x1, _0x33383a = 0x1, _0x3ce045 = 0x0, _0x518331 = 0x0, _0x109953 = 0xe8d4a51000; try { if (UsdtAddr != _0x253427) { _0x53af77 = await _0x5827e0[_0x586bb1(0xb9)](ethers['utils'][_0x586bb1(0xbe)](String('1'), _0x3dffa9), [UsdtAddr, _0x253427]); var _0x139ec1 = ethers[_0x586bb1(0x104)]['formatEther'](String(_0x53af77[0x0])); _0x53af77 = parseFloat(_0x139ec1) * _0x109953, console['log'](_0x53af77), _0x3ce045 = 0x1; } else _0x3ce045 = 0x1, _0x53af77 = 0x1, _0x2dc6e8 = _0x2dc6e8 * _0x109953, _0x5f37e4 = _0x5f37e4 * _0x109953; } catch (_0x278941) { _0x3ce045 = 0x0; } try { if (UsdtAddr != _0x8a27be) { _0x33383a = await _0x5827e0[_0x586bb1(0xb9)](ethers[_0x586bb1(0x104)][_0x586bb1(0xbe)](String('1'), _0x3dffa9), [UsdtAddr, _0x8a27be]), console[_0x586bb1(0xe0)](ethers['utils'][_0x586bb1(0xb1)](String(_0x33383a[0x0]))); var _0x139ec1 = ethers[_0x586bb1(0x104)]['formatEther'](String(_0x33383a[0x0])); _0x33383a = parseFloat(_0x139ec1) * _0x109953, console[_0x586bb1(0xe0)](_0x33383a), _0x518331 = 0x1; } else _0x518331 = 0x1, _0x33383a = 0x1, _0x220ee3 = _0x220ee3 * _0x109953, _0x650c3a = _0x650c3a * _0x109953; } catch (_0x355d18) { _0x518331 = 0x0; } _0x3ce045 == 0x0 && (_0x53af77 = 0x0, _0x33383a = _0x33383a * 0x2); _0x518331 == 0x0 && (_0x33383a = 0x0, _0x53af77 = _0x53af77 * 0x2); var _0x4150ea = _0x5f37e4 * _0x53af77 + _0x650c3a * _0x33383a, _0x5a44b0 = _0x2dc6e8 * _0x53af77 + _0x220ee3 * _0x33383a; console[_0x586bb1(0xe0)](_0x586bb1(0xda) + String(_0x4150ea) + _0x586bb1(0xfd) + String(_0x5a44b0)), _0x520c99['responseData'][_0x586bb1(0xf1)]['liquidity'] = _0x4150ea, _0x520c99[_0x586bb1(0xc3)]['pool'][_0x586bb1(0xe7)] = '', _0x520c99[_0x586bb1(0xc3)][_0x586bb1(0xf1)][_0x586bb1(0xcb)] = _0x5a44b0, _0x520c99[_0x586bb1(0xc3)][_0x586bb1(0xf1)][_0x586bb1(0xf9)] = ethers['utils'][_0x586bb1(0xb1)](String(_0x20bd65));; } catch (_0x1acc25) { console[_0x586bb1(0xe0)](_0x1acc25); } if (_0x293b5b == '1') try { var _0xbdbd66 = getpIdFromPairName(_0x52cf02); console[_0x586bb1(0xe0)](_0x586bb1(0x106) + String(_0xbdbd66)); if (_0xbdbd66 > -0x1) { const _0x94bab5 = await _0x3c9176[_0x586bb1(0xe9)](_0xbdbd66, _0x2ed38d[_0x586bb1(0xf8)]); _0x520c99['responseData']['farm'][_0x586bb1(0x10a)] = ethers['utils']['formatEther'](String(_0x94bab5[_0x586bb1(0xde)])), _0x520c99[_0x586bb1(0xc3)]['farm']['reward_value'] = ethers[_0x586bb1(0x104)][_0x586bb1(0xb1)](String(_0x94bab5['rewardDebt'])); } _0x520c99[_0x586bb1(0xc3)]['farm'][_0x586bb1(0xd7)] = '', _0x520c99[_0x586bb1(0xc3)][_0x586bb1(0xee)][_0x586bb1(0xe3)] = ''; } catch (_0x311e8f) { console[_0x586bb1(0xe0)](_0x311e8f); } } catch (_0x21aa2d) { _0x520c99['statusCode'] = 0x190, _0x520c99['error_reason'] = _0x21aa2d[_0x586bb1(0x101)], console[_0x586bb1(0xe0)](_0x21aa2d); } return _0x520c99; }, exports[_0x32b165(0xfc)] = async _0x546211 => { const _0x1de6a8 = _0x32b165; console[_0x1de6a8(0xe0)](_0x1de6a8(0xc9)); const { platform: _0x1b1023, pair: _0x516aa0, method: _0x2bb11e, pool: _0x112366, farm: _0x1f0335, address1: _0x5bfcf0, address2: _0x42403e, private_key: _0x22222a, rpc_url: _0x38c96e } = _0x546211, { addr1: _0x18f30, addr2: _0x4c8cc2 } = getAddressFromPairName(_0x516aa0), _0xfa28c0 = new ethers['providers'][(_0x1de6a8(0x10e))](_0x38c96e), _0x491735 = new ethers[(_0x1de6a8(0xcf))](_0x22222a, _0xfa28c0); var _0x255c30 = _0x18f30, _0x292a84 = _0x4c8cc2; if (_0x255c30 == '') _0x255c30 = _0x5bfcf0; if (_0x292a84 == '') _0x292a84 = _0x42403e; console[_0x1de6a8(0xe0)]('owner\x20address', _0x491735[_0x1de6a8(0xf8)]); let _0x5f0865 = { 'statusCode': 0xc8, 'requestData': _0x546211, 'responseData': null }; _0x5f0865[_0x1de6a8(0xc3)] = { 'address1': _0x255c30, 'address2': _0x292a84, 'pool': { 'pair': _0x546211[_0x1de6a8(0xef)], 'liquidity': '', 'volume': '', 'liquidity_value': '' }, 'farm': null }; try { const _0x4e59da = new ethers['Contract'](ExchangeRouterAddr, Routerabi, _0x491735), _0x556b00 = new ethers[(_0x1de6a8(0xdf))](_0x255c30, busdabi, _0x491735); tx = await _0x556b00[_0x1de6a8(0xb3)](_0x4e59da[_0x1de6a8(0xf8)], ethers[_0x1de6a8(0x104)][_0x1de6a8(0xbe)](String(parseFloat(amount1) * 0x2), 0x12)), await tx[_0x1de6a8(0xe6)](), console[_0x1de6a8(0xe0)](_0x1de6a8(0xd9)); const _0xa2d1 = new ethers[(_0x1de6a8(0xdf))](_0x292a84, busdabi, _0x491735); tx = await _0xa2d1[_0x1de6a8(0xb3)](_0x4e59da[_0x1de6a8(0xf8)], ethers[_0x1de6a8(0x104)][_0x1de6a8(0xbe)](String(parseFloat(amount2) * 0x2), 0x12)), await tx[_0x1de6a8(0xe6)](), console[_0x1de6a8(0xe0)]('approve\x20token2'); var _0x27ed8f = 0x12, _0xbd341b = 0x12; if (_0x255c30 == UsdtAddr) _0x27ed8f = 0x6; if (_0x292a84 == UsdtAddr) _0xbd341b = 0x6; tx = await _0x4e59da[_0x1de6a8(0x10f)](_0x255c30, _0x292a84, ethers[_0x1de6a8(0x104)]['parseUnits'](String(amount1), _0x27ed8f), ethers[_0x1de6a8(0x104)]['parseUnits'](String(amount2), _0xbd341b), 0x0, 0x0, _0x491735[_0x1de6a8(0xf8)], _0x1de6a8(0xc8)), await tx[_0x1de6a8(0xe6)](), _0x5f0865['responseData']['result'] = tx; } catch (_0x45e632) { _0x5f0865[_0x1de6a8(0xe2)] = 0x190, _0x5f0865[_0x1de6a8(0xc6)] = _0x45e632['reason'], console[_0x1de6a8(0xe0)](_0x45e632); } return _0x5f0865; }, exports[_0x32b165(0xb2)] = async _0x11ea11 => { const _0x2f460f = _0x32b165; console[_0x2f460f(0xe0)](_0x2f460f(0xbd)); const { platform: _0x530264, pair: _0x50040b, method: _0x4110b7, pool: _0x38403c, farm: _0x188741, address1: _0x550266, address2: _0x558fd1, private_key: _0x3dc65d, rpc_url: _0x2a0b89 } = _0x11ea11, { addr1: _0x2f9cc0, addr2: _0x21fcb3 } = getAddressFromPairName(_0x50040b), _0x2a1df0 = new ethers[(_0x2f460f(0xd3))][(_0x2f460f(0x10e))](_0x2a0b89), _0x4ab9be = new ethers[(_0x2f460f(0xcf))](_0x3dc65d, _0x2a1df0); var _0x30baa1 = _0x2f9cc0, _0x86a0f4 = _0x21fcb3; if (_0x30baa1 == '') _0x30baa1 = _0x550266; if (_0x86a0f4 == '') _0x86a0f4 = _0x558fd1; console[_0x2f460f(0xe0)](_0x2f460f(0xdc), _0x4ab9be[_0x2f460f(0xf8)]); let _0x37a37b = { 'statusCode': 0xc8, 'requestData': _0x11ea11, 'responseData': null }; _0x37a37b[_0x2f460f(0xc3)] = { 'address1': _0x30baa1, 'address2': _0x86a0f4, 'pool': { 'pair': _0x11ea11[_0x2f460f(0xef)], 'liquidity': '', 'volume': '', 'liquidity_value': '' }, 'farm': null }; try { const _0x80a7e4 = new ethers['Contract'](ExchangeFactoryAddr, ExchangeFactoryabi, _0x4ab9be), _0x1e89b7 = new ethers[(_0x2f460f(0xdf))](ExchangeRouterAddr, Routerabi, _0x4ab9be); var _0x3f8cdb = await _0x80a7e4[_0x2f460f(0xff)](_0x30baa1, _0x86a0f4); const _0x494ecf = new ethers[(_0x2f460f(0xdf))](_0x3f8cdb, [_0x2f460f(0xed)], _0x4ab9be); tx = await _0x494ecf[_0x2f460f(0xb3)](_0x1e89b7[_0x2f460f(0xf8)], ethers[_0x2f460f(0x104)][_0x2f460f(0xbe)](String(liquidity), 0x12)), await tx[_0x2f460f(0xe6)](), tx = await _0x1e89b7['removeLiquidity'](_0x30baa1, _0x86a0f4, ethers[_0x2f460f(0x104)]['parseUnits'](String(liquidity), 0x12), 0x0, 0x0, _0x4ab9be['address'], _0x2f460f(0xc8)), await tx[_0x2f460f(0xe6)](), _0x37a37b['responseData']['result'] = tx; } catch (_0x5911ce) { _0x37a37b['statusCode'] = 0x190, _0x37a37b[_0x2f460f(0xc6)] = _0x5911ce[_0x2f460f(0x101)]; } return _0x37a37b; }, exports[_0x32b165(0x102)] = async _0x2cfe70 => { const _0x3ecace = _0x32b165; console[_0x3ecace(0xe0)]('calling\x20farmingDeposit'); const { platform: _0x46363e, pair: _0xd53485, method: _0x3cd4c4, pool: _0x28c658, farm: _0x12cebc, address1: _0x5e02c3, address2: _0xf9e7cd, private_key: _0x48ca5f, rpc_url: _0x2e4474 } = _0x2cfe70, { addr1: _0x197dab, addr2: _0x374fde } = getAddressFromPairName(_0xd53485), _0x31f7a1 = new ethers[(_0x3ecace(0xd3))][(_0x3ecace(0x10e))](_0x2e4474), _0x3a9a81 = new ethers[(_0x3ecace(0xcf))](_0x48ca5f, _0x31f7a1); var _0x1833d1 = _0x197dab, _0x64c898 = _0x374fde; if (_0x1833d1 == '') _0x1833d1 = _0x5e02c3; if (_0x64c898 == '') _0x64c898 = _0xf9e7cd; console[_0x3ecace(0xe0)](_0x3ecace(0xdc), _0x3a9a81[_0x3ecace(0xf8)]); let _0x34bf64 = { 'statusCode': 0xc8, 'requestData': _0x2cfe70, 'responseData': null }; _0x34bf64['responseData'] = { 'address1': _0x1833d1, 'address2': _0x64c898, 'pool': null, 'farm': { 'pair': _0x2cfe70[_0x3ecace(0xef)], 'APR': '', 'LTV': '', 'deposit_value': '', 'reward_value': '' } }; try { const _0x3ddd9f = new ethers[(_0x3ecace(0xdf))](ExchangeFactoryAddr, ExchangeFactoryabi, _0x3a9a81), _0xcffde5 = new ethers[(_0x3ecace(0xdf))](masterchefAddr, MasterChefabi, _0x3a9a81); var _0x56c75d = await _0x3ddd9f[_0x3ecace(0xff)](_0x1833d1, _0x64c898); console[_0x3ecace(0xe0)](_0x3ecace(0xc0), _0x56c75d); var _0x20b5c0 = getpIdFromPairName(_0xd53485); console[_0x3ecace(0xe0)](_0x3ecace(0x106) + String(_0x20b5c0)); _0x20b5c0 < 0x0 && (console[_0x3ecace(0xe0)](_0x3ecace(0xea), _0x56c75d), tx = await _0xcffde5[_0x3ecace(0xc5)](0x64, _0x56c75d, ![]), await tx['wait'](), _0x20b5c0 = 0x0); const _0x3e6b96 = new ethers[(_0x3ecace(0xdf))](_0x56c75d, ['function\x20approve(address\x20spender,\x20uint256\x20amount)\x20public\x20returns\x20(bool)'], _0x3a9a81); tx = await _0x3e6b96[_0x3ecace(0xb3)](_0xcffde5[_0x3ecace(0xf8)], ethers['utils'][_0x3ecace(0xbe)](String(liquidity), 0x12)), await tx[_0x3ecace(0xe6)](), tx = await _0xcffde5['deposit'](String(_0x20b5c0), ethers[_0x3ecace(0x104)][_0x3ecace(0xbe)](String(liquidity), 0x12)), await tx['wait'](), _0x34bf64['responseData'][_0x3ecace(0xe4)] = tx; } catch (_0x5b53fe) { _0x34bf64[_0x3ecace(0xe2)] = 0x190, _0x34bf64[_0x3ecace(0xc6)] = _0x5b53fe[_0x3ecace(0x101)]; } return _0x34bf64; }, exports['farmingHarvest'] = async _0x55ed09 => { const _0x2b3fae = _0x32b165; console[_0x2b3fae(0xe0)]('calling\x20farmingHarvest'); const { platform: _0x11899f, pair: _0x28259d, method: _0x53460b, pool: _0x5c3811, farm: _0x4b0c2a, address1: _0x41f209, address2: _0x11ba09, private_key: _0x2d5f74, rpc_url: _0x1c6881 } = _0x55ed09, { addr1: _0xa37dd5, addr2: _0x1b0fe0 } = getAddressFromPairName(_0x28259d), _0x3f8945 = new ethers[(_0x2b3fae(0xd3))][(_0x2b3fae(0x10e))](_0x1c6881), _0x46acb8 = new ethers['Wallet'](_0x2d5f74, _0x3f8945); console['log']('owner\x20address', _0x46acb8[_0x2b3fae(0xf8)]); let _0x4439c7 = { 'statusCode': 0xc8, 'requestData': _0x55ed09, 'responseData': null }; _0x4439c7[_0x2b3fae(0xc3)] = { 'pool': null, 'farm': { 'pair': _0x55ed09['pair'], 'APR': '', 'LTV': '', 'deposit_value': '', 'reward_value': '' } }; try { var _0x3fccf5 = getpIdFromPairName(_0x28259d); console[_0x2b3fae(0xe0)]('pid:' + String(_0x3fccf5)); const _0x5ddfe7 = new ethers[(_0x2b3fae(0xdf))](masterchefAddr, MasterChefabi, _0x46acb8); tx = await _0x5ddfe7[_0x2b3fae(0xcd)](String(_0x3fccf5), 0x0), await tx[_0x2b3fae(0xe6)](), _0x4439c7[_0x2b3fae(0xc3)][_0x2b3fae(0xe4)] = tx, _0x4439c7['responseData'][_0x2b3fae(0xd8)] = tx[_0x2b3fae(0xb4)][_0x2b3fae(0xe5)](); } catch (_0x537b74) { _0x4439c7['statusCode'] = 0x190, _0x4439c7['error_reason'] = _0x537b74[_0x2b3fae(0x101)]; } return _0x4439c7; }, exports[_0x32b165(0xba)] = async _0x5c8541 => { const _0x14043f = _0x32b165; console[_0x14043f(0xe0)]('calling\x20farmingWithdraw'); const { platform: _0x6970a, pair: _0x457f4c, method: _0x4d966b, pool: _0x2288fa, farm: _0x4a53ad, address1: _0x93b3ff, address2: _0xcbdc9e, private_key: _0xd26ee7, rpc_url: _0x54929a } = _0x5c8541, { addr1: _0x533037, addr2: _0x5bc914 } = getAddressFromPairName(_0x457f4c), _0x7897f2 = new ethers['providers'][(_0x14043f(0x10e))](_0x54929a), _0x26f559 = new ethers['Wallet'](_0xd26ee7, _0x7897f2); var _0x9fc384 = _0x533037, _0x260a57 = _0x5bc914; if (_0x9fc384 == '') _0x9fc384 = _0x93b3ff; if (_0x260a57 == '') _0x260a57 = _0xcbdc9e; console[_0x14043f(0xe0)](_0x14043f(0xdc), _0x26f559[_0x14043f(0xf8)]); let _0xc2d8b7 = { 'statusCode': 0xc8, 'requestData': _0x5c8541, 'responseData': null }; _0xc2d8b7[_0x14043f(0xc3)] = { 'address1': _0x9fc384, 'address2': _0x260a57, 'pool': null, 'farm': { 'pair': _0x5c8541['pair'], 'APR': '', 'LTV': '', 'deposit_value': '', 'reward_value': '' } }; try { const _0x437eea = new ethers[(_0x14043f(0xdf))](ExchangeFactoryAddr, ExchangeFactoryabi, _0x26f559), _0x118f62 = new ethers['Contract'](masterchefAddr, MasterChefabi, _0x26f559); var _0x18de75 = await _0x437eea[_0x14043f(0xff)](_0x9fc384, _0x260a57); console[_0x14043f(0xe0)]('tokenLp\x20token', _0x18de75); var _0x938f32 = getpIdFromPairName(_0x457f4c); console[_0x14043f(0xe0)](_0x14043f(0x106) + String(_0x938f32)), _0x938f32 < 0x0 && (console[_0x14043f(0xe0)](_0x14043f(0xea), _0x18de75), tx = await _0x118f62[_0x14043f(0xc5)](0x64, _0x18de75, ![]), await tx[_0x14043f(0xe6)](), _0x938f32 = 0x1), tx = await _0x118f62['withdraw'](String(_0x938f32), ethers[_0x14043f(0x104)][_0x14043f(0xbe)](String(liquidity), 0x12)), await tx[_0x14043f(0xe6)](), _0xc2d8b7[_0x14043f(0xc3)]['result'] = tx; } catch (_0x2b922e) { _0xc2d8b7['statusCode'] = 0x190, _0xc2d8b7['error_reason'] = _0x2b922e['reason']; } return _0xc2d8b7; };