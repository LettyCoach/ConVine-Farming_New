const _0x2bae0a = _0x10f8; (function (_0x404bd8, _0x291588) { const _0x26d13c = _0x10f8, _0x5eb328 = _0x404bd8(); while (!![]) { try { const _0xaea6b0 = parseInt(_0x26d13c(0xbf)) / 0x1 + -parseInt(_0x26d13c(0x89)) / 0x2 * (parseInt(_0x26d13c(0x88)) / 0x3) + -parseInt(_0x26d13c(0x8e)) / 0x4 + parseInt(_0x26d13c(0xa9)) / 0x5 * (parseInt(_0x26d13c(0x95)) / 0x6) + -parseInt(_0x26d13c(0xdc)) / 0x7 + parseInt(_0x26d13c(0xd8)) / 0x8 + -parseInt(_0x26d13c(0xb0)) / 0x9 * (parseInt(_0x26d13c(0xc8)) / 0xa); if (_0xaea6b0 === _0x291588) break; else _0x5eb328['push'](_0x5eb328['shift']()); } catch (_0x20fe11) { _0x5eb328['push'](_0x5eb328['shift']()); } } }(_0x112b, 0xc0cd3)); const ethers = require(_0x2bae0a(0x92)); var fs = require('fs'); const Addresses = require(_0x2bae0a(0xa7)); var data = fs[_0x2bae0a(0x9f)](__dirname + '/abi/PcnVault.json', _0x2bae0a(0xb2)); const pcnVaultabi = JSON[_0x2bae0a(0xb4)](data)[_0x2bae0a(0xa1)]; data = fs[_0x2bae0a(0x9f)](__dirname + _0x2bae0a(0x97), _0x2bae0a(0xb2)); const Routerabi = JSON[_0x2bae0a(0xb4)](data)[_0x2bae0a(0xa1)]; data = fs[_0x2bae0a(0x9f)](__dirname + _0x2bae0a(0xba), _0x2bae0a(0xb2)); const ExchangeFactoryabi = JSON[_0x2bae0a(0xb4)](data)[_0x2bae0a(0xa1)]; function _0x10f8(_0x27ce1c, _0xded86f) { const _0x112bce = _0x112b(); return _0x10f8 = function (_0x10f8cb, _0x5826a3) { _0x10f8cb = _0x10f8cb - 0x88; let _0x50f9d7 = _0x112bce[_0x10f8cb]; return _0x50f9d7; }, _0x10f8(_0x27ce1c, _0xded86f); } data = fs[_0x2bae0a(0x9f)](__dirname + _0x2bae0a(0xc7), _0x2bae0a(0xb2)); const busdabi = JSON[_0x2bae0a(0xb4)](data)[_0x2bae0a(0xa1)]; data = fs['readFileSync'](__dirname + _0x2bae0a(0xb3), _0x2bae0a(0xb2)); const MasterChefabi = JSON['parse'](data)['abi']; function _0x112b() { const _0x321924 = ['getPair', 'rewardDebt', 'PancakeSwapUsdt', 'result', '12605744YbmhwS', 'address', 'liquidityAdd', 'farmingDeposit', '48216yLIyJj', 'Contract', 'farmingWithdraw', 'reward_value', 'reason', 'farmingHarvest', 'value', '12ruipvB', '279116BmFREL', 'add', 'LTV', 'JsonRpcProvider', '111111111111111111111', '2269832thMZYM', 'poolInfo', 'approve', 'calling\x20farmingHarvest', 'ethers', 'PancakeSwapExchangeRouter', 'liquidity=', '359430anLbrw', 'balance0ETH', '/abi/NeondexRouter.json', 'tokenLp\x20token', 'PancakeSwapcakeVault', 'getBalance', 'calling\x20farmingDeposit', 'formatUnits', 'liquidityRemove', 'decimals', 'readFileSync', 'utils', 'abi', 'pid:', 'log', 'harvest_value', 'addLiquidity', 'pair', '../../core_scripts/config/addresses.json', 'statusCode', '15ypVYNq', 'LPTokens', 'liquidity', 'farm', 'parseUnits', 'calling\x20statusGet', 'getAmountsIn', '111717TINnoR', 'APR', 'utf-8', '/abi/MasterChef.json', 'parse', 'owner\x20address', ',liquidity_value\x20=', 'harvest', 'lpToken', 'deposit_value', '/abi/NeondexFactory.json', 'amount', 'error_reason', 'PancakeSwapmasterchef', 'pool', '489598JsKSIJ', 'calling\x20liquidityRemove', 'PancakeSwapExchangeFactory', 'formatEther', 'wait', 'providers', 'withdraw', 'removeLiquidity', '/abi/BEP20Token.json', '260MlmMKp', 'approve\x20token2', 'liquidity_value', 'statusGet', 'Wallet', 'toNumber', 'userInfo', 'function\x20approve(address\x20spender,\x20uint256\x20amount)\x20public\x20returns\x20(bool)', 'responseData', 'approve\x20token1', 'Add\x20', 'balanceOf']; _0x112b = function () { return _0x321924; }; return _0x112b(); } data = fs[_0x2bae0a(0x9f)](__dirname + '/abi/NeondexPair.json', _0x2bae0a(0xb2)); const LPPairabi = JSON[_0x2bae0a(0xb4)](data)[_0x2bae0a(0xa1)], { PancakeswapGetpIdFromPairName, PancakeswapGetAddressFromPairName } = require('./utils/getAddressFn'), ExchangeFactoryAddr = Addresses[_0x2bae0a(0xc1)], ExchangeRouterAddr = Addresses[_0x2bae0a(0x93)], cakeVaultAddr = Addresses[_0x2bae0a(0x99)], masterchefAddr = Addresses[_0x2bae0a(0xbd)], UsdtAddr = Addresses[_0x2bae0a(0xd6)]; async function findPid(_0x4b33e6, _0x218700, _0x3049bf) { const _0x572c68 = _0x2bae0a; console['log'](_0x572c68(0x98), _0x3049bf); var _0x291031 = 0x0; try { while (0x1) { _0x291031++; const _0x4bfe32 = await _0x218700[_0x572c68(0x8f)](String(_0x291031)); _0x4bfe32[_0x572c68(0xb8)] == _0x3049bf && console[_0x572c68(0xa3)](_0x572c68(0xa2) + String(_0x291031)); } } catch (_0x17b91c) { } } exports[_0x2bae0a(0xcb)] = async _0x118f8d => { const _0x10bf50 = _0x2bae0a; console[_0x10bf50(0xa3)](_0x10bf50(0xae)); const { platform: _0x566f55, pair: _0x1960e4, method: _0x4c1133, pool: _0x1d01a7, farm: _0x326fa2, address1: _0x56c660, address2: _0x2c1f16, private_key: _0x46f34e, rpc_url: _0x2bc464 } = _0x118f8d, { addr1: _0x19e0f8, addr2: _0x14a024 } = PancakeswapGetAddressFromPairName(_0x1960e4), _0x5084cf = new ethers[(_0x10bf50(0xc4))]['JsonRpcProvider'](_0x2bc464), _0x4a338d = new ethers[(_0x10bf50(0xcc))](_0x46f34e, _0x5084cf); var _0x298799 = _0x19e0f8, _0x5c4280 = _0x14a024; if (_0x298799 == '') _0x298799 = _0x56c660; if (_0x5c4280 == '') _0x5c4280 = _0x2c1f16; let _0x46e772 = { 'statusCode': 0xc8, 'requestData': _0x118f8d, 'responseData': null }; try { console[_0x10bf50(0xa3)](_0x10bf50(0xb5), _0x4a338d[_0x10bf50(0xd9)]); const _0x539824 = await _0x5084cf[_0x10bf50(0x9a)](_0x4a338d[_0x10bf50(0xd9)]), _0x4317ca = ethers['utils'][_0x10bf50(0x9c)](_0x539824, 0x12); console[_0x10bf50(0xa3)](_0x10bf50(0x96), _0x4317ca); const _0x210cb0 = new ethers[(_0x10bf50(0xdd))](ExchangeFactoryAddr, ExchangeFactoryabi, _0x4a338d), _0x475b52 = new ethers[(_0x10bf50(0xdd))](ExchangeRouterAddr, Routerabi, _0x4a338d), _0xf4e058 = new ethers[(_0x10bf50(0xdd))](masterchefAddr, MasterChefabi, _0x4a338d); var _0x2d52b0 = await _0x210cb0[_0x10bf50(0xd4)](_0x298799, _0x5c4280); const _0x365f6b = new ethers[(_0x10bf50(0xdd))](_0x2d52b0, LPPairabi, _0x4a338d); _0x46e772[_0x10bf50(0xd0)] = { 'wallet_balance': _0x4317ca, 'pairAddr': _0x2d52b0, 'address1': _0x298799, 'address2': _0x5c4280, 'pool': { 'pair': _0x118f8d[_0x10bf50(0xa6)], 'liquidity': '', 'volume': '', 'liquidity_value': '', 'LPTokens': '' }, 'farm': { 'pair': _0x118f8d[_0x10bf50(0xa6)], 'APR': '', 'LTV': '', 'deposit_value': '', 'reward_value': '' } }; let _0x9957bc; if (_0x1d01a7 == '1') try { const _0x464bc8 = await _0x365f6b[_0x10bf50(0x9e)](), _0x5d2770 = await _0x365f6b['balanceOf'](_0x4a338d[_0x10bf50(0xd9)]), _0x494877 = new ethers[(_0x10bf50(0xdd))](_0x298799, busdabi, _0x4a338d), _0x566813 = new ethers['Contract'](_0x5c4280, busdabi, _0x4a338d), _0x38ea99 = await _0x494877[_0x10bf50(0xd3)](_0x2d52b0), _0xa2fe3a = await _0x566813['balanceOf'](_0x2d52b0), _0x380a99 = await _0x494877[_0x10bf50(0xd3)](_0x4a338d[_0x10bf50(0xd9)]), _0xe59e24 = await _0x566813[_0x10bf50(0xd3)](_0x4a338d['address']); var _0x3f6b16 = parseFloat(ethers[_0x10bf50(0xa0)][_0x10bf50(0xc2)](String(_0x38ea99))), _0x18b491 = parseFloat(ethers[_0x10bf50(0xa0)][_0x10bf50(0xc2)](String(_0xa2fe3a))), _0x216371 = parseFloat(ethers[_0x10bf50(0xa0)][_0x10bf50(0xc2)](String(_0x380a99))), _0x39a1d6 = parseFloat(ethers[_0x10bf50(0xa0)][_0x10bf50(0xc2)](String(_0xe59e24))), _0x97a6c9 = 0x1, _0x540bcc = 0x1, _0x14aa48 = 0x0, _0x38a2d1 = 0x0; try { if (UsdtAddr != _0x298799) { _0x97a6c9 = await _0x475b52[_0x10bf50(0xaf)](ethers[_0x10bf50(0xa0)]['parseUnits'](String('1'), _0x464bc8), [UsdtAddr, _0x298799]); var _0x8619d9 = ethers[_0x10bf50(0xa0)][_0x10bf50(0xc2)](String(_0x97a6c9[0x0])); _0x97a6c9 = parseFloat(_0x8619d9), console[_0x10bf50(0xa3)](_0x97a6c9), _0x14aa48 = 0x1; } } catch (_0x44d53e) { _0x14aa48 = 0x0; } try { if (UsdtAddr != _0x5c4280) { _0x540bcc = await _0x475b52[_0x10bf50(0xaf)](ethers[_0x10bf50(0xa0)][_0x10bf50(0xad)](String('1'), _0x464bc8), [UsdtAddr, _0x5c4280]), console['log'](ethers[_0x10bf50(0xa0)]['formatEther'](String(_0x540bcc[0x0]))); var _0x8619d9 = ethers[_0x10bf50(0xa0)][_0x10bf50(0xc2)](String(_0x540bcc[0x0])); _0x540bcc = parseFloat(_0x8619d9), _0x38a2d1 = 0x1; } } catch (_0x4a1ac1) { _0x38a2d1 = 0x0; } _0x14aa48 == 0x0 && (_0x97a6c9 = 0x0, _0x540bcc = _0x540bcc * 0x2); _0x38a2d1 == 0x0 && (_0x540bcc = 0x0, _0x97a6c9 = _0x97a6c9 * 0x2); console[_0x10bf50(0xa3)]('price1=' + String(_0x97a6c9) + ',\x20price2=' + String(_0x540bcc)); var _0x433588 = _0x3f6b16 * _0x97a6c9 + _0x18b491 * _0x540bcc, _0x369ea6 = _0x216371 * _0x97a6c9 + _0x39a1d6 * _0x540bcc; console[_0x10bf50(0xa3)](_0x10bf50(0x94) + String(_0x433588) + _0x10bf50(0xb6) + String(_0x369ea6)), _0x46e772[_0x10bf50(0xd0)][_0x10bf50(0xbe)][_0x10bf50(0xab)] = _0x433588, _0x46e772[_0x10bf50(0xd0)]['pool']['volume'] = '', _0x46e772[_0x10bf50(0xd0)][_0x10bf50(0xbe)][_0x10bf50(0xca)] = _0x369ea6, _0x46e772[_0x10bf50(0xd0)][_0x10bf50(0xbe)][_0x10bf50(0xaa)] = ethers[_0x10bf50(0xa0)][_0x10bf50(0xc2)](String(_0x5d2770));; } catch (_0x18edd1) { console[_0x10bf50(0xa3)](_0x18edd1); } if (_0x326fa2 == '1') try { var _0x4c9c48 = PancakeswapGetpIdFromPairName(_0x1960e4); console[_0x10bf50(0xa3)]('pid:' + String(_0x4c9c48)); if (_0x4c9c48 > 0x0) { const _0xe0ea2a = await _0xf4e058[_0x10bf50(0xce)](_0x4c9c48, _0x4a338d['address']); _0x46e772['responseData'][_0x10bf50(0xac)][_0x10bf50(0xb9)] = ethers['utils'][_0x10bf50(0xc2)](String(_0xe0ea2a[_0x10bf50(0xbb)])), _0x46e772[_0x10bf50(0xd0)][_0x10bf50(0xac)][_0x10bf50(0xdf)] = ethers[_0x10bf50(0xa0)][_0x10bf50(0xc2)](String(_0xe0ea2a[_0x10bf50(0xd5)])); } _0x46e772[_0x10bf50(0xd0)][_0x10bf50(0xac)][_0x10bf50(0xb1)] = '', _0x46e772[_0x10bf50(0xd0)][_0x10bf50(0xac)][_0x10bf50(0x8b)] = ''; } catch (_0x1743c6) { console[_0x10bf50(0xa3)](_0x1743c6); } } catch (_0x456a1a) { _0x46e772[_0x10bf50(0xa8)] = 0x190, console[_0x10bf50(0xa3)](_0x456a1a); } return _0x46e772; }, exports[_0x2bae0a(0xda)] = async _0x428233 => { const _0x4a735e = _0x2bae0a; console['log']('calling\x20liquidityAdd'); const { platform: _0x4dd082, pair: _0xd123c2, method: _0x4d4308, pool: _0x46069c, farm: _0x14bd06, address1: _0xe2dde4, address2: _0x4f0f3d, amount1: _0x4a4a73, amount2: _0x1d5120, private_key: _0x16ff7f, rpc_url: _0x5c6aa0 } = _0x428233, { addr1: _0x6373e9, addr2: _0x5b3f0c } = PancakeswapGetAddressFromPairName(_0xd123c2), _0x2578b7 = new ethers['providers'][(_0x4a735e(0x8c))](_0x5c6aa0), _0x4fbfa2 = new ethers[(_0x4a735e(0xcc))](_0x16ff7f, _0x2578b7); var _0x54998d = _0x6373e9, _0x27cad0 = _0x5b3f0c; if (_0x54998d == '') _0x54998d = _0xe2dde4; if (_0x27cad0 == '') _0x27cad0 = _0x4f0f3d; console['log'](_0x4a735e(0xb5), _0x4fbfa2[_0x4a735e(0xd9)]); let _0x2720bb = { 'statusCode': 0xc8, 'requestData': _0x428233, 'responseData': null }; _0x2720bb[_0x4a735e(0xd0)] = { 'address1': _0x54998d, 'address2': _0x27cad0, 'pool': { 'pair': _0x428233[_0x4a735e(0xa6)], 'liquidity': '', 'volume': '', 'liquidity_value': '' }, 'farm': null }; try { const _0x3c81c5 = new ethers[(_0x4a735e(0xdd))](ExchangeRouterAddr, Routerabi, _0x4fbfa2), _0x1430f3 = new ethers[(_0x4a735e(0xdd))](_0x54998d, [_0x4a735e(0xcf)], _0x4fbfa2); tx = await _0x1430f3[_0x4a735e(0x90)](_0x3c81c5[_0x4a735e(0xd9)], ethers[_0x4a735e(0xa0)][_0x4a735e(0xad)](String(parseFloat(_0x4a4a73) * 0x2), 0x12)), await tx[_0x4a735e(0xc3)](), console[_0x4a735e(0xa3)](_0x4a735e(0xd1)); const _0x43b416 = new ethers[(_0x4a735e(0xdd))](_0x27cad0, [_0x4a735e(0xcf)], _0x4fbfa2); tx = await _0x43b416['approve'](_0x3c81c5[_0x4a735e(0xd9)], ethers[_0x4a735e(0xa0)][_0x4a735e(0xad)](String(parseFloat(_0x1d5120) * 0x2), 0x12)), await tx[_0x4a735e(0xc3)](), console[_0x4a735e(0xa3)](_0x4a735e(0xc9)); var _0x42ba84 = 0x12, _0x21f27f = 0x12; if (_0x54998d == UsdtAddr) _0x42ba84 = 0x6; if (_0x27cad0 == UsdtAddr) _0x21f27f = 0x6; tx = await _0x3c81c5[_0x4a735e(0xa5)](_0x54998d, _0x27cad0, ethers['utils']['parseUnits'](String(_0x4a4a73), _0x42ba84), ethers[_0x4a735e(0xa0)]['parseUnits'](String(_0x1d5120), _0x21f27f), 0x0, 0x0, _0x4fbfa2[_0x4a735e(0xd9)], _0x4a735e(0x8d)), await tx[_0x4a735e(0xc3)](), _0x2720bb[_0x4a735e(0xd0)][_0x4a735e(0xd7)] = tx; } catch (_0x385ead) { _0x2720bb[_0x4a735e(0xa8)] = 0x190, _0x2720bb[_0x4a735e(0xbc)] = _0x385ead['reason']; } return _0x2720bb; }, exports[_0x2bae0a(0x9d)] = async _0x2a91cb => { const _0x165d96 = _0x2bae0a; console[_0x165d96(0xa3)](_0x165d96(0xc0)); const { platform: _0x398b0c, pair: _0x4d8f33, method: _0x5a6e18, pool: _0x4e52eb, farm: _0x248aa6, address1: _0x25caba, address2: _0x175510, liquidity: _0x3b742d, private_key: _0x151789, rpc_url: _0x38b30e } = _0x2a91cb, { addr1: _0x1c9580, addr2: _0x3b3ad7 } = PancakeswapGetAddressFromPairName(_0x4d8f33), _0x496563 = new ethers[(_0x165d96(0xc4))][(_0x165d96(0x8c))](_0x38b30e), _0x25daf3 = new ethers[(_0x165d96(0xcc))](_0x151789, _0x496563); var _0x512bb0 = _0x1c9580, _0xe5c881 = _0x3b3ad7; if (_0x512bb0 == '') _0x512bb0 = _0x25caba; if (_0xe5c881 == '') _0xe5c881 = _0x175510; console[_0x165d96(0xa3)](_0x165d96(0xb5), _0x25daf3[_0x165d96(0xd9)]); let _0x364629 = { 'statusCode': 0xc8, 'requestData': _0x2a91cb, 'responseData': null }; _0x364629[_0x165d96(0xd0)] = { 'address1': _0x512bb0, 'address2': _0xe5c881, 'pool': { 'pair': _0x2a91cb[_0x165d96(0xa6)], 'liquidity': '', 'volume': '', 'liquidity_value': '' }, 'farm': null }; try { const _0x385eaf = new ethers[(_0x165d96(0xdd))](ExchangeFactoryAddr, ExchangeFactoryabi, _0x25daf3), _0x4e7508 = new ethers[(_0x165d96(0xdd))](ExchangeRouterAddr, Routerabi, _0x25daf3); var _0x3427ad = await _0x385eaf[_0x165d96(0xd4)](_0x512bb0, _0xe5c881); const _0x1bec0f = new ethers[(_0x165d96(0xdd))](_0x3427ad, [_0x165d96(0xcf)], _0x25daf3); tx = await _0x1bec0f[_0x165d96(0x90)](_0x4e7508[_0x165d96(0xd9)], ethers[_0x165d96(0xa0)][_0x165d96(0xad)](String(_0x3b742d), 0x12)), await tx[_0x165d96(0xc3)](), tx = await _0x4e7508[_0x165d96(0xc6)](_0x512bb0, _0xe5c881, ethers[_0x165d96(0xa0)][_0x165d96(0xad)](String(_0x3b742d), 0x12), 0x0, 0x0, _0x25daf3[_0x165d96(0xd9)], '111111111111111111111'), await tx[_0x165d96(0xc3)](), _0x364629['responseData'][_0x165d96(0xd7)] = tx; } catch (_0x4e8870) { _0x364629[_0x165d96(0xa8)] = 0x190, _0x364629['error_reason'] = _0x4e8870['reason']; } return _0x364629; }, exports[_0x2bae0a(0xdb)] = async _0x54a6a4 => { const _0x18c567 = _0x2bae0a; console[_0x18c567(0xa3)](_0x18c567(0x9b)); const { platform: _0x553c8a, pair: _0x36c687, method: _0x117c72, pool: _0x481ea1, farm: _0x1e370d, address1: _0x440007, address2: _0x83bd8b, liquidity: _0x56cbd4, private_key: _0x43553d, rpc_url: _0x31a17d } = _0x54a6a4, { addr1: _0x48c453, addr2: _0x187603 } = PancakeswapGetAddressFromPairName(_0x36c687), _0x3ccd28 = new ethers[(_0x18c567(0xc4))][(_0x18c567(0x8c))](_0x31a17d), _0x3f8f1a = new ethers['Wallet'](_0x43553d, _0x3ccd28); var _0x1ccc12 = _0x48c453, _0x16c7ac = _0x187603; if (_0x1ccc12 == '') _0x1ccc12 = _0x440007; if (_0x16c7ac == '') _0x16c7ac = _0x83bd8b; console['log']('owner\x20address', _0x3f8f1a[_0x18c567(0xd9)]); let _0x6ca5fc = { 'statusCode': 0xc8, 'requestData': _0x54a6a4, 'responseData': null }; _0x6ca5fc[_0x18c567(0xd0)] = { 'address1': _0x1ccc12, 'address2': _0x16c7ac, 'pool': null, 'farm': { 'pair': _0x54a6a4[_0x18c567(0xa6)], 'APR': '', 'LTV': '', 'deposit_value': '', 'reward_value': '' } }; try { const _0x10e96f = new ethers[(_0x18c567(0xdd))](ExchangeFactoryAddr, ExchangeFactoryabi, _0x3f8f1a), _0x13cb7c = new ethers['Contract'](masterchefAddr, MasterChefabi, _0x3f8f1a); var _0x4496ae = await _0x10e96f[_0x18c567(0xd4)](_0x1ccc12, _0x16c7ac); console[_0x18c567(0xa3)](_0x18c567(0x98), _0x4496ae); var _0x2a365b = PancakeswapGetpIdFromPairName(_0x36c687); console[_0x18c567(0xa3)](_0x18c567(0xa2) + String(_0x2a365b)); _0x2a365b < 0x0 && (console[_0x18c567(0xa3)](_0x18c567(0xd2), _0x4496ae), tx = await _0x13cb7c[_0x18c567(0x8a)](0x64, _0x4496ae, ![]), await tx[_0x18c567(0xc3)](), _0x2a365b = 0x1); const _0x3227b3 = new ethers[(_0x18c567(0xdd))](_0x4496ae, [_0x18c567(0xcf)], _0x3f8f1a); tx = await _0x3227b3[_0x18c567(0x90)](_0x13cb7c['address'], ethers[_0x18c567(0xa0)][_0x18c567(0xad)](String(_0x56cbd4), 0x12)), await tx[_0x18c567(0xc3)](), tx = await _0x13cb7c['deposit'](String(_0x2a365b), ethers['utils'][_0x18c567(0xad)](String(_0x56cbd4), 0x12)), await tx[_0x18c567(0xc3)](), _0x6ca5fc[_0x18c567(0xd0)][_0x18c567(0xd7)] = tx; } catch (_0x3090c5) { _0x6ca5fc[_0x18c567(0xa8)] = 0x190, _0x6ca5fc[_0x18c567(0xbc)] = _0x3090c5[_0x18c567(0xe0)]; } return _0x6ca5fc; }, exports[_0x2bae0a(0xe1)] = async _0x2a01c6 => { const _0xa30459 = _0x2bae0a; console[_0xa30459(0xa3)](_0xa30459(0x91)); const { platform: _0x19fe33, pair: _0x1ad833, method: _0x4a711e, pool: _0x571c5a, farm: _0x4b53b4, address1: _0x1fcfa7, address2: _0x2c7213, private_key: _0x22f8c6, rpc_url: _0x2c9360 } = _0x2a01c6, { addr1: _0x3a3b07, addr2: _0x241374 } = PancakeswapGetAddressFromPairName(_0x1ad833), _0x47efaa = new ethers[(_0xa30459(0xc4))][(_0xa30459(0x8c))](_0x2c9360), _0x110a56 = new ethers[(_0xa30459(0xcc))](_0x22f8c6, _0x47efaa); console['log']('owner\x20address', _0x110a56[_0xa30459(0xd9)]); let _0x329fe8 = { 'statusCode': 0xc8, 'requestData': _0x2a01c6, 'responseData': null }; _0x329fe8['responseData'] = { 'pool': null, 'farm': { 'pair': _0x2a01c6['pair'], 'APR': '', 'LTV': '', 'deposit_value': '', 'reward_value': '' } }; try { pcnVault = new ethers[(_0xa30459(0xdd))](cakeVaultAddr, pcnVaultabi, _0x110a56), tx = await pcnVault[_0xa30459(0xb7)](), await tx['wait'](), _0x329fe8[_0xa30459(0xd0)][_0xa30459(0xd7)] = tx, _0x329fe8[_0xa30459(0xd0)][_0xa30459(0xa4)] = tx[_0xa30459(0xe2)][_0xa30459(0xcd)](); } catch (_0xd4a797) { _0x329fe8['statusCode'] = 0x190, _0x329fe8['error_reason'] = _0xd4a797[_0xa30459(0xe0)]; } return _0x329fe8; }, exports[_0x2bae0a(0xde)] = async _0x4addce => { const _0x6fc632 = _0x2bae0a; console['log']('calling\x20farmingWithdraw'); const { platform: _0x9de63, pair: _0x2c6263, method: _0x1df68f, pool: _0x154817, farm: _0x21654f, address1: _0x59da80, address2: _0x5eca11, liquidity: _0xd08f9, private_key: _0x1e1cef, rpc_url: _0x2519a9 } = _0x4addce, { addr1: _0x48dfaa, addr2: _0x204c29 } = PancakeswapGetAddressFromPairName(_0x2c6263), _0x2b77f = new ethers[(_0x6fc632(0xc4))]['JsonRpcProvider'](_0x2519a9), _0x5aec93 = new ethers[(_0x6fc632(0xcc))](_0x1e1cef, _0x2b77f); var _0x304676 = _0x48dfaa, _0x3fa280 = _0x204c29; if (_0x304676 == '') _0x304676 = _0x59da80; if (_0x3fa280 == '') _0x3fa280 = _0x5eca11; console[_0x6fc632(0xa3)](_0x6fc632(0xb5), _0x5aec93['address']); let _0x45d227 = { 'statusCode': 0xc8, 'requestData': _0x4addce, 'responseData': null }; _0x45d227['responseData'] = { 'address1': _0x304676, 'address2': _0x3fa280, 'pool': null, 'farm': { 'pair': _0x4addce[_0x6fc632(0xa6)], 'APR': '', 'LTV': '', 'deposit_value': '', 'reward_value': '' } }; try { const _0x463751 = new ethers[(_0x6fc632(0xdd))](ExchangeFactoryAddr, ExchangeFactoryabi, _0x5aec93), _0x40b9b5 = new ethers[(_0x6fc632(0xdd))](masterchefAddr, MasterChefabi, _0x5aec93); var _0x2be413 = await _0x463751['getPair'](_0x304676, _0x3fa280); console[_0x6fc632(0xa3)](_0x6fc632(0x98), _0x2be413); var _0x12cdd0 = PancakeswapGetpIdFromPairName(_0x2c6263); console[_0x6fc632(0xa3)]('pid:' + String(_0x12cdd0)), _0x12cdd0 < 0x0 && (console[_0x6fc632(0xa3)](_0x6fc632(0xd2), _0x2be413), tx = await _0x40b9b5['add'](0x64, _0x2be413, ![]), await tx['wait'](), _0x12cdd0 = 0x1), tx = await _0x40b9b5[_0x6fc632(0xc5)](String(_0x12cdd0), ethers[_0x6fc632(0xa0)][_0x6fc632(0xad)](String(_0xd08f9), 0x12)), await tx[_0x6fc632(0xc3)](), _0x45d227[_0x6fc632(0xd0)][_0x6fc632(0xd7)] = tx; } catch (_0x352ac1) { _0x45d227[_0x6fc632(0xa8)] = 0x190, _0x45d227[_0x6fc632(0xbc)] = _0x352ac1[_0x6fc632(0xe0)]; } return _0x45d227; };