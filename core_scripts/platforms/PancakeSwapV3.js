const _0x519714 = _0x4cc8; function _0x1b20() { const _0x5ead38 = ['parseUnits', 'farmingDeposit', 'collect', 'PancakeSwapExchangeRouter', 'tokenId', 'tx[pid]', '450243NTiXKa', 'poolInfo', 'topics', 'tickUpper', 'pair', 'formatEther', '3443804RFemJs', 'parseLog', 'PancakeSwapUsdt', 'liquidity1=', './utils/getAddressFn', '/abi/PancakeswapMasterchefV3.json', 'push', 'error_reason', 'wait', 'logs', 'PancakeSwapExchangeFactoryV3', 'volume', '4947105OfMUlA', 'liquidity_value', 'liquidity', ',\x20liquidity2_value=', 'harvest', 'lpToken', 'Contract', 'liquidity=', 'LPTokens', 'farmingWithdraw', 'Wallet', 'getAmountsIn', 'farm', 'balance0ETH', '1515897QEtpYI', '3640968KAEWfV', 'liquidityAdd', 'toNumber', 'pool', 'token1', 'approve\x20token2', 'owner\x20address', 'Interface', '111111111111111111111', 'function\x20approve(address\x20spender,\x20uint256\x20amount)\x20public\x20returns\x20(bool)', 'tokenLp\x20token', 'LTV', 'parse', 'There\x20is\x20no\x20LP\x20Token\x20for\x20Deposit', 'reason', '6yJavti', 'calling\x20farmingWithdraw', 'address', 'deposit_value', '/abi/NeondexRouter.json', 'approve\x20token1', 'feeAmountTickSpacing', 'amount0', 'calling\x20liquidityRemove', ',\x20price2=', 'utf-8', ',liquidity_value\x20=', '24NJDDPJ', '99350KmLOKV', 'readFileSync', 'LP\x20address', 'abi', 'v3PoolAddressPid', 'There\x20is\x20no\x20LP\x20Token\x20for\x20Harvest', '340282366920938463463', './utils/utils', '/abi/PcnVault.json', 'increaseLiquidity', '238fWcrxt', 'PancakeSwapExchangeRouterV3', 'approve', 'calling\x20statusGet', 'forEach', 'reward', 'There\x20is\x20LP\x20Token\x20that\x20already\x20deposited', 'event\x20DecreaseLiquidity(uint256\x20indexed\x20tokenId,\x20uint128\x20liquidity,\x20uint256\x20amount0,\x20uint256\x20amount1)', 'topic', 'index\x20:\x20tokenId', 'responseData', '/abi/PancakeswapRouterV3.json', 'getPool', 'args', 'farmingHarvest', 'withdraw', 'statusCode', '../../core_scripts/config/addresses.json', 'event\x20IncreaseLiquidity(uint256\x20indexed\x20tokenId,\x20uint128\x20liquidity,\x20uint256\x20amount0,\x20uint256\x20amount1)', 'APR', 'toUpperCase', 'log', 'price1=', 'tokenOfOwnerByIndex', 'reward_value', 'DecreaseLiquidity', 'statusGet', 'JsonRpcProvider', 'liquidity1_value=', 'formatUnits', 'getEventTopic', 'mint', 'token0', 'pid', 'calling\x20farmingHarvest', 'balanceOf', 'result', 'calling\x20farmingDeposit', 'amount1', 'ethers', 'utils', 'positions', ',\x20liquidity2=', '2384jYZuAW', 'providers']; _0x1b20 = function () { return _0x5ead38; }; return _0x1b20(); } (function (_0x67ba9d, _0x3caf6d) { const _0x2e98e8 = _0x4cc8, _0x52c2e0 = _0x67ba9d(); while (!![]) { try { const _0x51312b = parseInt(_0x2e98e8(0x16c)) / 0x1 * (-parseInt(_0x2e98e8(0x141)) / 0x2) + -parseInt(_0x2e98e8(0x174)) / 0x3 + -parseInt(_0x2e98e8(0x195)) / 0x4 + -parseInt(_0x2e98e8(0x186)) / 0x5 * (-parseInt(_0x2e98e8(0x1a4)) / 0x6) + parseInt(_0x2e98e8(0x17a)) / 0x7 + parseInt(_0x2e98e8(0x136)) / 0x8 * (parseInt(_0x2e98e8(0x194)) / 0x9) + -parseInt(_0x2e98e8(0x137)) / 0xa; if (_0x51312b === _0x3caf6d) break; else _0x52c2e0['push'](_0x52c2e0['shift']()); } catch (_0x654e6) { _0x52c2e0['push'](_0x52c2e0['shift']()); } } }(_0x1b20, 0x9a7a2)); const ethers = require(_0x519714(0x168)); var fs = require('fs'); const Addresses = require(_0x519714(0x152)); var data = fs[_0x519714(0x138)](__dirname + _0x519714(0x13f), 'utf-8'); const pcnVaultabi = JSON[_0x519714(0x1a1)](data)[_0x519714(0x13a)]; data = fs[_0x519714(0x138)](__dirname + _0x519714(0x14c), _0x519714(0x1ae)); const Routerabi = JSON[_0x519714(0x1a1)](data); data = fs[_0x519714(0x138)](__dirname + '/abi/PancakeswapFactoryV3.json', _0x519714(0x1ae)); const ExchangeFactoryabi = JSON[_0x519714(0x1a1)](data); data = fs[_0x519714(0x138)](__dirname + '/abi/BEP20Token.json', _0x519714(0x1ae)); const busdabi = JSON[_0x519714(0x1a1)](data)[_0x519714(0x13a)]; function _0x4cc8(_0x26c0db, _0x40ed29) { const _0x1b209a = _0x1b20(); return _0x4cc8 = function (_0x4cc815, _0x5022c9) { _0x4cc815 = _0x4cc815 - 0x135; let _0x42ebfc = _0x1b209a[_0x4cc815]; return _0x42ebfc; }, _0x4cc8(_0x26c0db, _0x40ed29); } data = fs['readFileSync'](__dirname + _0x519714(0x17f), 'utf-8'); const MasterChefabi = JSON[_0x519714(0x1a1)](data); data = fs[_0x519714(0x138)](__dirname + '/abi/PancakeswapPoolPairToken.json', _0x519714(0x1ae)); const LPPairabi = JSON[_0x519714(0x1a1)](data); data = fs[_0x519714(0x138)](__dirname + _0x519714(0x1a8), _0x519714(0x1ae)); const V2Routerabi = JSON[_0x519714(0x1a1)](data)[_0x519714(0x13a)], fee_decimal = 0x4, { PancakeswapGetFeeFromPairName, readLPInformation, writeLPInformation, PancakeswapGetpIdFromPairName, PancakeswapGetAddressFromPairName } = require(_0x519714(0x17e)), { getMinTick, getMaxTick } = require(_0x519714(0x13e)), ExchangeFactoryAddr = Addresses[_0x519714(0x184)], ExchangeRouterAddr = Addresses[_0x519714(0x142)], ExchangeRouterAddrV2 = Addresses[_0x519714(0x171)], cakeVaultAddr = Addresses['PancakeSwapcakeVault'], masterchefAddr = Addresses['PancakeSwapmasterchefV3'], UsdtAddr = Addresses[_0x519714(0x17c)]; async function findPid(_0x4f93a3, _0x157bed, _0x4f4761) { const _0x37b67d = _0x519714; console['log'](_0x37b67d(0x19f), _0x4f4761); var _0x1ae91c = 0x0; try { while (0x1) { _0x1ae91c++; const _0x217468 = await _0x157bed[_0x37b67d(0x175)](String(_0x1ae91c)); _0x217468[_0x37b67d(0x18b)] == _0x4f4761 && console[_0x37b67d(0x156)]('pid:' + String(_0x1ae91c)); } } catch (_0x4afa61) { } } exports[_0x519714(0x15b)] = async _0x192020 => { const _0xcc34e5 = _0x519714; console[_0xcc34e5(0x156)](_0xcc34e5(0x144)); const { platform: _0x11a45e, pair: _0xfbdd59, method: _0xabe00c, pool: _0x4b8280, farm: _0x347dad, address1: _0x17170f, address2: _0x2bf05e, private_key: _0x4d8e1f, rpc_url: _0x6417d6 } = _0x192020, { addr1: _0x363eff, addr2: _0x54f2f1 } = PancakeswapGetAddressFromPairName(_0xfbdd59), _0x28cf0a = new ethers[(_0xcc34e5(0x16d))][(_0xcc34e5(0x15c))](_0x6417d6), _0xd64509 = new ethers[(_0xcc34e5(0x190))](_0x4d8e1f, _0x28cf0a); var _0x56804a = _0x363eff, _0x4e6f00 = _0x54f2f1; if (_0x56804a == '') _0x56804a = _0x17170f; if (_0x4e6f00 == '') _0x4e6f00 = _0x2bf05e; let _0x36dac7 = { 'statusCode': 0xc8, 'requestData': _0x192020, 'responseData': null }; try { console['log'](_0xcc34e5(0x19b), _0xd64509[_0xcc34e5(0x1a6)]); const _0x425e9f = await _0x28cf0a['getBalance'](_0xd64509[_0xcc34e5(0x1a6)]), _0x9bb5e = ethers['utils'][_0xcc34e5(0x15e)](_0x425e9f, 0x12); console[_0xcc34e5(0x156)](_0xcc34e5(0x193), _0x9bb5e); const _0x193822 = new ethers[(_0xcc34e5(0x18c))](ExchangeFactoryAddr, ExchangeFactoryabi, _0xd64509), _0x1caf44 = new ethers[(_0xcc34e5(0x18c))](ExchangeRouterAddrV2, V2Routerabi, _0xd64509); var _0x154aa9 = PancakeswapGetFeeFromPairName(_0xfbdd59), _0xa39beb = await _0x193822[_0xcc34e5(0x14d)](_0x56804a, _0x4e6f00, ethers[_0xcc34e5(0x169)]['parseUnits'](String(_0x154aa9), fee_decimal)); console[_0xcc34e5(0x156)](_0xcc34e5(0x139), _0xa39beb); const _0x69e711 = new ethers[(_0xcc34e5(0x18c))](_0xa39beb, LPPairabi, _0xd64509); var _0xae8015 = _0x11a45e + '_' + _0xfbdd59; let _0x593597 = await readLPInformation(_0xae8015); _0x36dac7[_0xcc34e5(0x14b)] = { 'wallet_balance': _0x9bb5e, 'pairAddr': _0xa39beb, 'address1': _0x56804a, 'address2': _0x4e6f00, 'pool': { 'pair': _0x192020[_0xcc34e5(0x178)], 'liquidity': '', 'volume': '', 'liquidity_value': '', 'LPTokens': '' }, 'farm': { 'pair': _0x192020[_0xcc34e5(0x178)], 'APR': '', 'LTV': '', 'deposit_value': '', 'reward_value': '' } }; var _0x3777f7 = [], _0x1a6cba = [], _0x5ea741 = []; if (_0x4b8280 == '1') { var _0x32f19b = 0x0; while (0x1) { var _0x12a8ea = await TokenOfOwnerByIndex(_0xd64509, _0x32f19b); console[_0xcc34e5(0x156)](_0xcc34e5(0x14a), _0x32f19b, _0x12a8ea); if (_0x12a8ea < 0x0) break; try { tx = await PositionInformationOfTokenId(_0xd64509, _0x12a8ea); if ((tx['token0'][_0xcc34e5(0x155)]() == _0x56804a[_0xcc34e5(0x155)]() && tx[_0xcc34e5(0x199)][_0xcc34e5(0x155)]() == _0x4e6f00['toUpperCase']()) | (tx[_0xcc34e5(0x161)][_0xcc34e5(0x155)]() == _0x4e6f00['toUpperCase']() && tx[_0xcc34e5(0x199)][_0xcc34e5(0x155)]() == _0x56804a[_0xcc34e5(0x155)]())) { LP_Token = ethers[_0xcc34e5(0x169)][_0xcc34e5(0x179)](String(tx[_0xcc34e5(0x188)])); let _0x4c86e8 = { 'tokenId': _0x12a8ea, 'liquidity': LP_Token }; _0x3777f7['push'](_0x4c86e8); } } catch (_0x208f5e) { } _0x32f19b++; } try { const _0x5eb9a3 = 0x12, _0x1c49d7 = new ethers[(_0xcc34e5(0x18c))](_0x56804a, busdabi, _0xd64509), _0x2e0199 = new ethers[(_0xcc34e5(0x18c))](_0x4e6f00, busdabi, _0xd64509), _0x424cd5 = await _0x1c49d7[_0xcc34e5(0x164)](_0xa39beb), _0x3794d8 = await _0x2e0199['balanceOf'](_0xa39beb), _0x37b272 = await _0x1c49d7[_0xcc34e5(0x164)](_0xd64509['address']), _0x2558bd = await _0x2e0199[_0xcc34e5(0x164)](_0xd64509[_0xcc34e5(0x1a6)]); var _0x344f93 = parseFloat(ethers[_0xcc34e5(0x169)]['formatEther'](String(_0x424cd5))), _0x376820 = parseFloat(ethers[_0xcc34e5(0x169)][_0xcc34e5(0x179)](String(_0x3794d8))), _0x1d3a8a = parseFloat(ethers[_0xcc34e5(0x169)][_0xcc34e5(0x179)](String(_0x37b272))), _0x37d246 = parseFloat(ethers['utils'][_0xcc34e5(0x179)](String(_0x2558bd))); console['log'](_0xcc34e5(0x15d) + String(_0x1d3a8a) + _0xcc34e5(0x189) + String(_0x37d246)), console[_0xcc34e5(0x156)](_0xcc34e5(0x17d) + String(_0x344f93) + _0xcc34e5(0x16b) + String(_0x376820)); var _0x3d8bd9 = 0x1, _0x359bb1 = 0x1, _0x159ecb = 0x0, _0x1b6095 = 0x0, _0x255e74 = 0x1; try { if (UsdtAddr != _0x56804a) { _0x3d8bd9 = await _0x1caf44[_0xcc34e5(0x191)](ethers[_0xcc34e5(0x169)][_0xcc34e5(0x16e)](String('1'), _0x5eb9a3), [UsdtAddr, _0x56804a]); var _0x700f79 = ethers[_0xcc34e5(0x169)][_0xcc34e5(0x179)](String(_0x3d8bd9[0x0])); _0x3d8bd9 = parseFloat(_0x700f79) * _0x255e74, console['log'](_0x3d8bd9), _0x159ecb = 0x1; } else _0x159ecb = 0x1, _0x3d8bd9 = 0x1, _0x1d3a8a = _0x1d3a8a * _0x255e74, _0x344f93 = _0x344f93 * _0x255e74; } catch (_0x3633e1) { _0x159ecb = 0x0; } try { if (UsdtAddr != _0x4e6f00) { _0x359bb1 = await _0x1caf44['getAmountsIn'](ethers[_0xcc34e5(0x169)][_0xcc34e5(0x16e)](String('1'), _0x5eb9a3), [UsdtAddr, _0x4e6f00]), console[_0xcc34e5(0x156)](ethers[_0xcc34e5(0x169)][_0xcc34e5(0x179)](String(_0x359bb1[0x0]))); var _0x700f79 = ethers[_0xcc34e5(0x169)]['formatEther'](String(_0x359bb1[0x0])); _0x359bb1 = parseFloat(_0x700f79) * _0x255e74, console[_0xcc34e5(0x156)](_0x359bb1), _0x1b6095 = 0x1; } else _0x1b6095 = 0x1, _0x359bb1 = 0x1, _0x37d246 = _0x37d246 * _0x255e74, _0x376820 = _0x376820 * _0x255e74; } catch (_0x55ae83) { _0x1b6095 = 0x0; } _0x159ecb == 0x0 && (_0x3d8bd9 = 0x0, _0x359bb1 = _0x359bb1 * 0x2); _0x1b6095 == 0x0 && (_0x359bb1 = 0x0, _0x3d8bd9 = _0x3d8bd9 * 0x2); console['log'](_0xcc34e5(0x157) + String(_0x3d8bd9) + _0xcc34e5(0x1ad) + String(_0x359bb1)); var _0x46de4d = _0x344f93 * _0x3d8bd9 + _0x376820 * _0x359bb1, _0x6e3867 = _0x1d3a8a * _0x3d8bd9 + _0x37d246 * _0x359bb1; console[_0xcc34e5(0x156)](_0xcc34e5(0x18d) + String(_0x46de4d) + _0xcc34e5(0x135) + String(_0x6e3867)), _0x36dac7[_0xcc34e5(0x14b)][_0xcc34e5(0x198)][_0xcc34e5(0x188)] = _0x46de4d, _0x36dac7[_0xcc34e5(0x14b)][_0xcc34e5(0x198)][_0xcc34e5(0x185)] = '', _0x36dac7[_0xcc34e5(0x14b)][_0xcc34e5(0x198)][_0xcc34e5(0x187)] = _0x6e3867, _0x36dac7[_0xcc34e5(0x14b)][_0xcc34e5(0x198)][_0xcc34e5(0x18e)] = _0x3777f7, _0x593597[_0xcc34e5(0x188)] = _0x36dac7[_0xcc34e5(0x14b)]['pool'][_0xcc34e5(0x188)], _0x593597['volume'] = _0x36dac7[_0xcc34e5(0x14b)]['pool']['volume'], _0x593597[_0xcc34e5(0x187)] = _0x36dac7[_0xcc34e5(0x14b)][_0xcc34e5(0x198)]['liquidity_value']; } catch (_0x579d73) { console[_0xcc34e5(0x156)](_0x579d73); } } if (_0x347dad == '1') try { const _0x399654 = new ethers[(_0xcc34e5(0x18c))](masterchefAddr, MasterChefabi, _0xd64509); var _0x32f19b = 0x0, _0x489a5f = await _0x399654[_0xcc34e5(0x13b)](_0xa39beb); _0x489a5f = _0x489a5f[_0xcc34e5(0x197)](), console['log'](_0xcc34e5(0x162), _0x489a5f); while (0x1) { var _0x12a8ea = await TokenOfOwnerByIndexFarm(_0xd64509, _0x32f19b); _0x32f19b++, console['log'](_0xcc34e5(0x14a), _0x32f19b, _0x12a8ea); if (_0x12a8ea < 0x0) break; try { tx = await UserInformationOfTokenId(_0xd64509, _0x12a8ea), tx['pid'] = tx[_0xcc34e5(0x162)][_0xcc34e5(0x197)](), console[_0xcc34e5(0x156)](_0xcc34e5(0x173), tx[_0xcc34e5(0x162)]); if (_0x489a5f != tx[_0xcc34e5(0x162)]) continue; deposit_value = ethers[_0xcc34e5(0x169)][_0xcc34e5(0x179)](String(tx['liquidity'])), reward_value = ethers[_0xcc34e5(0x169)][_0xcc34e5(0x179)](String(tx[_0xcc34e5(0x146)])); let _0x4d0193 = { 'tokenId': _0x12a8ea, 'deposit_value': deposit_value }, _0x44126c = { 'tokenId': _0x12a8ea, 'reward_value': reward_value }; _0x1a6cba[_0xcc34e5(0x180)](_0x4d0193), _0x5ea741[_0xcc34e5(0x180)](_0x44126c); } catch (_0x1c6e98) { console[_0xcc34e5(0x156)](_0x1c6e98); } } _0x36dac7[_0xcc34e5(0x14b)][_0xcc34e5(0x192)][_0xcc34e5(0x1a7)] = _0x1a6cba, _0x36dac7[_0xcc34e5(0x14b)][_0xcc34e5(0x192)]['reward_value'] = _0x5ea741, _0x36dac7[_0xcc34e5(0x14b)]['farm'][_0xcc34e5(0x154)] = '', _0x36dac7[_0xcc34e5(0x14b)][_0xcc34e5(0x192)][_0xcc34e5(0x1a0)] = '', _0x593597['APR'] = _0x36dac7[_0xcc34e5(0x14b)][_0xcc34e5(0x192)][_0xcc34e5(0x154)], _0x593597[_0xcc34e5(0x1a0)] = _0x36dac7['responseData'][_0xcc34e5(0x192)][_0xcc34e5(0x1a0)]; } catch (_0x4238a8) { console['log'](_0x4238a8); } } catch (_0x2d04d1) { _0x36dac7[_0xcc34e5(0x151)] = 0x190, console[_0xcc34e5(0x156)](_0x2d04d1); } return _0x36dac7; }, exports[_0x519714(0x196)] = async _0x51ef6e => { const _0x50f6e7 = _0x519714; console['log']('calling\x20liquidityAdd\x20V3'); const { platform: _0x1f2fcf, pair: _0x9a7ae4, method: _0x1c220f, pool: _0x5758db, farm: _0x5c3cb0, address1: _0x5242c0, address2: _0xb3b320, amount1: _0x33a9b6, amount2: _0x283e5d, tokenId: _0x321231, private_key: _0x30421d, rpc_url: _0x44765d, tickLower: _0x24da98, tickUpper: _0x4fb98d } = _0x51ef6e, _0x4da154 = new ethers[(_0x50f6e7(0x16d))]['JsonRpcProvider'](_0x44765d), _0x4a7ca3 = new ethers['Wallet'](_0x30421d, _0x4da154); try { if (parseInt(_0x321231) > 0x0) { let _0xc9068e = await increaseLiquidity(_0x4da154, _0x4a7ca3, _0x51ef6e); return _0xc9068e; } } catch (_0x525795) { console[_0x50f6e7(0x156)](_0x525795); } let _0x4c9033 = _0x9a7ae4, _0x396121 = _0x33a9b6, _0x532205 = _0x283e5d; _0x9a7ae4 == 'BUSD-BNB' && (_0x4c9033 = 'BNB-BUSD', _0x396121 = _0x283e5d, _0x532205 = _0x33a9b6); const { addr1: _0x2d4fa6, addr2: _0x45df19 } = PancakeswapGetAddressFromPairName(_0x4c9033); var _0xa2c5eb = _0x2d4fa6, _0x2e4f69 = _0x45df19; if (_0xa2c5eb == '') _0xa2c5eb = _0x5242c0; if (_0x2e4f69 == '') _0x2e4f69 = _0xb3b320; console['log'](_0x50f6e7(0x19b), _0x4a7ca3[_0x50f6e7(0x1a6)]); let _0x141091 = { 'statusCode': 0xc8, 'requestData': _0x51ef6e, 'responseData': null }; var _0x4d50d8 = _0x1f2fcf + '_' + _0x9a7ae4; let _0x4cc7a2 = await readLPInformation(_0x4d50d8); _0x141091[_0x50f6e7(0x14b)] = { 'address1': _0xa2c5eb, 'address2': _0x2e4f69, 'pool': { 'pair': _0x51ef6e[_0x50f6e7(0x178)], 'liquidity': _0x4cc7a2['liquidity'], 'volume': _0x4cc7a2[_0x50f6e7(0x185)], 'liquidity_value': _0x4cc7a2[_0x50f6e7(0x187)] }, 'farm': null }; try { var _0x19f817 = PancakeswapGetFeeFromPairName(_0x4c9033); console['log']('Fee', _0x19f817); const _0x23366b = new ethers[(_0x50f6e7(0x18c))](ExchangeFactoryAddr, ExchangeFactoryabi, _0x4a7ca3), _0x47a8c2 = new ethers[(_0x50f6e7(0x18c))](ExchangeRouterAddr, Routerabi, _0x4a7ca3); var _0x10d3d1 = await _0x23366b[_0x50f6e7(0x1aa)](ethers[_0x50f6e7(0x169)]['parseUnits'](String(_0x19f817), fee_decimal)); console[_0x50f6e7(0x156)](_0x10d3d1), tickSpacing = parseFloat(_0x10d3d1); var _0x271fbd = getMinTick(_0x10d3d1) + tickSpacing, _0x192f8b = getMaxTick(_0x10d3d1) - tickSpacing; if (_0x24da98 != undefined & _0x24da98 != '') _0x271fbd = _0x24da98; if (_0x4fb98d != undefined & _0x4fb98d != '') _0x192f8b = _0x4fb98d; console[_0x50f6e7(0x156)]('tick\x20lower', _0x271fbd), console[_0x50f6e7(0x156)](_0x50f6e7(0x177), _0x192f8b); const _0x4fff3e = new ethers[(_0x50f6e7(0x18c))](_0xa2c5eb, ['function\x20approve(address\x20spender,\x20uint256\x20amount)\x20public\x20returns\x20(bool)'], _0x4a7ca3); tx = await _0x4fff3e[_0x50f6e7(0x143)](_0x47a8c2['address'], ethers['utils'][_0x50f6e7(0x16e)](String(parseFloat(_0x396121) * 0x2), 0x12)), await tx[_0x50f6e7(0x182)](), console['log'](_0x50f6e7(0x1a9)); const _0x5f310d = new ethers[(_0x50f6e7(0x18c))](_0x2e4f69, [_0x50f6e7(0x19e)], _0x4a7ca3); tx = await _0x5f310d[_0x50f6e7(0x143)](_0x47a8c2[_0x50f6e7(0x1a6)], ethers[_0x50f6e7(0x169)][_0x50f6e7(0x16e)](String(parseFloat(_0x532205) * 0x2), 0x12)), await tx['wait'](), console[_0x50f6e7(0x156)](_0x50f6e7(0x19a)); var _0x4bb687 = 0x12, _0x289c64 = 0x12, _0x166bab = { 'token0': _0xa2c5eb, 'token1': _0x2e4f69, 'fee': ethers['utils'][_0x50f6e7(0x16e)](String(_0x19f817), fee_decimal), 'tickLower': _0x271fbd, 'tickUpper': _0x192f8b, 'amount0Desired': ethers['utils'][_0x50f6e7(0x16e)](String(_0x396121), _0x4bb687), 'amount1Desired': ethers['utils'][_0x50f6e7(0x16e)](String(_0x532205), _0x289c64), 'amount0Min': 0x0, 'amount1Min': 0x0, 'recipient': _0x4a7ca3[_0x50f6e7(0x1a6)], 'deadline': _0x50f6e7(0x19d) }; tx = await _0x47a8c2[_0x50f6e7(0x160)](_0x166bab), response = await tx['wait'](); try { let _0x453e14 = new ethers[(_0x50f6e7(0x169))][(_0x50f6e7(0x19c))]([_0x50f6e7(0x153)]), _0x18fd5a = _0x453e14[_0x50f6e7(0x15f)]('IncreaseLiquidity'); console[_0x50f6e7(0x156)](_0x50f6e7(0x149), _0x18fd5a); let _0x177309 = {}; response[_0x50f6e7(0x183)][_0x50f6e7(0x145)](_0x2f63a0 => { const _0x456b47 = _0x50f6e7; console['log'](_0x2f63a0['topics'][0x0]), _0x2f63a0['topics'][0x0] == _0x18fd5a && (_0x177309 = _0x453e14[_0x456b47(0x17b)](_0x2f63a0)[_0x456b47(0x14e)], console[_0x456b47(0x156)](_0x456b47(0x156), _0x177309)); }), _0x141091[_0x50f6e7(0x14b)]['result'] = { 'tokenId': _0x177309[_0x50f6e7(0x172)]['toNumber'](), 'liquidity': ethers[_0x50f6e7(0x169)][_0x50f6e7(0x179)](String(_0x177309[_0x50f6e7(0x188)])), 'amount0': ethers[_0x50f6e7(0x169)][_0x50f6e7(0x179)](String(_0x177309[_0x50f6e7(0x1ab)])), 'amount1': ethers[_0x50f6e7(0x169)][_0x50f6e7(0x179)](String(_0x177309[_0x50f6e7(0x167)])) }; } catch (_0x1a5432) { } } catch (_0x50f164) { _0x141091[_0x50f6e7(0x151)] = 0x190, _0x141091['error_reason'] = _0x50f164[_0x50f6e7(0x1a3)], console['log'](_0x50f164); } return _0x141091; }, exports['liquidityRemove'] = async _0x5b5d93 => { const _0xf39e83 = _0x519714; console[_0xf39e83(0x156)](_0xf39e83(0x1ac)); const { platform: _0x52650e, pair: _0x170686, method: _0x44bb2a, pool: _0xa908f3, farm: _0x30d5ef, address1: _0x22461c, address2: _0x335eb6, tokenId: _0x529837, private_key: _0x3f86e8, rpc_url: _0x1982fc } = _0x5b5d93, { addr1: _0x3520d2, addr2: _0x5bb3ad } = PancakeswapGetAddressFromPairName(_0x170686), _0x5645b4 = new ethers[(_0xf39e83(0x16d))][(_0xf39e83(0x15c))](_0x1982fc), _0x36c285 = new ethers[(_0xf39e83(0x190))](_0x3f86e8, _0x5645b4); var _0x421f30 = _0x3520d2, _0x4fe6e2 = _0x5bb3ad; if (_0x421f30 == '') _0x421f30 = _0x22461c; if (_0x4fe6e2 == '') _0x4fe6e2 = _0x335eb6; console[_0xf39e83(0x156)]('owner\x20address', _0x36c285[_0xf39e83(0x1a6)]); let _0x2e0e0d = { 'statusCode': 0xc8, 'requestData': _0x5b5d93, 'responseData': null }; var _0x45515b = _0x52650e + '_' + _0x170686; let _0x3a66b2 = await readLPInformation(_0x45515b); _0x2e0e0d[_0xf39e83(0x14b)] = { 'address1': _0x421f30, 'address2': _0x4fe6e2, 'pool': { 'pair': _0x5b5d93[_0xf39e83(0x178)], 'liquidity': _0x3a66b2[_0xf39e83(0x188)], 'volume': _0x3a66b2['volume'], 'liquidity_value': _0x3a66b2[_0xf39e83(0x187)] }, 'farm': null }; try { const _0x37402e = new ethers[(_0xf39e83(0x18c))](ExchangeRouterAddr, Routerabi, _0x36c285); let _0x535d65 = await PositionInformationOfTokenId(_0x36c285, _0x529837); LP_Token = ethers[_0xf39e83(0x169)][_0xf39e83(0x179)](String(_0x535d65['liquidity'])); var _0xbdb53 = { 'tokenId': _0x529837, 'liquidity': _0x535d65[_0xf39e83(0x188)], 'amount0Min': 0x0, 'amount1Min': 0x0, 'deadline': '111111111111111111111' }; _0x535d65 = await _0x37402e['decreaseLiquidity'](_0xbdb53), response = await _0x535d65['wait'](); try { let _0x1da2f0 = new ethers[(_0xf39e83(0x169))][(_0xf39e83(0x19c))]([_0xf39e83(0x148)]), _0x1bea53 = _0x1da2f0[_0xf39e83(0x15f)](_0xf39e83(0x15a)); console[_0xf39e83(0x156)](_0xf39e83(0x149), _0x1bea53); let _0xf42650 = {}; response[_0xf39e83(0x183)]['forEach'](_0x3b67df => { const _0x4d12c8 = _0xf39e83; console[_0x4d12c8(0x156)](_0x3b67df[_0x4d12c8(0x176)][0x0]), _0x3b67df[_0x4d12c8(0x176)][0x0] == _0x1bea53 && (_0xf42650 = _0x1da2f0['parseLog'](_0x3b67df)[_0x4d12c8(0x14e)], console[_0x4d12c8(0x156)]('log', _0xf42650)); }), _0x2e0e0d['responseData'][_0xf39e83(0x165)] = { 'tokenId': _0xf42650[_0xf39e83(0x172)]['toNumber'](), 'liquidity': ethers['utils'][_0xf39e83(0x179)](String(_0xf42650[_0xf39e83(0x188)])), 'amount0': ethers[_0xf39e83(0x169)][_0xf39e83(0x179)](String(_0xf42650[_0xf39e83(0x1ab)])), 'amount1': ethers[_0xf39e83(0x169)][_0xf39e83(0x179)](String(_0xf42650[_0xf39e83(0x167)])) }; } catch (_0x1cd2b1) { } _0xbdb53 = { 'tokenId': _0x529837, 'recipient': _0x36c285[_0xf39e83(0x1a6)], 'amount0Max': ethers[_0xf39e83(0x169)]['parseUnits'](String(_0xf39e83(0x13d)), 0x12), 'amount1Max': ethers[_0xf39e83(0x169)][_0xf39e83(0x16e)](String('340282366920938463463'), 0x12) }, _0x535d65 = await _0x37402e[_0xf39e83(0x170)](_0xbdb53), response = await _0x535d65['wait'](); } catch (_0x142a13) { _0x2e0e0d[_0xf39e83(0x151)] = 0x190, _0x2e0e0d[_0xf39e83(0x181)] = _0x142a13['reason']; } return _0x2e0e0d; }, exports[_0x519714(0x16f)] = async _0xbf4b13 => { const _0x46551c = _0x519714; console[_0x46551c(0x156)](_0x46551c(0x166)); const { platform: _0x57e067, pair: _0x39fe86, method: _0x5ba7cf, pool: _0x54d45b, farm: _0x4096af, address1: _0x3b87ff, address2: _0x422cc9, tokenId: _0x124bcf, liquidity: _0x3943dd, private_key: _0x58907a, rpc_url: _0x5c23f3 } = _0xbf4b13, { addr1: _0x47b5a2, addr2: _0x7830a8 } = PancakeswapGetAddressFromPairName(_0x39fe86), _0x10f1e0 = new ethers[(_0x46551c(0x16d))][(_0x46551c(0x15c))](_0x5c23f3), _0x4a4da2 = new ethers[(_0x46551c(0x190))](_0x58907a, _0x10f1e0); var _0x33c7fa = _0x47b5a2, _0x3a92ed = _0x7830a8; if (_0x33c7fa == '') _0x33c7fa = _0x3b87ff; if (_0x3a92ed == '') _0x3a92ed = _0x422cc9; console[_0x46551c(0x156)]('owner\x20address', _0x4a4da2[_0x46551c(0x1a6)]); let _0x1d27d9 = { 'statusCode': 0xc8, 'requestData': _0xbf4b13, 'responseData': null }; var _0x516407 = _0x57e067 + '_' + _0x39fe86; let _0xacb23d = await readLPInformation(_0x516407); _0x1d27d9['responseData'] = { 'address1': _0x33c7fa, 'address2': _0x3a92ed, 'pool': null, 'farm': { 'pair': _0xbf4b13['pair'], 'APR': _0xacb23d['APR'], 'LTV': _0xacb23d[_0x46551c(0x1a0)], 'deposit_value': _0xacb23d[_0x46551c(0x1a7)], 'reward_value': _0xacb23d[_0x46551c(0x159)] } }; try { tx = await PositionInformationOfTokenId(_0x4a4da2, _0x124bcf), LP_Token = ethers[_0x46551c(0x169)][_0x46551c(0x179)](String(tx['liquidity'])); if (parseFloat(LP_Token) > 0x0) { tx = await UserInformationOfTokenId(_0x4a4da2, _0x124bcf), LP_Token = ethers[_0x46551c(0x169)][_0x46551c(0x179)](String(tx['liquidity'])); if (parseFloat(LP_Token) > 0x0) _0x1d27d9[_0x46551c(0x151)] = 0x190, _0x1d27d9[_0x46551c(0x181)] = _0x46551c(0x147); else { const _0x5430c9 = new ethers[(_0x46551c(0x18c))](ExchangeRouterAddr, Routerabi, _0x4a4da2); tx = await _0x5430c9['safeTransferFrom'](_0x4a4da2[_0x46551c(0x1a6)], masterchefAddr, _0x124bcf), await tx[_0x46551c(0x182)](), tx = await UserInformationOfTokenId(_0x4a4da2, _0x124bcf), LP_Token = ethers['utils'][_0x46551c(0x179)](String(tx['liquidity'])), _0x1d27d9['responseData'][_0x46551c(0x192)][_0x46551c(0x1a7)] = LP_Token; } } else _0x1d27d9[_0x46551c(0x151)] = 0x190, _0x1d27d9['error_reason'] = _0x46551c(0x1a2); } catch (_0x59d771) { _0x1d27d9[_0x46551c(0x151)] = 0x190, _0x1d27d9[_0x46551c(0x181)] = _0x59d771[_0x46551c(0x1a3)]; } return _0x1d27d9; }, exports[_0x519714(0x14f)] = async _0x2ff477 => { const _0x2ce1bf = _0x519714; console[_0x2ce1bf(0x156)](_0x2ce1bf(0x163)); const { platform: _0x45de2b, pair: _0x10c639, method: _0x402786, pool: _0x2e44ad, farm: _0x32ee95, address1: _0xee7f3d, address2: _0x2ebd67, tokenId: _0x84f488, private_key: _0xfd64f0, rpc_url: _0x2e2ad0 } = _0x2ff477, { addr1: _0x2bd5e1, addr2: _0x1b21e6 } = PancakeswapGetAddressFromPairName(_0x10c639), _0x28e0f8 = new ethers[(_0x2ce1bf(0x16d))]['JsonRpcProvider'](_0x2e2ad0), _0x1863b0 = new ethers[(_0x2ce1bf(0x190))](_0xfd64f0, _0x28e0f8); console[_0x2ce1bf(0x156)](_0x2ce1bf(0x19b), _0x1863b0[_0x2ce1bf(0x1a6)]); let _0xe2b2b7 = { 'statusCode': 0xc8, 'requestData': _0x2ff477, 'responseData': null }; var _0x53491e = _0x45de2b + '_' + _0x10c639; let _0x681df2 = await readLPInformation(_0x53491e); _0xe2b2b7[_0x2ce1bf(0x14b)] = { 'pool': null, 'farm': { 'pair': _0x2ff477[_0x2ce1bf(0x178)], 'APR': _0x681df2['APR'], 'LTV': _0x681df2[_0x2ce1bf(0x1a0)], 'deposit_value': _0x681df2[_0x2ce1bf(0x1a7)], 'reward_value': _0x681df2[_0x2ce1bf(0x159)] } }; try { tx = await UserInformationOfTokenId(_0x1863b0, _0x84f488), LP_Token = ethers[_0x2ce1bf(0x169)][_0x2ce1bf(0x179)](String(tx[_0x2ce1bf(0x188)])); if (parseFloat(LP_Token) > 0x0) { const _0x423c98 = new ethers['Contract'](masterchefAddr, MasterChefabi, _0x1863b0); tx = await _0x423c98[_0x2ce1bf(0x18a)](_0x84f488, _0x1863b0[_0x2ce1bf(0x1a6)]), await tx[_0x2ce1bf(0x182)](), tx = await UserInformationOfTokenId(_0x1863b0, _0x84f488), LP_Token = ethers[_0x2ce1bf(0x169)][_0x2ce1bf(0x179)](String(tx[_0x2ce1bf(0x188)])); let _0x4ae4cc = ethers[_0x2ce1bf(0x169)]['formatEther'](String(tx['reward'])); _0xe2b2b7['responseData'][_0x2ce1bf(0x192)][_0x2ce1bf(0x1a7)] = LP_Token, _0xe2b2b7[_0x2ce1bf(0x14b)][_0x2ce1bf(0x192)][_0x2ce1bf(0x159)] = _0x4ae4cc; } else _0xe2b2b7['statusCode'] = 0x190, _0xe2b2b7['error_reason'] = _0x2ce1bf(0x13c); } catch (_0x3b465c) { _0xe2b2b7['statusCode'] = 0x190, _0xe2b2b7[_0x2ce1bf(0x181)] = _0x3b465c['reason']; } return _0xe2b2b7; }, exports[_0x519714(0x18f)] = async _0x4e3b1e => { const _0x5667bb = _0x519714; console[_0x5667bb(0x156)](_0x5667bb(0x1a5)); const { platform: _0x557339, pair: _0x199148, method: _0x3b17aa, pool: _0x210637, farm: _0x31ac00, address1: _0x1940d8, address2: _0x27955e, tokenId: _0x5536d1, liquidity: _0xd83b49, private_key: _0x323f64, rpc_url: _0x1d6f9e } = _0x4e3b1e, { addr1: _0x17703b, addr2: _0x28da02 } = PancakeswapGetAddressFromPairName(_0x199148), _0x325e32 = new ethers[(_0x5667bb(0x16d))]['JsonRpcProvider'](_0x1d6f9e), _0x331ad5 = new ethers['Wallet'](_0x323f64, _0x325e32); var _0x47c99a = _0x17703b, _0x370373 = _0x28da02; if (_0x47c99a == '') _0x47c99a = _0x1940d8; if (_0x370373 == '') _0x370373 = _0x27955e; console['log'](_0x5667bb(0x19b), _0x331ad5['address']); let _0x133d9c = { 'statusCode': 0xc8, 'requestData': _0x4e3b1e, 'responseData': null }; var _0x35d288 = _0x557339 + '_' + _0x199148; let _0x5d1f97 = await readLPInformation(_0x35d288); _0x133d9c[_0x5667bb(0x14b)] = { 'address1': _0x47c99a, 'address2': _0x370373, 'pool': null, 'farm': { 'pair': _0x4e3b1e[_0x5667bb(0x178)], 'APR': _0x5d1f97[_0x5667bb(0x154)], 'LTV': _0x5d1f97[_0x5667bb(0x1a0)], 'deposit_value': _0x5d1f97[_0x5667bb(0x1a7)], 'reward_value': _0x5d1f97['reward_value'] } }; try { tx = await UserInformationOfTokenId(_0x331ad5, _0x5536d1), LP_Token = ethers[_0x5667bb(0x169)][_0x5667bb(0x179)](String(tx[_0x5667bb(0x188)])); if (parseFloat(LP_Token) > 0x0) { const _0x46f46b = new ethers[(_0x5667bb(0x18c))](masterchefAddr, MasterChefabi, _0x331ad5); tx = await _0x46f46b[_0x5667bb(0x150)](_0x5536d1, _0x331ad5[_0x5667bb(0x1a6)]), await tx[_0x5667bb(0x182)](), _0x133d9c[_0x5667bb(0x14b)]['farm'][_0x5667bb(0x1a7)] = 0x0, _0x133d9c[_0x5667bb(0x14b)][_0x5667bb(0x192)]['reward_value'] = 0x0; } else _0x133d9c[_0x5667bb(0x151)] = 0x190, _0x133d9c[_0x5667bb(0x181)] = 'There\x20is\x20no\x20LP\x20Token\x20for\x20Withdraw'; } catch (_0x3bc4a7) { _0x133d9c['statusCode'] = 0x190, _0x133d9c[_0x5667bb(0x181)] = _0x3bc4a7[_0x5667bb(0x1a3)], console['log'](_0x3bc4a7); } return _0x133d9c; }; async function TokenOfOwnerByIndex(_0x4e36e2, _0x17bfc5) { const _0x122b44 = _0x519714, _0x33ac76 = new ethers[(_0x122b44(0x18c))](ExchangeRouterAddr, Routerabi, _0x4e36e2); var _0x32e1ad = -0x1; try { tx = await _0x33ac76[_0x122b44(0x158)](_0x4e36e2[_0x122b44(0x1a6)], _0x17bfc5), _0x32e1ad = tx[_0x122b44(0x197)](); } catch (_0x280135) { } return _0x32e1ad; } async function TokenOfOwnerByIndexFarm(_0x2b8f03, _0x3134ea) { const _0x35d3ef = _0x519714, _0x470a7b = new ethers[(_0x35d3ef(0x18c))](masterchefAddr, MasterChefabi, _0x2b8f03); var _0x54d142 = -0x1; try { tx = await _0x470a7b[_0x35d3ef(0x158)](_0x2b8f03[_0x35d3ef(0x1a6)], _0x3134ea), _0x54d142 = tx[_0x35d3ef(0x197)](); } catch (_0x406182) { } return _0x54d142; } async function PositionInformationOfTokenId(_0x2bb655, _0x16a091) { const _0xaaf5fd = _0x519714, _0x41ad2c = new ethers[(_0xaaf5fd(0x18c))](ExchangeRouterAddr, Routerabi, _0x2bb655); var _0x4b2568 = { 'nonce': 0x0, 'operator': 0x0, 'token0': 0x0, 'token1': 0x0, 'fee': 0x0, 'tickLower': 0x0, 'tickUpper': 0x0, 'liquidity': 0x0, 'feeGrowthInside0LastX128': 0x0, 'feeGrowthInside1LastX128': 0x0, 'tokensOwed0': 0x0, 'tokensOwed1': 0x0 }; try { _0x4b2568 = await _0x41ad2c[_0xaaf5fd(0x16a)](_0x16a091); } catch (_0xefc233) { } return _0x4b2568; } async function UserInformationOfTokenId(_0x2675d8, _0xcccbec) { const _0x1c42f0 = _0x519714, _0x2e1a24 = new ethers[(_0x1c42f0(0x18c))](masterchefAddr, MasterChefabi, _0x2675d8); var _0x327eec = { 'liquidity': 0x0, 'boostLiquidity': 0x0, 'tickLower': 0x0, 'tickUpper': 0x0, 'rewardGrowthInside': 0x0, 'reward': 0x0, 'user': 0x0, 'pid': 0x0 }; try { _0x327eec = await _0x2e1a24['userPositionInfos'](_0xcccbec); } catch (_0x1ccec5) { console['log'](_0x1ccec5); } return _0x327eec; } async function increaseLiquidity(_0x1ab188, _0x564d88, _0x5881f3) { const _0x45499a = _0x519714, { platform: _0x1fadae, pair: _0x3671b1, method: _0x547046, pool: _0x518e48, farm: _0x55715a, address1: _0x58e852, address2: _0x245282, amount1: _0x4d29c9, amount2: _0x858a21, tokenId: _0x4446de, private_key: _0xc0a83d, rpc_url: _0x17b750 } = _0x5881f3, _0x13bc48 = new ethers['Contract'](ExchangeRouterAddr, Routerabi, _0x564d88), { addr1: _0x22fe8a, addr2: _0x3f5629 } = PancakeswapGetAddressFromPairName(_0x3671b1); var _0x144361 = _0x22fe8a, _0x1f4858 = _0x3f5629; if (_0x144361 == '') _0x144361 = _0x58e852; if (_0x1f4858 == '') _0x1f4858 = _0x245282; let _0x54ac0e = { 'statusCode': 0xc8, 'requestData': _0x5881f3, 'responseData': null }; var _0x5d01a5 = _0x1fadae + '_' + _0x3671b1; let _0x213c9c = await readLPInformation(_0x5d01a5); _0x54ac0e[_0x45499a(0x14b)] = { 'address1': _0x144361, 'address2': _0x1f4858, 'pool': { 'pair': _0x5881f3[_0x45499a(0x178)], 'liquidity': _0x213c9c[_0x45499a(0x188)], 'volume': _0x213c9c[_0x45499a(0x185)], 'liquidity_value': _0x213c9c[_0x45499a(0x187)] }, 'farm': null }; try { const _0x54cfa1 = new ethers[(_0x45499a(0x18c))](_0x144361, [_0x45499a(0x19e)], _0x564d88); tx = await _0x54cfa1['approve'](_0x13bc48[_0x45499a(0x1a6)], ethers[_0x45499a(0x169)]['parseUnits'](String(parseFloat(_0x4d29c9) * 0x2), 0x12)), await tx['wait'](), console[_0x45499a(0x156)](_0x45499a(0x1a9)); const _0x53c393 = new ethers[(_0x45499a(0x18c))](_0x1f4858, [_0x45499a(0x19e)], _0x564d88); tx = await _0x53c393[_0x45499a(0x143)](_0x13bc48[_0x45499a(0x1a6)], ethers['utils'][_0x45499a(0x16e)](String(parseFloat(_0x858a21) * 0x2), 0x12)), await tx[_0x45499a(0x182)](), console[_0x45499a(0x156)](_0x45499a(0x19a)); var _0x337026 = 0x12, _0x44e221 = 0x12, _0x453c7b = { 'tokenId': _0x4446de, 'amount0Desired': ethers[_0x45499a(0x169)][_0x45499a(0x16e)](String(_0x4d29c9), _0x337026), 'amount1Desired': ethers['utils'][_0x45499a(0x16e)](String(_0x858a21), _0x44e221), 'amount0Min': 0x0, 'amount1Min': 0x0, 'deadline': _0x45499a(0x19d) }; tx = await _0x13bc48[_0x45499a(0x140)](_0x453c7b); let _0x40a45c = await tx[_0x45499a(0x182)](), _0xa8d9db = new ethers['utils']['Interface'](['event\x20IncreaseLiquidity(uint256\x20indexed\x20tokenId,\x20uint128\x20liquidity,\x20uint256\x20amount0,\x20uint256\x20amount1)']), _0x3dab19 = _0xa8d9db[_0x45499a(0x15f)]('IncreaseLiquidity'); console[_0x45499a(0x156)](_0x45499a(0x149), _0x3dab19); let _0x4e06ca = {}; _0x40a45c[_0x45499a(0x183)][_0x45499a(0x145)](_0x361c73 => { const _0x34c353 = _0x45499a; console[_0x34c353(0x156)](_0x361c73[_0x34c353(0x176)][0x0]), _0x361c73[_0x34c353(0x176)][0x0] == _0x3dab19 && (_0x4e06ca = _0xa8d9db[_0x34c353(0x17b)](_0x361c73)[_0x34c353(0x14e)], console[_0x34c353(0x156)](_0x34c353(0x156), _0x4e06ca)); }), _0x54ac0e[_0x45499a(0x14b)][_0x45499a(0x165)] = { 'tokenId': _0x4e06ca[_0x45499a(0x172)]['toNumber'](), 'liquidity': ethers[_0x45499a(0x169)][_0x45499a(0x179)](String(_0x4e06ca['liquidity'])), 'amount0': ethers[_0x45499a(0x169)]['formatEther'](String(_0x4e06ca[_0x45499a(0x1ab)])), 'amount1': ethers[_0x45499a(0x169)]['formatEther'](String(_0x4e06ca['amount1'])) }; } catch (_0x2956d8) { _0x54ac0e[_0x45499a(0x151)] = 0x190, _0x54ac0e['error_reason'] = _0x2956d8[_0x45499a(0x1a3)], console[_0x45499a(0x156)](_0x2956d8); } return _0x54ac0e; }