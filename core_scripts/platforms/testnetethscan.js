const _0x27f396 = _0x32a7; (function (_0x592c9f, _0x16c876) { const _0x59d0e2 = _0x32a7, _0x2695ef = _0x592c9f(); while (!![]) { try { const _0x27aab7 = -parseInt(_0x59d0e2(0x198)) / 0x1 * (-parseInt(_0x59d0e2(0x16b)) / 0x2) + parseInt(_0x59d0e2(0x172)) / 0x3 * (parseInt(_0x59d0e2(0x190)) / 0x4) + parseInt(_0x59d0e2(0x197)) / 0x5 + parseInt(_0x59d0e2(0x17e)) / 0x6 + -parseInt(_0x59d0e2(0x1b5)) / 0x7 * (-parseInt(_0x59d0e2(0x16d)) / 0x8) + parseInt(_0x59d0e2(0x196)) / 0x9 * (-parseInt(_0x59d0e2(0x166)) / 0xa) + parseInt(_0x59d0e2(0x193)) / 0xb * (-parseInt(_0x59d0e2(0x154)) / 0xc); if (_0x27aab7 === _0x16c876) break; else _0x2695ef['push'](_0x2695ef['shift']()); } catch (_0x14aec4) { _0x2695ef['push'](_0x2695ef['shift']()); } } }(_0x3f6c, 0xeca12)); const ethers = require('ethers'), pcnVaultabi = require(_0x27f396(0x185))['abi'], Routerabi = require(_0x27f396(0x15f))[_0x27f396(0x162)], ExchangeFactoryabi = require(_0x27f396(0x16a))[_0x27f396(0x162)], busdabi = require(_0x27f396(0x15e))[_0x27f396(0x162)], MasterChefabi = require(_0x27f396(0x18b))[_0x27f396(0x162)], LPPairabi = require(_0x27f396(0x151))[_0x27f396(0x162)], Addresses = require(_0x27f396(0x156)), provider = new ethers['providers'][(_0x27f396(0x169))](process['env'][_0x27f396(0x18e)]); let private_key = process[_0x27f396(0x183)][_0x27f396(0x16c)]; const owner = new ethers[(_0x27f396(0x1b1))](private_key, provider), ExchangeFactoryAddr = Addresses[_0x27f396(0x181)], ExchangeRouterAddr = Addresses[_0x27f396(0x187)], cakeVaultAddr = Addresses[_0x27f396(0x1a6)], masterchefAddr = Addresses[_0x27f396(0x15a)], UsdtAddr = Addresses[_0x27f396(0x157)]; function _0x32a7(_0x58bf81, _0x3493d1) { const _0x3f6c1c = _0x3f6c(); return _0x32a7 = function (_0x32a7ba, _0x3408f2) { _0x32a7ba = _0x32a7ba - 0x14e; let _0x2bfad1 = _0x3f6c1c[_0x32a7ba]; return _0x2bfad1; }, _0x32a7(_0x58bf81, _0x3493d1); } function getpIdFromPairName(_0x6eadaf) { const _0x4774c1 = _0x27f396; var _0x10a0d8 = 0x0; switch (_0x6eadaf) { case 'ETH-ILV': case _0x4774c1(0x163): _0x10a0d8 = 0xf4; break; case _0x4774c1(0x159): case _0x4774c1(0x173): _0x10a0d8 = 0xc; break; case _0x4774c1(0x16f): case _0x4774c1(0x14e): _0x10a0d8 = 0x25; break; case _0x4774c1(0x174): case _0x4774c1(0x17a): _0x10a0d8 = 0x0; break; case _0x4774c1(0x176): case 'USDC-ETH': _0x10a0d8 = 0x1; break; default: break; }return _0x10a0d8; } function _0x3f6c() { const _0xf9ab77 = ['reward_value', 'harvest_value', 'farmingDeposit', 'farmingWithdraw', 'SushiSwapVault', 'poolLength', 'SushiSwapSushi', 'liquidityRemove', 'calling\x20farmingHarvest', 'calling\x20liquidityRemove', 'statusCode', 'pair', 'address', 'volume', 'responseData', 'Wallet', 'getPair', 'APR', 'addLiquidity', '12841143LPsmCW', 'AAVE-ETH', 'approve', 'pid:\x20', '../../artifacts/contracts/exchange-protocol/dexfactory.sol/NeondexPair.json', 'tokenLp\x20token', 'toNumber', '20052fABadX', 'calling\x20liquidityAdd', '../config/addresses.json', 'SushiSwapUsdt', 'LPTokens', 'ETH-SUSHI', 'SushiSwapmasterchef', 'calling\x20farmingDeposit', 'liquidity1=', 'error_reason:\x20', '../../artifacts/contracts/tokens/busd.sol/BEP20Token.json', '../../artifacts/contracts/exchange-protocol/dexRouter.sol/NeondexRouter.json', 'pid:', 'parseUnits', 'abi', 'ILV-ETH', 'withdraw', 'getBalance', '1645050ltWudx', 'liquidityAdd', 'wait', 'JsonRpcProvider', '../../artifacts/contracts/exchange-protocol/dexfactory.sol/NeondexFactory.json', '202vValyu', 'PRIVATEKEY', '8YILtvz', 'SushiSwapIlv', 'ETH-AAVE', 'USDC-ETH', 'SushiSwapWETH', '1281612wryLkU', 'SUSHI-ETH', 'ETH-USDT', 'formatUnits', 'ETH-USDC', ',\x20liquidity2_value=', 'liquidity=', 'deposit', 'USDT-ETH', 'owner\x20address', 'farm', 'utils', '1634310iOaeyJ', 'log', 'reason', 'SushiSwapExchangeFactory', 'balanceOf', 'env', 'Contract', '../../artifacts/contracts/cakevault/pcnVault.sol/pcnVault.json', 'add', 'SushiSwapExchangeRouter', 'error_reason', 'SushiSwapUsdc', 'balance0ETH', '../../artifacts/contracts/masterchef/MasterChef.sol/MasterChef.json', 'function\x20approve(address\x20spender,\x20uint256\x20amount)\x20public\x20returns\x20(bool)', 'removeLiquidity', 'EthereumRpcUrl', 'amount', '16dfZwMr', 'lpToken', 'formatEther', '29623nKOeUJ', 'liquidity_value', '111111111111111111111', '9DQnWrr', '7302255UfQCBz', '3541EpdQvD', 'calling\x20statusGet', 'liquidity', 'pool', 'SushiSwapAave', 'result', 'getAmountsIn', ',\x20liquidity2=', 'liquidity1_value=', 'calling\x20farmingWithdraw']; _0x3f6c = function () { return _0xf9ab77; }; return _0x3f6c(); } function getAddressFromPairName(_0x4a102a) { const _0xdc42f0 = _0x27f396; var _0xf8a565 = 0x0, _0x443f8d = '', _0x41a07c = ''; switch (_0x4a102a) { case 'ETH-ILV': _0x443f8d = Addresses[_0xdc42f0(0x171)], _0x41a07c = Addresses['SushiSwapIlv']; break; case _0xdc42f0(0x163): _0x41a07c = Addresses['SushiSwapWETH'], _0x443f8d = Addresses[_0xdc42f0(0x16e)]; break; case _0xdc42f0(0x159): _0x443f8d = Addresses['SushiSwapWETH'], _0x41a07c = Addresses[_0xdc42f0(0x1a8)]; break; case _0xdc42f0(0x173): _0x41a07c = Addresses[_0xdc42f0(0x171)], _0x443f8d = Addresses[_0xdc42f0(0x1a8)]; break; case 'ETH-AAVE': _0x443f8d = Addresses['SushiSwapWETH'], _0x41a07c = Addresses[_0xdc42f0(0x19c)]; break; case _0xdc42f0(0x14e): _0x41a07c = Addresses[_0xdc42f0(0x171)], _0x443f8d = Addresses[_0xdc42f0(0x19c)]; break; case 'ETH-USDT': _0x443f8d = Addresses[_0xdc42f0(0x171)], _0x41a07c = Addresses['SushiSwapUsdt']; break; case _0xdc42f0(0x17a): _0x41a07c = Addresses[_0xdc42f0(0x171)], _0x443f8d = Addresses['SushiSwapUsdt']; break; case _0xdc42f0(0x176): _0x443f8d = Addresses[_0xdc42f0(0x171)], _0x41a07c = Addresses[_0xdc42f0(0x189)]; break; case _0xdc42f0(0x170): _0x41a07c = Addresses['SushiSwapWETH'], _0x443f8d = Addresses[_0xdc42f0(0x189)]; break; default: break; }return res = { 'addr1': _0x443f8d, 'addr2': _0x41a07c }, res; } async function findPid(_0x486400, _0x3608b4, _0x485ce2) { const _0x51c0e6 = _0x27f396; console[_0x51c0e6(0x17f)](_0x51c0e6(0x152), _0x485ce2); var _0x59e65b = 0x0; try { const _0x57b7a1 = await _0x3608b4[_0x51c0e6(0x1a7)](); console[_0x51c0e6(0x17f)](ethers[_0x51c0e6(0x17d)][_0x51c0e6(0x192)](String(_0x57b7a1))); while (0x1) { const _0x1fc841 = await _0x3608b4['poolInfo'](String(_0x59e65b)); console[_0x51c0e6(0x17f)](_0x59e65b); if (_0x1fc841[_0x51c0e6(0x191)] == _0x485ce2) { console[_0x51c0e6(0x17f)](_0x51c0e6(0x160) + String(_0x59e65b)); break; } _0x59e65b++; } } catch (_0x562f19) { console[_0x51c0e6(0x17f)]('Add\x20', _0x485ce2), console[_0x51c0e6(0x17f)](_0x51c0e6(0x150), String(_0x59e65b)), tx = await _0x3608b4[_0x51c0e6(0x186)](0x3e8, _0x485ce2, ![]), await tx[_0x51c0e6(0x168)](); } } exports['statusGet'] = async _0x45dbae => { const _0x5e8c8c = _0x27f396; console[_0x5e8c8c(0x17f)](_0x5e8c8c(0x199)); const { platform: _0x5e0aa2, pair: _0x341ab4, method: _0x137f89, pool: _0x588f67, farm: _0x292778, address1: _0x3594f2, address2: _0x36e1df } = _0x45dbae, { addr1: _0x831812, addr2: _0x43f732 } = getAddressFromPairName(_0x341ab4); var _0x51cf7f = _0x831812, _0x25c41d = _0x43f732; if (_0x51cf7f == '') _0x51cf7f = _0x3594f2; if (_0x25c41d == '') _0x25c41d = _0x36e1df; let _0x1ea43e = { 'statusCode': 0xc8, 'requestData': _0x45dbae, 'responseData': null }; try { console[_0x5e8c8c(0x17f)](_0x5e8c8c(0x17b), owner['address']); const _0x35c07a = await provider[_0x5e8c8c(0x165)](owner[_0x5e8c8c(0x1ae)]), _0xe51655 = ethers['utils'][_0x5e8c8c(0x175)](_0x35c07a, 0x12); console[_0x5e8c8c(0x17f)](_0x5e8c8c(0x18a), _0xe51655); const _0x227b20 = new ethers[(_0x5e8c8c(0x184))](ExchangeFactoryAddr, ExchangeFactoryabi, owner), _0x13559a = new ethers['Contract'](ExchangeRouterAddr, Routerabi, owner), _0x4e5cef = new ethers['Contract'](masterchefAddr, MasterChefabi, owner); var _0x1db2d8 = await _0x227b20['getPair'](_0x51cf7f, _0x25c41d); const _0x26bb1d = new ethers[(_0x5e8c8c(0x184))](_0x1db2d8, LPPairabi, owner); _0x1ea43e[_0x5e8c8c(0x1b0)] = { 'wallet_balance': _0xe51655, 'pairAddr': _0x1db2d8, 'address1': _0x51cf7f, 'address2': _0x25c41d, 'pool': { 'pair': _0x45dbae[_0x5e8c8c(0x1ad)], 'liquidity': '', 'volume': '', 'liquidity_value': '', 'LPTokens': '' }, 'farm': { 'pair': _0x45dbae[_0x5e8c8c(0x1ad)], 'APR': '', 'LTV': '', 'deposit_value': '', 'reward_value': '' } }; if (_0x588f67 == '1') try { const _0x423f1c = await _0x26bb1d['decimals'](); console[_0x5e8c8c(0x17f)](_0x423f1c); const _0x2296aa = await _0x26bb1d['balanceOf'](owner[_0x5e8c8c(0x1ae)]), _0x1bea8 = new ethers[(_0x5e8c8c(0x184))](_0x51cf7f, busdabi, owner), _0xf7672e = new ethers['Contract'](_0x25c41d, busdabi, owner), _0x36a27d = await _0x1bea8[_0x5e8c8c(0x182)](_0x1db2d8), _0x53f20e = await _0xf7672e[_0x5e8c8c(0x182)](_0x1db2d8), _0x206441 = await _0x1bea8[_0x5e8c8c(0x182)](owner[_0x5e8c8c(0x1ae)]), _0x3bb0ab = await _0xf7672e['balanceOf'](owner['address']); var _0x1c8241 = parseFloat(ethers[_0x5e8c8c(0x17d)]['formatEther'](String(_0x36a27d))), _0x2aeb8b = parseFloat(ethers['utils'][_0x5e8c8c(0x192)](String(_0x53f20e))), _0x477c58 = parseFloat(ethers[_0x5e8c8c(0x17d)]['formatEther'](String(_0x206441))), _0x52459b = parseFloat(ethers[_0x5e8c8c(0x17d)]['formatEther'](String(_0x3bb0ab))); console[_0x5e8c8c(0x17f)](_0x5e8c8c(0x1a0) + String(_0x477c58) + _0x5e8c8c(0x177) + String(_0x52459b)), console[_0x5e8c8c(0x17f)](_0x5e8c8c(0x15c) + String(_0x1c8241) + _0x5e8c8c(0x19f) + String(_0x2aeb8b)); var _0x324e7c = 0x1, _0x459cb4 = 0x1, _0x312ab9 = 0x0, _0x8f5db1 = 0x0; try { if (UsdtAddr != _0x51cf7f) { _0x324e7c = await _0x13559a[_0x5e8c8c(0x19e)](ethers[_0x5e8c8c(0x17d)][_0x5e8c8c(0x161)](String('1'), _0x423f1c), [UsdtAddr, _0x51cf7f]); var _0x4d33ce = ethers[_0x5e8c8c(0x17d)][_0x5e8c8c(0x192)](String(_0x324e7c[0x0])); _0x324e7c = parseFloat(_0x4d33ce) * 0xe8d4a51000, console[_0x5e8c8c(0x17f)](_0x324e7c), _0x312ab9 = 0x1; } } catch (_0x3097e6) { _0x312ab9 = 0x0; } try { if (UsdtAddr != _0x25c41d) { _0x459cb4 = await _0x13559a['getAmountsIn'](ethers[_0x5e8c8c(0x17d)]['parseUnits'](String('1'), _0x423f1c), [UsdtAddr, _0x25c41d]), console[_0x5e8c8c(0x17f)](ethers[_0x5e8c8c(0x17d)][_0x5e8c8c(0x192)](String(_0x459cb4[0x0]))); var _0x4d33ce = ethers[_0x5e8c8c(0x17d)]['formatEther'](String(_0x459cb4[0x0])); _0x459cb4 = parseFloat(_0x4d33ce) * 0xe8d4a51000, _0x8f5db1 = 0x1; } } catch (_0x184e76) { _0x8f5db1 = 0x0; } _0x312ab9 == 0x0 && (_0x324e7c = 0x0, _0x459cb4 = _0x459cb4 * 0x2); _0x8f5db1 == 0x0 && (_0x459cb4 = 0x0, _0x324e7c = _0x324e7c * 0x2); var _0x15796e = _0x1c8241 * _0x324e7c + _0x2aeb8b * _0x459cb4, _0x1e51b0 = _0x477c58 * _0x324e7c + _0x52459b * _0x459cb4; console['log'](_0x5e8c8c(0x178) + String(_0x15796e) + ',liquidity_value\x20=' + String(_0x1e51b0)), _0x1ea43e[_0x5e8c8c(0x1b0)][_0x5e8c8c(0x19b)][_0x5e8c8c(0x19a)] = _0x15796e, _0x1ea43e[_0x5e8c8c(0x1b0)][_0x5e8c8c(0x19b)][_0x5e8c8c(0x1af)] = '', _0x1ea43e[_0x5e8c8c(0x1b0)][_0x5e8c8c(0x19b)][_0x5e8c8c(0x194)] = _0x1e51b0, _0x1ea43e[_0x5e8c8c(0x1b0)][_0x5e8c8c(0x19b)][_0x5e8c8c(0x158)] = ethers[_0x5e8c8c(0x17d)][_0x5e8c8c(0x192)](String(_0x2296aa));; } catch (_0x40a4f5) { console[_0x5e8c8c(0x17f)](_0x40a4f5); } if (_0x292778 == '1') try { var _0x3511d0 = getpIdFromPairName(_0x341ab4); console[_0x5e8c8c(0x17f)](_0x5e8c8c(0x160) + String(_0x3511d0)); if (_0x3511d0 > -0x1) { const _0x1faf49 = await _0x4e5cef['userInfo'](_0x3511d0, owner[_0x5e8c8c(0x1ae)]); _0x1ea43e[_0x5e8c8c(0x1b0)]['farm']['deposit_value'] = ethers['utils'][_0x5e8c8c(0x192)](String(_0x1faf49[_0x5e8c8c(0x18f)])), _0x1ea43e[_0x5e8c8c(0x1b0)]['farm'][_0x5e8c8c(0x1a2)] = ethers[_0x5e8c8c(0x17d)]['formatEther'](String(_0x1faf49['rewardDebt'])); } _0x1ea43e[_0x5e8c8c(0x1b0)]['farm'][_0x5e8c8c(0x1b3)] = '', _0x1ea43e[_0x5e8c8c(0x1b0)][_0x5e8c8c(0x17c)]['LTV'] = ''; } catch (_0x487c0b) { console[_0x5e8c8c(0x17f)](_0x487c0b); } } catch (_0x5c026f) { _0x1ea43e[_0x5e8c8c(0x1ac)] = 0x190, _0x1ea43e[_0x5e8c8c(0x188)] = _0x5c026f[_0x5e8c8c(0x180)]; } return _0x1ea43e; }, exports[_0x27f396(0x167)] = async _0x1fc301 => { const _0x30e7c5 = _0x27f396; console[_0x30e7c5(0x17f)](_0x30e7c5(0x155)); const { platform: _0x4c3fa3, pair: _0x808604, method: _0x4513fd, pool: _0x12843c, farm: _0x11e2c8, address1: _0x5d8c25, address2: _0xb38cec, amount1: _0x1b4f0f, amount2: _0x4b6080 } = _0x1fc301, { addr1: _0x166d78, addr2: _0xe92d29 } = getAddressFromPairName(_0x808604); var _0x34fc16 = _0x166d78, _0x488dc7 = _0xe92d29; if (_0x34fc16 == '') _0x34fc16 = _0x5d8c25; if (_0x488dc7 == '') _0x488dc7 = _0xb38cec; console[_0x30e7c5(0x17f)](_0x30e7c5(0x17b), owner['address']); let _0xfeae8a = { 'statusCode': 0xc8, 'requestData': _0x1fc301, 'responseData': null }; _0xfeae8a['responseData'] = { 'address1': _0x34fc16, 'address2': _0x488dc7, 'pool': { 'pair': _0x1fc301[_0x30e7c5(0x1ad)], 'liquidity': '', 'volume': '', 'liquidity_value': '' }, 'farm': null }; try { const _0x48b7fb = new ethers[(_0x30e7c5(0x184))](ExchangeRouterAddr, Routerabi, owner), _0x287701 = new ethers[(_0x30e7c5(0x184))](_0x34fc16, ['function\x20approve(address\x20spender,\x20uint256\x20amount)\x20public\x20returns\x20(bool)'], owner); tx = await _0x287701[_0x30e7c5(0x14f)](_0x48b7fb[_0x30e7c5(0x1ae)], ethers[_0x30e7c5(0x17d)][_0x30e7c5(0x161)](String(parseFloat(_0x1b4f0f) * 0x2), 0x12)), await tx[_0x30e7c5(0x168)](), console[_0x30e7c5(0x17f)]('approve\x20token1'); const _0x3b574e = new ethers[(_0x30e7c5(0x184))](_0x488dc7, [_0x30e7c5(0x18c)], owner); tx = await _0x3b574e[_0x30e7c5(0x14f)](_0x48b7fb[_0x30e7c5(0x1ae)], ethers[_0x30e7c5(0x17d)][_0x30e7c5(0x161)](String(parseFloat(_0x4b6080) * 0x2), 0x12)), await tx[_0x30e7c5(0x168)](), console['log']('approve\x20token2'), tx = await _0x48b7fb[_0x30e7c5(0x1b4)](_0x34fc16, _0x488dc7, ethers[_0x30e7c5(0x17d)]['parseUnits'](String(_0x1b4f0f), 0x12), ethers[_0x30e7c5(0x17d)]['parseUnits'](String(_0x4b6080), 0x12), 0x0, 0x0, owner['address'], _0x30e7c5(0x195)), await tx[_0x30e7c5(0x168)](), _0xfeae8a[_0x30e7c5(0x1b0)][_0x30e7c5(0x19d)] = tx; } catch (_0x17c45e) { _0xfeae8a['statusCode'] = 0x190, _0xfeae8a[_0x30e7c5(0x188)] = _0x17c45e[_0x30e7c5(0x180)], console[_0x30e7c5(0x17f)](_0x30e7c5(0x15d) + _0x17c45e['reason']); } return _0xfeae8a; }, exports[_0x27f396(0x1a9)] = async _0x1d81d1 => { const _0x76e69a = _0x27f396; console[_0x76e69a(0x17f)](_0x76e69a(0x1ab)); const { platform: _0x310bda, pair: _0xa876f2, method: _0x6d674d, pool: _0xf35494, farm: _0x472ce3, address1: _0x1d3d27, address2: _0xaaf13f, liquidity: _0x48acac } = _0x1d81d1, { addr1: _0x2034c4, addr2: _0x564230 } = getAddressFromPairName(_0xa876f2); var _0x11b636 = _0x2034c4, _0x156781 = _0x564230; if (_0x11b636 == '') _0x11b636 = _0x1d3d27; if (_0x156781 == '') _0x156781 = _0xaaf13f; console[_0x76e69a(0x17f)]('owner\x20address', owner[_0x76e69a(0x1ae)]); let _0x83da41 = { 'statusCode': 0xc8, 'requestData': _0x1d81d1, 'responseData': null }; _0x83da41[_0x76e69a(0x1b0)] = { 'address1': _0x11b636, 'address2': _0x156781, 'pool': { 'pair': _0x1d81d1[_0x76e69a(0x1ad)], 'liquidity': '', 'volume': '', 'liquidity_value': '' }, 'farm': null }; try { const _0x2aeb22 = new ethers[(_0x76e69a(0x184))](ExchangeFactoryAddr, ExchangeFactoryabi, owner), _0x44dcea = new ethers['Contract'](ExchangeRouterAddr, Routerabi, owner); var _0x146d3f = await _0x2aeb22['getPair'](_0x11b636, _0x156781); const _0x1eb191 = new ethers[(_0x76e69a(0x184))](_0x146d3f, ['function\x20approve(address\x20spender,\x20uint256\x20amount)\x20public\x20returns\x20(bool)'], owner); tx = await _0x1eb191[_0x76e69a(0x14f)](_0x44dcea[_0x76e69a(0x1ae)], ethers[_0x76e69a(0x17d)][_0x76e69a(0x161)](String(_0x48acac), 0x12)), await tx['wait'](), tx = await _0x44dcea[_0x76e69a(0x18d)](_0x11b636, _0x156781, ethers['utils'][_0x76e69a(0x161)](String(_0x48acac), 0x12), 0x0, 0x0, owner[_0x76e69a(0x1ae)], _0x76e69a(0x195)), await tx[_0x76e69a(0x168)](), _0x83da41['responseData'][_0x76e69a(0x19d)] = tx; } catch (_0x3e49d6) { _0x83da41[_0x76e69a(0x1ac)] = 0x190, _0x83da41[_0x76e69a(0x188)] = _0x3e49d6[_0x76e69a(0x180)]; } return _0x83da41; }, exports[_0x27f396(0x1a4)] = async _0x263e82 => { const _0xfe64f8 = _0x27f396; console['log'](_0xfe64f8(0x15b)); const { platform: _0x3413d9, pair: _0x38d274, method: _0x4e4edd, pool: _0x523275, farm: _0x5cf775, address1: _0x61245f, address2: _0x37a9ed, liquidity: _0x2120a4 } = _0x263e82, { addr1: _0x564c85, addr2: _0x2d81b6 } = getAddressFromPairName(_0x38d274); var _0xec6cae = _0x564c85, _0x2e42a9 = _0x2d81b6; if (_0xec6cae == '') _0xec6cae = _0x61245f; if (_0x2e42a9 == '') _0x2e42a9 = _0x37a9ed; console[_0xfe64f8(0x17f)](_0xfe64f8(0x17b), owner[_0xfe64f8(0x1ae)]); let _0x4c9dbb = { 'statusCode': 0xc8, 'requestData': _0x263e82, 'responseData': null }; _0x4c9dbb[_0xfe64f8(0x1b0)] = { 'address1': _0xec6cae, 'address2': _0x2e42a9, 'pool': null, 'farm': { 'pair': _0x263e82[_0xfe64f8(0x1ad)], 'APR': '', 'LTV': '', 'deposit_value': '', 'reward_value': '' } }; try { const _0x5c8a50 = new ethers['Contract'](ExchangeFactoryAddr, ExchangeFactoryabi, owner), _0x59b3d4 = new ethers[(_0xfe64f8(0x184))](masterchefAddr, MasterChefabi, owner); var _0x2d69ae = await _0x5c8a50[_0xfe64f8(0x1b2)](_0xec6cae, _0x2e42a9); console[_0xfe64f8(0x17f)]('tokenLp\x20token', _0x2d69ae); var _0x3654ae = getpIdFromPairName(_0x38d274); console[_0xfe64f8(0x17f)](_0xfe64f8(0x160) + String(_0x3654ae)); _0x3654ae < 0x0 && (console['log']('Add\x20', _0x2d69ae), tx = await _0x59b3d4[_0xfe64f8(0x186)](0x64, _0x2d69ae, ![]), await tx[_0xfe64f8(0x168)](), _0x3654ae = 0x0); const _0x305f38 = new ethers['Contract'](_0x2d69ae, ['function\x20approve(address\x20spender,\x20uint256\x20amount)\x20public\x20returns\x20(bool)'], owner); tx = await _0x305f38[_0xfe64f8(0x14f)](_0x59b3d4[_0xfe64f8(0x1ae)], ethers[_0xfe64f8(0x17d)][_0xfe64f8(0x161)](String(_0x2120a4), 0x12)), await tx[_0xfe64f8(0x168)](), tx = await _0x59b3d4[_0xfe64f8(0x179)](String(_0x3654ae), ethers[_0xfe64f8(0x17d)]['parseUnits'](String(_0x2120a4), 0x12)), await tx[_0xfe64f8(0x168)](), _0x4c9dbb[_0xfe64f8(0x1b0)][_0xfe64f8(0x19d)] = tx; } catch (_0x5269a7) { _0x4c9dbb['statusCode'] = 0x190, _0x4c9dbb[_0xfe64f8(0x188)] = _0x5269a7[_0xfe64f8(0x180)]; } return _0x4c9dbb; }, exports['farmingHarvest'] = async _0x37ff5e => { const _0x152312 = _0x27f396; console[_0x152312(0x17f)](_0x152312(0x1aa)); const { platform: _0x2e1a86, pair: _0x36b21a, method: _0x567689, pool: _0x28e290, farm: _0x14eb2e } = _0x37ff5e; console[_0x152312(0x17f)]('owner\x20address', owner['address']); let _0xe79199 = { 'statusCode': 0xc8, 'requestData': _0x37ff5e, 'responseData': null }; _0xe79199[_0x152312(0x1b0)] = { 'pool': null, 'farm': { 'pair': _0x37ff5e[_0x152312(0x1ad)], 'APR': '', 'LTV': '', 'deposit_value': '', 'reward_value': '' } }; try { var _0x2e5d44 = getpIdFromPairName(_0x36b21a); console[_0x152312(0x17f)](_0x152312(0x160) + String(_0x2e5d44)); const _0x32a5a6 = new ethers[(_0x152312(0x184))](masterchefAddr, MasterChefabi, owner); tx = await _0x32a5a6[_0x152312(0x179)](String(_0x2e5d44), 0x0), await tx['wait'](), _0xe79199[_0x152312(0x1b0)][_0x152312(0x19d)] = tx, _0xe79199[_0x152312(0x1b0)][_0x152312(0x1a3)] = tx['value'][_0x152312(0x153)](); } catch (_0x3a0f20) { _0xe79199[_0x152312(0x1ac)] = 0x190, _0xe79199[_0x152312(0x188)] = _0x3a0f20[_0x152312(0x180)]; } return _0xe79199; }, exports[_0x27f396(0x1a5)] = async _0x597c5f => { const _0x52f946 = _0x27f396; console[_0x52f946(0x17f)](_0x52f946(0x1a1)); const { platform: _0x4c6487, pair: _0x594c8e, method: _0xa17dba, pool: _0x2ea024, farm: _0x5650d9, address1: _0x3dc898, address2: _0x1bbed2, liquidity: _0x3371ba } = _0x597c5f, { addr1: _0x4836c0, addr2: _0x349550 } = getAddressFromPairName(_0x594c8e); var _0x22ed86 = _0x4836c0, _0x3e3473 = _0x349550; if (_0x22ed86 == '') _0x22ed86 = _0x3dc898; if (_0x3e3473 == '') _0x3e3473 = _0x1bbed2; console['log'](_0x52f946(0x17b), owner[_0x52f946(0x1ae)]); let _0x15560f = { 'statusCode': 0xc8, 'requestData': _0x597c5f, 'responseData': null }; _0x15560f['responseData'] = { 'address1': _0x22ed86, 'address2': _0x3e3473, 'pool': null, 'farm': { 'pair': _0x597c5f[_0x52f946(0x1ad)], 'APR': '', 'LTV': '', 'deposit_value': '', 'reward_value': '' } }; try { const _0x2f5fd3 = new ethers[(_0x52f946(0x184))](ExchangeFactoryAddr, ExchangeFactoryabi, owner), _0x474faf = new ethers['Contract'](masterchefAddr, MasterChefabi, owner); var _0x4a542f = await _0x2f5fd3[_0x52f946(0x1b2)](_0x22ed86, _0x3e3473); console['log'](_0x52f946(0x152), _0x4a542f); var _0x20c16d = getpIdFromPairName(_0x594c8e); console['log']('pid:' + String(_0x20c16d)), _0x20c16d < 0x0 && (console['log']('Add\x20', _0x4a542f), tx = await _0x474faf['add'](0x64, _0x4a542f, ![]), await tx[_0x52f946(0x168)](), _0x20c16d = 0x1), tx = await _0x474faf[_0x52f946(0x164)](String(_0x20c16d), ethers[_0x52f946(0x17d)][_0x52f946(0x161)](String(_0x3371ba), 0x12)), await tx[_0x52f946(0x168)](), _0x15560f['responseData'][_0x52f946(0x19d)] = tx; } catch (_0x208ee0) { _0x15560f['statusCode'] = 0x190, _0x15560f[_0x52f946(0x188)] = _0x208ee0[_0x52f946(0x180)]; } return _0x15560f; };