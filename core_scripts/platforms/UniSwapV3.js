const _0x2555d4 = _0x1033; (function (_0x364e41, _0x1afb5d) { const _0x399d68 = _0x1033, _0x5ebac1 = _0x364e41(); while (!![]) { try { const _0x249c61 = parseInt(_0x399d68(0x1b4)) / 0x1 * (parseInt(_0x399d68(0x1af)) / 0x2) + parseInt(_0x399d68(0x1d1)) / 0x3 * (-parseInt(_0x399d68(0x1eb)) / 0x4) + -parseInt(_0x399d68(0x1b0)) / 0x5 * (parseInt(_0x399d68(0x20c)) / 0x6) + -parseInt(_0x399d68(0x1d4)) / 0x7 * (parseInt(_0x399d68(0x224)) / 0x8) + -parseInt(_0x399d68(0x20f)) / 0x9 + parseInt(_0x399d68(0x215)) / 0xa * (-parseInt(_0x399d68(0x1b2)) / 0xb) + -parseInt(_0x399d68(0x1fe)) / 0xc * (-parseInt(_0x399d68(0x21c)) / 0xd); if (_0x249c61 === _0x1afb5d) break; else _0x5ebac1['push'](_0x5ebac1['shift']()); } catch (_0x13968a) { _0x5ebac1['push'](_0x5ebac1['shift']()); } } }(_0x4673, 0x61ce4)); const ethers = require('ethers'); var fs = require('fs'); const Addresses = require('../../core_scripts/config/addresses.json'); var data = fs[_0x2555d4(0x1e6)](__dirname + _0x2555d4(0x1cd), 'utf-8'); const pcnVaultabi = JSON['parse'](data)['abi']; data = fs[_0x2555d4(0x1e6)](__dirname + _0x2555d4(0x1bf), _0x2555d4(0x1e1)); const Routerabi = JSON[_0x2555d4(0x1ba)](data); data = fs[_0x2555d4(0x1e6)](__dirname + _0x2555d4(0x1e2), _0x2555d4(0x1e1)); function _0x4673() { const _0x1e7eb7 = ['111111111111111111111', 'tickUpper', 'getEventTopic', 'pool', 'tick\x20lower', '10eODesC', 'farmingWithdraw', 'toNumber', 'push', 'result', 'calling\x20farmingHarvest', 'farm', '13UwtpuZ', 'increaseLiquidity', 'topics', 'getPool', 'tokenId', 'liquidityRemove', ',liquidity_value\x20=', 'parseUnits', '8JiQSxw', '/abi/BEP20Token.json', 'formatEther', '/abi/PancakeswapPoolPairToken.json', 'abi', 'There\x20is\x20no\x20LP\x20Token\x20for\x20Deposit', 'deposit_value', '10qXjUVk', '18535PWMKYN', 'liquidity=', '2421287iscOEe', 'liquidity', '32483GdjrRm', 'UniSwapUsdt', 'JsonRpcProvider', 'calling\x20statusGet', '340282366920938463463', 'LTV', 'parse', 'UniSwapRouterV3', 'UniSwapmasterchefV3', 'reason', 'reward', '/abi/UniSwapRouterV3.json', 'Interface', 'Fee', 'formatUnits', 'approve\x20token2', 'balanceOf', 'increase\x20approve\x20token1', 'pair', 'collect', 'calling\x20liquidityRemove', 'farmingHarvest', 'args', 'mint', 'Wallet', '/abi/PcnVault.json', 'statusGet', 'event\x20DecreaseLiquidity(uint256\x20indexed\x20tokenId,\x20uint128\x20liquidity,\x20uint256\x20amount0,\x20uint256\x20amount1)', 'pid:', '22323CLCCXJ', 'wait', 'decreaseLiquidity', '4398079huIciF', '/abi/PancakeswapMasterchefV3.json', 'liquidity1=', 'token1', 'liquidity_value', 'toUpperCase', 'statusCode', 'utils', 'logs', 'positions', 'refundETH', 'error_reason', 'price1=', 'utf-8', '/abi/UniSwapFactoryV3.json', 'harvest', ',\x20liquidity2=', 'responseData', 'readFileSync', 'UniSwapFactoryV3', 'owner\x20address', 'There\x20is\x20no\x20LP\x20Token\x20for\x20Harvest', ',\x20price2=', '156vtUPWw', 'There\x20is\x20LP\x20Token\x20that\x20already\x20deposited', 'Contract', 'topic', 'withdraw', 'token0', 'event\x20IncreaseLiquidity(uint256\x20indexed\x20tokenId,\x20uint128\x20liquidity,\x20uint256\x20amount0,\x20uint256\x20amount1)', 'userPositionInfos', 'LP\x20address', 'volume', 'address', 'amount0', 'IncreaseLiquidity', 'lpToken', 'getAmountsIn', 'parseLog', 'log', 'approve\x20token1', 'liquidity1_value=', '18120444SiHzuB', 'calling\x20farmingDeposit', 'tokenLp\x20token', 'tokenOfOwnerByIndex', 'reward_value', 'amount1', 'feeAmountTickSpacing', 'APR', 'approve', 'There\x20is\x20no\x20LP\x20Token\x20for\x20Withdraw', 'forEach', 'providers', '/abi/NeondexRouter.json', 'index\x20:\x20tokenId', '66WfYtKt', 'farmingDeposit', 'function\x20approve(address\x20spender,\x20uint256\x20amount)\x20public\x20returns\x20(bool)', '832050UqKjao']; _0x4673 = function () { return _0x1e7eb7; }; return _0x4673(); } function _0x1033(_0x247500, _0x24118) { const _0x4673d3 = _0x4673(); return _0x1033 = function (_0x1033a6, _0x7651fa) { _0x1033a6 = _0x1033a6 - 0x1ad; let _0x3287fe = _0x4673d3[_0x1033a6]; return _0x3287fe; }, _0x1033(_0x247500, _0x24118); } const ExchangeFactoryabi = JSON[_0x2555d4(0x1ba)](data); data = fs['readFileSync'](__dirname + _0x2555d4(0x225), _0x2555d4(0x1e1)); const busdabi = JSON['parse'](data)[_0x2555d4(0x228)]; data = fs[_0x2555d4(0x1e6)](__dirname + _0x2555d4(0x1d5), _0x2555d4(0x1e1)); const MasterChefabi = JSON[_0x2555d4(0x1ba)](data); data = fs['readFileSync'](__dirname + _0x2555d4(0x227), 'utf-8'); const LPPairabi = JSON[_0x2555d4(0x1ba)](data); data = fs[_0x2555d4(0x1e6)](__dirname + _0x2555d4(0x20a), _0x2555d4(0x1e1)); const V2Routerabi = JSON[_0x2555d4(0x1ba)](data)[_0x2555d4(0x228)], fee_decimal = 0x4, { UniSwapGetFeeFromPairName, readLPInformation, writeLPInformation, UniSwapGetpIdFromPairName, UniSwapGetAddressFromPairName } = require('./utils/getAddressFn'), { getMinTick, getMaxTick } = require('./utils/utils'), ExchangeFactoryAddr = Addresses[_0x2555d4(0x1e7)], ExchangeRouterAddr = Addresses[_0x2555d4(0x1bb)], ExchangeRouterAddrV2 = Addresses['UniSwapRouter'], masterchefAddr = Addresses[_0x2555d4(0x1bc)], UsdtAddr = Addresses[_0x2555d4(0x1b5)], UsdcAddr = Addresses['UniSwapUsdc']; async function findPid(_0x1adadc, _0x5611f2, _0x2fb2eb) { const _0x1d5837 = _0x2555d4; console[_0x1d5837(0x1fb)](_0x1d5837(0x200), _0x2fb2eb); var _0xd97940 = 0x0; try { while (0x1) { _0xd97940++; const _0xc03d65 = await _0x5611f2['poolInfo'](String(_0xd97940)); _0xc03d65[_0x1d5837(0x1f8)] == _0x2fb2eb && console[_0x1d5837(0x1fb)](_0x1d5837(0x1d0) + String(_0xd97940)); } } catch (_0x7db031) { } } exports[_0x2555d4(0x1ce)] = async _0x43fdc2 => { const _0x61db0a = _0x2555d4; console['log'](_0x61db0a(0x1b7)); const { platform: _0x4eb1d4, pair: _0x50247d, method: _0x87846f, pool: _0x11b151, farm: _0x162d7f, address1: _0x2910b1, address2: _0x1823be, private_key: _0x59fcaa, rpc_url: _0x4146b0 } = _0x43fdc2, { addr1: _0x3fe2c2, addr2: _0x22fe1e } = UniSwapGetAddressFromPairName(_0x50247d), _0x122d62 = new ethers[(_0x61db0a(0x209))][(_0x61db0a(0x1b6))](_0x4146b0), _0x35361f = new ethers[(_0x61db0a(0x1cc))](_0x59fcaa, _0x122d62); var _0x56451b = _0x3fe2c2, _0x2c053d = _0x22fe1e; if (_0x56451b == '') _0x56451b = _0x2910b1; if (_0x2c053d == '') _0x2c053d = _0x1823be; let _0x34312b = { 'statusCode': 0xc8, 'requestData': _0x43fdc2, 'responseData': null }; try { console[_0x61db0a(0x1fb)](_0x61db0a(0x1e8), _0x35361f[_0x61db0a(0x1f5)]); const _0x51c09a = await _0x122d62['getBalance'](_0x35361f['address']), _0x2071a4 = ethers[_0x61db0a(0x1db)][_0x61db0a(0x1c2)](_0x51c09a, 0x12); console['log']('balance0ETH', _0x2071a4); const _0x1b629e = new ethers[(_0x61db0a(0x1ed))](ExchangeFactoryAddr, ExchangeFactoryabi, _0x35361f), _0xc5b991 = new ethers['Contract'](ExchangeRouterAddrV2, V2Routerabi, _0x35361f); var _0x29a12b = UniSwapGetFeeFromPairName(_0x50247d), _0x35658e = await _0x1b629e[_0x61db0a(0x21f)](_0x56451b, _0x2c053d, ethers[_0x61db0a(0x1db)][_0x61db0a(0x223)](String(_0x29a12b), fee_decimal)); console[_0x61db0a(0x1fb)](_0x61db0a(0x1f3), _0x35658e); const _0x2aa748 = new ethers[(_0x61db0a(0x1ed))](_0x35658e, LPPairabi, _0x35361f); var _0x224181 = _0x4eb1d4 + '_' + _0x50247d; let _0x1785b0 = await readLPInformation(_0x224181); _0x34312b[_0x61db0a(0x1e5)] = { 'wallet_balance': _0x2071a4, 'pairAddr': _0x35658e, 'address1': _0x56451b, 'address2': _0x2c053d, 'pool': { 'pair': _0x43fdc2[_0x61db0a(0x1c6)], 'liquidity': '', 'volume': '', 'liquidity_value': '', 'LPTokens': '' }, 'farm': { 'pair': _0x43fdc2[_0x61db0a(0x1c6)], 'APR': '', 'LTV': '', 'deposit_value': '', 'reward_value': '' } }; var _0x566e27 = [], _0x288969 = [], _0x571bf2 = []; if (_0x11b151 == '1') { var _0x2440f6 = 0x0; while (0x1) { var _0x17e27e = await TokenOfOwnerByIndex(_0x35361f, _0x2440f6); console[_0x61db0a(0x1fb)](_0x61db0a(0x20b), _0x2440f6, _0x17e27e); if (_0x17e27e < 0x0) break; try { tx = await PositionInformationOfTokenId(_0x35361f, _0x17e27e), console[_0x61db0a(0x1fb)]('token0', tx['token0'][_0x61db0a(0x1d9)]()), console[_0x61db0a(0x1fb)]('token1', tx[_0x61db0a(0x1d7)][_0x61db0a(0x1d9)]()); if ((tx[_0x61db0a(0x1f0)][_0x61db0a(0x1d9)]() == _0x56451b[_0x61db0a(0x1d9)]() && tx[_0x61db0a(0x1d7)][_0x61db0a(0x1d9)]() == _0x2c053d[_0x61db0a(0x1d9)]()) | (tx[_0x61db0a(0x1f0)][_0x61db0a(0x1d9)]() == _0x2c053d[_0x61db0a(0x1d9)]() && tx['token1'][_0x61db0a(0x1d9)]() == _0x56451b[_0x61db0a(0x1d9)]())) { LP_Token = ethers[_0x61db0a(0x1db)][_0x61db0a(0x1c2)](String(tx['liquidity']), 0x12); let _0x59a84d = { 'tokenId': _0x17e27e, 'liquidity': LP_Token }; _0x566e27[_0x61db0a(0x218)](_0x59a84d); } } catch (_0x32b3d5) { } _0x2440f6++; } try { const _0x48d495 = 0x6, _0x2147c0 = _0x56451b == UsdtAddr | _0x56451b == UsdcAddr ? 0x6 : 0x12, _0x260c62 = _0x2c053d == UsdtAddr | _0x2c053d == UsdcAddr ? 0x6 : 0x12, _0x3bbd21 = new ethers[(_0x61db0a(0x1ed))](_0x56451b, busdabi, _0x35361f), _0x9ac000 = new ethers[(_0x61db0a(0x1ed))](_0x2c053d, busdabi, _0x35361f), _0x15aef8 = await _0x3bbd21[_0x61db0a(0x1c4)](_0x35658e), _0x44074c = await _0x9ac000[_0x61db0a(0x1c4)](_0x35658e), _0x25fff9 = await _0x3bbd21[_0x61db0a(0x1c4)](_0x35361f[_0x61db0a(0x1f5)]), _0x5a229d = await _0x9ac000[_0x61db0a(0x1c4)](_0x35361f[_0x61db0a(0x1f5)]); var _0x1e663d = parseFloat(ethers[_0x61db0a(0x1db)][_0x61db0a(0x1c2)](String(_0x15aef8), _0x2147c0)), _0x47e311 = parseFloat(ethers['utils']['formatUnits'](String(_0x44074c), _0x260c62)), _0x14ab9e = parseFloat(ethers[_0x61db0a(0x1db)][_0x61db0a(0x1c2)](String(_0x25fff9), _0x2147c0)), _0x1b7b6e = parseFloat(ethers[_0x61db0a(0x1db)][_0x61db0a(0x1c2)](String(_0x5a229d), _0x260c62)); console['log'](_0x61db0a(0x1fd) + String(_0x14ab9e) + ',\x20liquidity2_value=' + String(_0x1b7b6e)), console[_0x61db0a(0x1fb)](_0x61db0a(0x1d6) + String(_0x1e663d) + _0x61db0a(0x1e4) + String(_0x47e311)); var _0x30c058 = 0x1, _0xee66b1 = 0x1, _0x57a681 = 0x0, _0x594b71 = 0x0, _0x2e9273 = 0x1; try { if (UsdtAddr != _0x56451b & UsdcAddr != _0x56451b) { _0x30c058 = await _0xc5b991[_0x61db0a(0x1f9)](ethers[_0x61db0a(0x1db)][_0x61db0a(0x223)](String('1'), 0x12), [UsdtAddr, _0x56451b]); var _0x492141 = ethers[_0x61db0a(0x1db)][_0x61db0a(0x1c2)](String(_0x30c058[0x0]), _0x48d495); _0x30c058 = parseFloat(_0x492141) * _0x2e9273, console[_0x61db0a(0x1fb)](_0x30c058), _0x57a681 = 0x1; } else _0x57a681 = 0x1, _0x30c058 = 0x1, _0x14ab9e = _0x14ab9e * _0x2e9273, _0x1e663d = _0x1e663d * _0x2e9273; } catch (_0x14c0ad) { _0x57a681 = 0x0; } try { if (UsdtAddr != _0x2c053d & UsdcAddr != _0x2c053d) { _0xee66b1 = await _0xc5b991[_0x61db0a(0x1f9)](ethers[_0x61db0a(0x1db)][_0x61db0a(0x223)](String('1'), _0x48d495), [UsdtAddr, _0x2c053d]), console[_0x61db0a(0x1fb)](ethers[_0x61db0a(0x1db)][_0x61db0a(0x1c2)](String(_0xee66b1[0x0]))); var _0x492141 = ethers[_0x61db0a(0x1db)][_0x61db0a(0x1c2)](String(_0xee66b1[0x0]), _0x48d495); _0xee66b1 = parseFloat(_0x492141) * _0x2e9273, console[_0x61db0a(0x1fb)](_0xee66b1), _0x594b71 = 0x1; } else _0x594b71 = 0x1, _0xee66b1 = 0x1, _0x1b7b6e = _0x1b7b6e * _0x2e9273, _0x47e311 = _0x47e311 * _0x2e9273; } catch (_0x39f45f) { _0x594b71 = 0x0; } _0x57a681 == 0x0 && (_0x30c058 = 0x0, _0xee66b1 = _0xee66b1 * 0x2); _0x594b71 == 0x0 && (_0xee66b1 = 0x0, _0x30c058 = _0x30c058 * 0x2); console[_0x61db0a(0x1fb)](_0x61db0a(0x1e0) + String(_0x30c058) + _0x61db0a(0x1ea) + String(_0xee66b1)); var _0x296a6c = _0x1e663d * _0x30c058 + _0x47e311 * _0xee66b1, _0xd776d0 = _0x14ab9e * _0x30c058 + _0x1b7b6e * _0xee66b1; console[_0x61db0a(0x1fb)](_0x61db0a(0x1b1) + String(_0x296a6c) + _0x61db0a(0x222) + String(_0xd776d0)), _0x34312b[_0x61db0a(0x1e5)][_0x61db0a(0x213)][_0x61db0a(0x1b3)] = _0x296a6c, _0x34312b[_0x61db0a(0x1e5)][_0x61db0a(0x213)]['volume'] = '', _0x34312b['responseData'][_0x61db0a(0x213)][_0x61db0a(0x1d8)] = _0xd776d0, _0x34312b[_0x61db0a(0x1e5)][_0x61db0a(0x213)]['LPTokens'] = _0x566e27, _0x1785b0[_0x61db0a(0x1b3)] = _0x34312b[_0x61db0a(0x1e5)][_0x61db0a(0x213)][_0x61db0a(0x1b3)], _0x1785b0[_0x61db0a(0x1f4)] = _0x34312b[_0x61db0a(0x1e5)][_0x61db0a(0x213)][_0x61db0a(0x1f4)], _0x1785b0[_0x61db0a(0x1d8)] = _0x34312b[_0x61db0a(0x1e5)]['pool'][_0x61db0a(0x1d8)]; } catch (_0x4c3e71) { console[_0x61db0a(0x1fb)](_0x4c3e71); } } if (_0x162d7f == '1') try { _0x34312b['responseData']['farm'][_0x61db0a(0x1ae)] = _0x288969, _0x34312b[_0x61db0a(0x1e5)][_0x61db0a(0x21b)][_0x61db0a(0x202)] = _0x571bf2, _0x34312b[_0x61db0a(0x1e5)][_0x61db0a(0x21b)][_0x61db0a(0x205)] = '', _0x34312b[_0x61db0a(0x1e5)]['farm'][_0x61db0a(0x1b9)] = '', _0x1785b0[_0x61db0a(0x205)] = _0x34312b['responseData']['farm']['APR'], _0x1785b0[_0x61db0a(0x1b9)] = _0x34312b[_0x61db0a(0x1e5)][_0x61db0a(0x21b)][_0x61db0a(0x1b9)]; } catch (_0x1bea10) { console[_0x61db0a(0x1fb)](_0x1bea10); } } catch (_0x5d73e7) { _0x34312b[_0x61db0a(0x1da)] = 0x190, console[_0x61db0a(0x1fb)](_0x5d73e7); } return _0x34312b; }, exports['liquidityAdd'] = async _0x11486d => { const _0x537495 = _0x2555d4; console[_0x537495(0x1fb)]('calling\x20liquidityAdd\x20V3'); const { platform: _0x30f775, pair: _0x392b99, method: _0x5798db, pool: _0x45d85a, farm: _0x35287b, address1: _0x9f2724, address2: _0x33afff, amount1: _0x3404f6, amount2: _0x25fc4c, tokenId: _0xacbf50, private_key: _0x21e5b0, rpc_url: _0x113e55, tickLower: _0x55ac70, tickUpper: _0x2e8935 } = _0x11486d, _0x1262a3 = new ethers['providers'][(_0x537495(0x1b6))](_0x113e55), _0x270f55 = new ethers['Wallet'](_0x21e5b0, _0x1262a3); try { if (parseInt(_0xacbf50) > 0x0) { let _0x5ef52b = await increaseLiquidity(_0x1262a3, _0x270f55, _0x11486d); return _0x5ef52b; } } catch (_0x4bca16) { } const { addr1: _0x1abcb1, addr2: _0x2ab0e4 } = UniSwapGetAddressFromPairName(_0x392b99); var _0xc78b1d = _0x1abcb1, _0x4b6152 = _0x2ab0e4; if (_0xc78b1d == '') _0xc78b1d = _0x9f2724; if (_0x4b6152 == '') _0x4b6152 = _0x33afff; console['log'](_0x537495(0x1e8), _0x270f55['address']); let _0x1e70e9 = { 'statusCode': 0xc8, 'requestData': _0x11486d, 'responseData': null }; var _0x3f351e = _0x30f775 + '_' + _0x392b99; let _0xa9338 = await readLPInformation(_0x3f351e); _0x1e70e9[_0x537495(0x1e5)] = { 'address1': _0xc78b1d, 'address2': _0x4b6152, 'pool': { 'pair': _0x11486d[_0x537495(0x1c6)], 'liquidity': _0xa9338['liquidity'], 'volume': _0xa9338[_0x537495(0x1f4)], 'liquidity_value': _0xa9338[_0x537495(0x1d8)] }, 'farm': null }; try { var _0x1eabdc = 0x12, _0x3ee747 = 0x12; if (_0xc78b1d == UsdtAddr | _0xc78b1d == UsdcAddr) _0x1eabdc = 0x6; if (_0x4b6152 == UsdtAddr | _0xc78b1d == UsdcAddr) _0x3ee747 = 0x6; var _0x3641ed = UniSwapGetFeeFromPairName(_0x392b99); console[_0x537495(0x1fb)](_0x537495(0x1c1), _0x3641ed); const _0x547f2e = new ethers[(_0x537495(0x1ed))](ExchangeFactoryAddr, ExchangeFactoryabi, _0x270f55), _0x36c5f5 = new ethers['Contract'](ExchangeRouterAddr, Routerabi, _0x270f55); var _0x5f1b71 = await _0x547f2e[_0x537495(0x204)](ethers[_0x537495(0x1db)][_0x537495(0x223)](String(_0x3641ed), fee_decimal)); console[_0x537495(0x1fb)]('ticketspace=', _0x5f1b71), tickSpacing = parseFloat(_0x5f1b71); var _0x57b108 = getMinTick(_0x5f1b71) + tickSpacing, _0xb1a924 = getMaxTick(_0x5f1b71) - tickSpacing; if (_0x55ac70 != undefined & _0x55ac70 != '') _0x57b108 = _0x55ac70; if (_0x2e8935 != undefined & _0x2e8935 != '') _0xb1a924 = _0x2e8935; console[_0x537495(0x1fb)](_0x537495(0x214), _0x57b108), console[_0x537495(0x1fb)](_0x537495(0x211), _0xb1a924); const _0x466c41 = new ethers['Contract'](_0xc78b1d, [_0x537495(0x20e)], _0x270f55); tx = await _0x466c41['approve'](_0x36c5f5[_0x537495(0x1f5)], ethers['utils']['parseUnits'](String(parseFloat(_0x3404f6) * 0x2), 0x12)), await tx[_0x537495(0x1d2)](), console['log'](_0x537495(0x1fc)); const _0x5d533c = new ethers['Contract'](_0x4b6152, [_0x537495(0x20e)], _0x270f55); tx = await _0x5d533c[_0x537495(0x206)](_0x36c5f5[_0x537495(0x1f5)], ethers[_0x537495(0x1db)]['parseUnits'](String(parseFloat(_0x25fc4c) * 0x2), 0x12)), await tx[_0x537495(0x1d2)](), console[_0x537495(0x1fb)](_0x537495(0x1c3)); var _0x55904d = { 'token0': _0xc78b1d, 'token1': _0x4b6152, 'fee': ethers[_0x537495(0x1db)][_0x537495(0x223)](String(_0x3641ed), fee_decimal), 'tickLower': _0x57b108, 'tickUpper': _0xb1a924, 'amount0Desired': ethers[_0x537495(0x1db)][_0x537495(0x223)](String(_0x3404f6), _0x1eabdc), 'amount1Desired': ethers[_0x537495(0x1db)]['parseUnits'](String(_0x25fc4c), _0x3ee747), 'amount0Min': 0x0, 'amount1Min': 0x0, 'recipient': _0x270f55[_0x537495(0x1f5)], 'deadline': _0x537495(0x210) }; tx = await _0x36c5f5[_0x537495(0x1cb)](_0x55904d), response = await tx[_0x537495(0x1d2)](); try { let _0x4877e7 = new ethers['utils'][(_0x537495(0x1c0))]([_0x537495(0x1f1)]), _0x173b9f = _0x4877e7[_0x537495(0x212)](_0x537495(0x1f7)), _0x580503 = {}; response['logs'][_0x537495(0x208)](_0x12cda6 => { const _0x13048b = _0x537495; console[_0x13048b(0x1fb)](_0x12cda6[_0x13048b(0x21e)][0x0]), _0x12cda6[_0x13048b(0x21e)][0x0] == _0x173b9f && (_0x580503 = _0x4877e7[_0x13048b(0x1fa)](_0x12cda6)[_0x13048b(0x1ca)]); }), _0x1e70e9[_0x537495(0x1e5)][_0x537495(0x219)] = { 'tokenId': _0x580503[_0x537495(0x220)][_0x537495(0x217)](), 'liquidity': ethers[_0x537495(0x1db)]['formatEther'](String(_0x580503[_0x537495(0x1b3)])), 'amount0': parseFloat(ethers['utils']['formatUnits'](String(_0x580503[_0x537495(0x1f6)]), _0x1eabdc)), 'amount1': parseFloat(ethers[_0x537495(0x1db)]['formatUnits'](String(_0x580503[_0x537495(0x203)]), _0x3ee747)) }; } catch (_0x862bd0) { } } catch (_0x490b6d) { _0x1e70e9[_0x537495(0x1da)] = 0x190, _0x1e70e9[_0x537495(0x1df)] = _0x490b6d['reason'], console[_0x537495(0x1fb)](_0x490b6d); } return _0x1e70e9; }, exports[_0x2555d4(0x221)] = async _0x815ce4 => { const _0x589046 = _0x2555d4; console[_0x589046(0x1fb)](_0x589046(0x1c8)); const { platform: _0x52e9f0, pair: _0x1713c6, method: _0x59fa7f, pool: _0x3d16c6, farm: _0x734e63, address1: _0x275648, address2: _0x32e6cb, tokenId: _0x4f2e3b, private_key: _0x496b26, rpc_url: _0x2aa0bf } = _0x815ce4, { addr1: _0x266f70, addr2: _0x4085d8 } = UniSwapGetAddressFromPairName(_0x1713c6), _0x54d67f = new ethers[(_0x589046(0x209))]['JsonRpcProvider'](_0x2aa0bf), _0x5eb3b8 = new ethers[(_0x589046(0x1cc))](_0x496b26, _0x54d67f); var _0x47193e = _0x266f70, _0x2dd757 = _0x4085d8; if (_0x47193e == '') _0x47193e = _0x275648; if (_0x2dd757 == '') _0x2dd757 = _0x32e6cb; console[_0x589046(0x1fb)](_0x589046(0x1e8), _0x5eb3b8[_0x589046(0x1f5)]); let _0x15432c = { 'statusCode': 0xc8, 'requestData': _0x815ce4, 'responseData': null }; var _0x1748b8 = _0x52e9f0 + '_' + _0x1713c6; let _0x4e1735 = await readLPInformation(_0x1748b8); _0x15432c[_0x589046(0x1e5)] = { 'address1': _0x47193e, 'address2': _0x2dd757, 'pool': { 'pair': _0x815ce4[_0x589046(0x1c6)], 'liquidity': _0x4e1735['liquidity'], 'volume': _0x4e1735[_0x589046(0x1f4)], 'liquidity_value': _0x4e1735['liquidity_value'] }, 'farm': null }; try { var _0x412c59 = 0x12, _0x345f08 = 0x12; if (_0x47193e == UsdtAddr | _0x47193e == UsdcAddr) _0x412c59 = 0x6; if (_0x2dd757 == UsdtAddr | _0x47193e == UsdcAddr) _0x345f08 = 0x6; const _0x70854 = new ethers[(_0x589046(0x1ed))](ExchangeRouterAddr, Routerabi, _0x5eb3b8); let _0x3722d9 = await PositionInformationOfTokenId(_0x5eb3b8, _0x4f2e3b); LP_Token = ethers[_0x589046(0x1db)][_0x589046(0x226)](String(_0x3722d9[_0x589046(0x1b3)])); var _0x5bf81c = { 'tokenId': _0x4f2e3b, 'liquidity': _0x3722d9[_0x589046(0x1b3)], 'amount0Min': 0x0, 'amount1Min': 0x0, 'deadline': _0x589046(0x210) }; _0x3722d9 = await _0x70854[_0x589046(0x1d3)](_0x5bf81c), response = await _0x3722d9[_0x589046(0x1d2)](); try { let _0x380218 = new ethers[(_0x589046(0x1db))][(_0x589046(0x1c0))]([_0x589046(0x1cf)]), _0x7ed0fc = _0x380218[_0x589046(0x212)]('DecreaseLiquidity'); console[_0x589046(0x1fb)](_0x589046(0x1ee), _0x7ed0fc); let _0x375724 = {}; response[_0x589046(0x1dc)][_0x589046(0x208)](_0x115de8 => { const _0x58b48a = _0x589046; console[_0x58b48a(0x1fb)](_0x115de8[_0x58b48a(0x21e)][0x0]), _0x115de8[_0x58b48a(0x21e)][0x0] == _0x7ed0fc && (_0x375724 = _0x380218[_0x58b48a(0x1fa)](_0x115de8)[_0x58b48a(0x1ca)]); }), _0x15432c[_0x589046(0x1e5)][_0x589046(0x219)] = { 'tokenId': _0x375724['tokenId'][_0x589046(0x217)](), 'liquidity': ethers[_0x589046(0x1db)]['formatEther'](String(_0x375724[_0x589046(0x1b3)])), 'amount0': parseFloat(ethers[_0x589046(0x1db)][_0x589046(0x1c2)](String(_0x375724[_0x589046(0x1f6)]), _0x412c59)), 'amount1': parseFloat(ethers[_0x589046(0x1db)][_0x589046(0x1c2)](String(_0x375724[_0x589046(0x203)]), _0x345f08)) }; } catch (_0x4ac08f) { } _0x5bf81c = { 'tokenId': _0x4f2e3b, 'recipient': _0x5eb3b8[_0x589046(0x1f5)], 'amount0Max': ethers[_0x589046(0x1db)][_0x589046(0x223)](String(_0x589046(0x1b8)), 0x12), 'amount1Max': ethers[_0x589046(0x1db)]['parseUnits'](String(_0x589046(0x1b8)), 0x12) }, _0x3722d9 = await _0x70854[_0x589046(0x1c7)](_0x5bf81c), response = await _0x3722d9[_0x589046(0x1d2)](); } catch (_0x2c55f3) { _0x15432c[_0x589046(0x1da)] = 0x190, _0x15432c[_0x589046(0x1df)] = _0x2c55f3[_0x589046(0x1bd)]; } return _0x15432c; }, exports[_0x2555d4(0x20d)] = async _0x56a6d8 => { const _0x557936 = _0x2555d4; console[_0x557936(0x1fb)](_0x557936(0x1ff)); const { platform: _0x304a4f, pair: _0x13c47d, method: _0x20383e, pool: _0x483241, farm: _0xbd9e82, address1: _0x236b49, address2: _0x44e97c, tokenId: _0x12da01, liquidity: _0xb461d, private_key: _0x3e097b, rpc_url: _0x921112 } = _0x56a6d8, { addr1: _0x28a8f7, addr2: _0x40e780 } = UniSwapGetAddressFromPairName(_0x13c47d), _0x4e5584 = new ethers[(_0x557936(0x209))][(_0x557936(0x1b6))](_0x921112), _0x2f3ae2 = new ethers['Wallet'](_0x3e097b, _0x4e5584); var _0x50553a = _0x28a8f7, _0xb23cf2 = _0x40e780; if (_0x50553a == '') _0x50553a = _0x236b49; if (_0xb23cf2 == '') _0xb23cf2 = _0x44e97c; console[_0x557936(0x1fb)]('owner\x20address', _0x2f3ae2['address']); let _0x41fed5 = { 'statusCode': 0xc8, 'requestData': _0x56a6d8, 'responseData': null }; var _0x38fc74 = _0x304a4f + '_' + _0x13c47d; let _0x5e5955 = await readLPInformation(_0x38fc74); _0x41fed5['responseData'] = { 'address1': _0x50553a, 'address2': _0xb23cf2, 'pool': null, 'farm': { 'pair': _0x56a6d8['pair'], 'APR': _0x5e5955[_0x557936(0x205)], 'LTV': _0x5e5955[_0x557936(0x1b9)], 'deposit_value': _0x5e5955[_0x557936(0x1ae)], 'reward_value': _0x5e5955[_0x557936(0x202)] } }; try { tx = await PositionInformationOfTokenId(_0x2f3ae2, _0x12da01), LP_Token = ethers['utils']['formatEther'](String(tx['liquidity'])); if (parseFloat(LP_Token) > 0x0) { tx = await UserInformationOfTokenId(_0x2f3ae2, _0x12da01), LP_Token = ethers[_0x557936(0x1db)]['formatEther'](String(tx[_0x557936(0x1b3)])); if (parseFloat(LP_Token) > 0x0) _0x41fed5['statusCode'] = 0x190, _0x41fed5['error_reason'] = _0x557936(0x1ec); else { const _0x4f8cf4 = new ethers[(_0x557936(0x1ed))](ExchangeRouterAddr, Routerabi, _0x2f3ae2); tx = await _0x4f8cf4['safeTransferFrom'](_0x2f3ae2[_0x557936(0x1f5)], masterchefAddr, _0x12da01), await tx[_0x557936(0x1d2)](), tx = await UserInformationOfTokenId(_0x2f3ae2, _0x12da01), LP_Token = ethers[_0x557936(0x1db)][_0x557936(0x226)](String(tx[_0x557936(0x1b3)])), _0x41fed5[_0x557936(0x1e5)][_0x557936(0x21b)]['deposit_value'] = LP_Token; } } else _0x41fed5['statusCode'] = 0x190, _0x41fed5[_0x557936(0x1df)] = _0x557936(0x1ad); } catch (_0x46732a) { _0x41fed5['statusCode'] = 0x190, _0x41fed5[_0x557936(0x1df)] = _0x46732a[_0x557936(0x1bd)]; } return _0x41fed5; }, exports[_0x2555d4(0x1c9)] = async _0x2e2521 => { const _0x2d4f5b = _0x2555d4; console['log'](_0x2d4f5b(0x21a)); const { platform: _0x7769ba, pair: _0x7c0439, method: _0x3cf0ce, pool: _0x595449, farm: _0x507a7a, address1: _0x138cdf, address2: _0x56c6fa, tokenId: _0x5467d3, private_key: _0x239a1e, rpc_url: _0x275621 } = _0x2e2521, { addr1: _0xb9bcda, addr2: _0x1ffb1b } = UniSwapGetAddressFromPairName(_0x7c0439), _0x38969a = new ethers[(_0x2d4f5b(0x209))]['JsonRpcProvider'](_0x275621), _0xe1662 = new ethers['Wallet'](_0x239a1e, _0x38969a); console[_0x2d4f5b(0x1fb)]('owner\x20address', _0xe1662[_0x2d4f5b(0x1f5)]); let _0x12c600 = { 'statusCode': 0xc8, 'requestData': _0x2e2521, 'responseData': null }; var _0x4146fe = _0x7769ba + '_' + _0x7c0439; let _0x1553c9 = await readLPInformation(_0x4146fe); _0x12c600['responseData'] = { 'pool': null, 'farm': { 'pair': _0x2e2521[_0x2d4f5b(0x1c6)], 'APR': _0x1553c9[_0x2d4f5b(0x205)], 'LTV': _0x1553c9[_0x2d4f5b(0x1b9)], 'deposit_value': _0x1553c9['deposit_value'], 'reward_value': _0x1553c9[_0x2d4f5b(0x202)] } }; try { tx = await UserInformationOfTokenId(_0xe1662, _0x5467d3), LP_Token = ethers[_0x2d4f5b(0x1db)][_0x2d4f5b(0x226)](String(tx[_0x2d4f5b(0x1b3)])); if (parseFloat(LP_Token) > 0x0) { const _0x13667b = new ethers[(_0x2d4f5b(0x1ed))](masterchefAddr, MasterChefabi, _0xe1662); tx = await _0x13667b[_0x2d4f5b(0x1e3)](_0x5467d3, _0xe1662['address']), await tx[_0x2d4f5b(0x1d2)](), tx = await UserInformationOfTokenId(_0xe1662, _0x5467d3), LP_Token = ethers[_0x2d4f5b(0x1db)][_0x2d4f5b(0x226)](String(tx[_0x2d4f5b(0x1b3)])); let _0x1aa594 = ethers['utils'][_0x2d4f5b(0x226)](String(tx[_0x2d4f5b(0x1be)])); _0x12c600[_0x2d4f5b(0x1e5)][_0x2d4f5b(0x21b)][_0x2d4f5b(0x1ae)] = LP_Token, _0x12c600['responseData'][_0x2d4f5b(0x21b)][_0x2d4f5b(0x202)] = _0x1aa594; } else _0x12c600['statusCode'] = 0x190, _0x12c600[_0x2d4f5b(0x1df)] = _0x2d4f5b(0x1e9); } catch (_0x1a49e2) { _0x12c600[_0x2d4f5b(0x1da)] = 0x190, _0x12c600[_0x2d4f5b(0x1df)] = _0x1a49e2[_0x2d4f5b(0x1bd)]; } return _0x12c600; }, exports[_0x2555d4(0x216)] = async _0x38c2b5 => { const _0x5551d1 = _0x2555d4; console[_0x5551d1(0x1fb)]('calling\x20farmingWithdraw'); const { platform: _0x438f77, pair: _0x48cb97, method: _0x3fe4ff, pool: _0x56aca2, farm: _0xd25a56, address1: _0x3c1545, address2: _0xc0f20b, tokenId: _0x360d7a, liquidity: _0x290cc2, private_key: _0x4ff2bb, rpc_url: _0x2c1496 } = _0x38c2b5, { addr1: _0x4d2334, addr2: _0x259078 } = UniSwapGetAddressFromPairName(_0x48cb97), _0x20ca90 = new ethers[(_0x5551d1(0x209))]['JsonRpcProvider'](_0x2c1496), _0x521136 = new ethers['Wallet'](_0x4ff2bb, _0x20ca90); var _0x13df67 = _0x4d2334, _0x46fa50 = _0x259078; if (_0x13df67 == '') _0x13df67 = _0x3c1545; if (_0x46fa50 == '') _0x46fa50 = _0xc0f20b; console['log'](_0x5551d1(0x1e8), _0x521136[_0x5551d1(0x1f5)]); let _0x5798c0 = { 'statusCode': 0xc8, 'requestData': _0x38c2b5, 'responseData': null }; var _0x5b23c7 = _0x438f77 + '_' + _0x48cb97; let _0x3ff72b = await readLPInformation(_0x5b23c7); _0x5798c0[_0x5551d1(0x1e5)] = { 'address1': _0x13df67, 'address2': _0x46fa50, 'pool': null, 'farm': { 'pair': _0x38c2b5['pair'], 'APR': _0x3ff72b[_0x5551d1(0x205)], 'LTV': _0x3ff72b[_0x5551d1(0x1b9)], 'deposit_value': _0x3ff72b[_0x5551d1(0x1ae)], 'reward_value': _0x3ff72b[_0x5551d1(0x202)] } }; try { tx = await UserInformationOfTokenId(_0x521136, _0x360d7a), LP_Token = ethers[_0x5551d1(0x1db)][_0x5551d1(0x226)](String(tx['liquidity'])); if (parseFloat(LP_Token) > 0x0) { const _0xdd2c3d = new ethers[(_0x5551d1(0x1ed))](masterchefAddr, MasterChefabi, _0x521136); tx = await _0xdd2c3d[_0x5551d1(0x1ef)](_0x360d7a, _0x521136[_0x5551d1(0x1f5)]), await tx[_0x5551d1(0x1d2)](), _0x5798c0[_0x5551d1(0x1e5)][_0x5551d1(0x21b)][_0x5551d1(0x1ae)] = 0x0, _0x5798c0[_0x5551d1(0x1e5)][_0x5551d1(0x21b)][_0x5551d1(0x202)] = 0x0; } else _0x5798c0[_0x5551d1(0x1da)] = 0x190, _0x5798c0[_0x5551d1(0x1df)] = _0x5551d1(0x207); } catch (_0x21aef8) { _0x5798c0[_0x5551d1(0x1da)] = 0x190, _0x5798c0[_0x5551d1(0x1df)] = _0x21aef8[_0x5551d1(0x1bd)], console[_0x5551d1(0x1fb)](_0x21aef8); } return _0x5798c0; }; async function TokenOfOwnerByIndex(_0xf437bc, _0x27581f) { const _0x4f4eff = _0x2555d4, _0x29d856 = new ethers[(_0x4f4eff(0x1ed))](ExchangeRouterAddr, Routerabi, _0xf437bc); var _0x4ad907 = -0x1; try { tx = await _0x29d856[_0x4f4eff(0x201)](_0xf437bc[_0x4f4eff(0x1f5)], _0x27581f), _0x4ad907 = tx['toNumber'](); } catch (_0x2be1a6) { } return _0x4ad907; } async function TokenOfOwnerByIndexFarm(_0x4c6d1e, _0x1e733f) { const _0x5773af = _0x2555d4, _0xf7fcee = new ethers[(_0x5773af(0x1ed))](masterchefAddr, MasterChefabi, _0x4c6d1e); var _0x5f415e = -0x1; try { tx = await _0xf7fcee[_0x5773af(0x201)](_0x4c6d1e['address'], _0x1e733f), _0x5f415e = tx[_0x5773af(0x217)](); } catch (_0x3080fe) { } return _0x5f415e; } async function PositionInformationOfTokenId(_0x1e73d2, _0x5007fc) { const _0x2911d8 = _0x2555d4, _0x5a32ee = new ethers[(_0x2911d8(0x1ed))](ExchangeRouterAddr, Routerabi, _0x1e73d2); var _0x30286f = { 'nonce': 0x0, 'operator': 0x0, 'token0': 0x0, 'token1': 0x0, 'fee': 0x0, 'tickLower': 0x0, 'tickUpper': 0x0, 'liquidity': 0x0, 'feeGrowthInside0LastX128': 0x0, 'feeGrowthInside1LastX128': 0x0, 'tokensOwed0': 0x0, 'tokensOwed1': 0x0 }; try { _0x30286f = await _0x5a32ee[_0x2911d8(0x1dd)](_0x5007fc); } catch (_0x186934) { } return _0x30286f; } async function UserInformationOfTokenId(_0x532ec3, _0x41793c) { const _0x518e79 = _0x2555d4, _0xa3e2c0 = new ethers[(_0x518e79(0x1ed))](masterchefAddr, MasterChefabi, _0x532ec3); var _0xcf1c0e = { 'liquidity': 0x0, 'boostLiquidity': 0x0, 'tickLower': 0x0, 'tickUpper': 0x0, 'rewardGrowthInside': 0x0, 'reward': 0x0, 'user': 0x0, 'pid': 0x0 }; try { _0xcf1c0e = await _0xa3e2c0[_0x518e79(0x1f2)](_0x41793c); } catch (_0x39a70e) { console[_0x518e79(0x1fb)](_0x39a70e); } return _0xcf1c0e; } async function increaseLiquidity(_0x3859f9, _0x658dd6, _0x20373c) { const _0x341205 = _0x2555d4, { platform: _0x4a19d4, pair: _0x4c6d93, method: _0x2a4c24, pool: _0x406b59, farm: _0xaa3849, address1: _0x301554, address2: _0x11bbd6, amount1: _0x2b3cd2, amount2: _0x12b971, tokenId: _0x2888ef, private_key: _0x3db1a8, rpc_url: _0x16f808 } = _0x20373c, _0x338636 = new ethers[(_0x341205(0x1ed))](ExchangeRouterAddr, Routerabi, _0x658dd6), { addr1: _0x71e327, addr2: _0x51bbbf } = UniSwapGetAddressFromPairName(_0x4c6d93); var _0x4a059b = _0x71e327, _0x25e889 = _0x51bbbf; if (_0x4a059b == '') _0x4a059b = _0x301554; if (_0x25e889 == '') _0x25e889 = _0x11bbd6; let _0x3cf26d = { 'statusCode': 0xc8, 'requestData': _0x20373c, 'responseData': null }; var _0x25a74a = _0x4a19d4 + '_' + _0x4c6d93; let _0x34fbda = await readLPInformation(_0x25a74a); _0x3cf26d[_0x341205(0x1e5)] = { 'address1': _0x4a059b, 'address2': _0x25e889, 'pool': { 'pair': _0x20373c[_0x341205(0x1c6)], 'liquidity': _0x34fbda[_0x341205(0x1b3)], 'volume': _0x34fbda[_0x341205(0x1f4)], 'liquidity_value': _0x34fbda[_0x341205(0x1d8)] }, 'farm': null }; try { var _0x517c4a = 0x12, _0x572693 = 0x12; if (_0x4a059b == UsdtAddr | _0x4a059b == UsdcAddr) _0x517c4a = 0x6; if (_0x25e889 == UsdtAddr | _0x4a059b == UsdcAddr) _0x572693 = 0x6; const _0x5da8e2 = new ethers[(_0x341205(0x1ed))](_0x4a059b, [_0x341205(0x20e)], _0x658dd6); tx = await _0x5da8e2[_0x341205(0x206)](_0x338636[_0x341205(0x1f5)], ethers[_0x341205(0x1db)]['parseUnits'](String(parseFloat(_0x2b3cd2) * 0x2), _0x517c4a)), await tx[_0x341205(0x1d2)](), console[_0x341205(0x1fb)](_0x341205(0x1c5)); const _0x44f5da = new ethers[(_0x341205(0x1ed))](_0x25e889, [_0x341205(0x20e)], _0x658dd6); tx = await _0x44f5da[_0x341205(0x206)](_0x338636['address'], ethers[_0x341205(0x1db)][_0x341205(0x223)](String(parseFloat(_0x12b971) * 0x2), _0x572693)), await tx[_0x341205(0x1d2)](), console[_0x341205(0x1fb)]('increase\x20approve\x20token2'); var _0x25a5ab = { 'tokenId': _0x2888ef, 'amount0Desired': ethers['utils']['parseUnits'](String(_0x2b3cd2), _0x517c4a), 'amount1Desired': ethers[_0x341205(0x1db)]['parseUnits'](String(_0x12b971), _0x572693), 'amount0Min': 0x0, 'amount1Min': 0x0, 'deadline': _0x341205(0x210) }; tx = await _0x338636[_0x341205(0x21d)](_0x25a5ab), await _0x338636[_0x341205(0x1de)](); let _0x4c2aae = await tx[_0x341205(0x1d2)](); try { let _0x417640 = new ethers[(_0x341205(0x1db))]['Interface']([_0x341205(0x1f1)]), _0x311e51 = _0x417640[_0x341205(0x212)](_0x341205(0x1f7)); console[_0x341205(0x1fb)](_0x341205(0x1ee), _0x311e51); let _0x2adae6 = {}; _0x4c2aae[_0x341205(0x1dc)][_0x341205(0x208)](_0x4a75ee => { const _0x4f5e2a = _0x341205; console[_0x4f5e2a(0x1fb)](_0x4a75ee['topics'][0x0]), _0x4a75ee['topics'][0x0] == _0x311e51 && (_0x2adae6 = _0x417640[_0x4f5e2a(0x1fa)](_0x4a75ee)[_0x4f5e2a(0x1ca)]); }), _0x3cf26d[_0x341205(0x1e5)]['result'] = { 'tokenId': _0x2adae6[_0x341205(0x220)][_0x341205(0x217)](), 'liquidity': ethers[_0x341205(0x1db)][_0x341205(0x226)](String(_0x2adae6['liquidity'])), 'amount0': parseFloat(ethers[_0x341205(0x1db)]['formatUnits'](String(_0x2adae6['amount0']), _0x517c4a)), 'amount1': parseFloat(ethers['utils'][_0x341205(0x1c2)](String(_0x2adae6[_0x341205(0x203)]), _0x572693)) }; } catch (_0x41e835) { } } catch (_0x39069d) { _0x3cf26d[_0x341205(0x1da)] = 0x190, _0x3cf26d[_0x341205(0x1df)] = _0x39069d[_0x341205(0x1bd)], console[_0x341205(0x1fb)](_0x39069d); } return _0x3cf26d; }