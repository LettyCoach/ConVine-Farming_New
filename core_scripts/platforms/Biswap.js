const _0x3e6b2d = _0xba48; (function (_0x1210a2, _0x44132b) { const _0x6d63b0 = _0xba48, _0x18a6e9 = _0x1210a2(); while (!![]) { try { const _0x33ea37 = -parseInt(_0x6d63b0(0xcb)) / 0x1 * (parseInt(_0x6d63b0(0xf7)) / 0x2) + -parseInt(_0x6d63b0(0xf9)) / 0x3 * (-parseInt(_0x6d63b0(0xab)) / 0x4) + parseInt(_0x6d63b0(0xe9)) / 0x5 * (parseInt(_0x6d63b0(0xee)) / 0x6) + parseInt(_0x6d63b0(0xc1)) / 0x7 + -parseInt(_0x6d63b0(0xb7)) / 0x8 * (parseInt(_0x6d63b0(0xe6)) / 0x9) + parseInt(_0x6d63b0(0xc6)) / 0xa + -parseInt(_0x6d63b0(0xd4)) / 0xb * (-parseInt(_0x6d63b0(0xb9)) / 0xc); if (_0x33ea37 === _0x44132b) break; else _0x18a6e9['push'](_0x18a6e9['shift']()); } catch (_0x136129) { _0x18a6e9['push'](_0x18a6e9['shift']()); } } }(_0x27f6, 0xb7983)); const ethers = require(_0x3e6b2d(0xc0)), pcnVaultabi = require(_0x3e6b2d(0xc5))[_0x3e6b2d(0xe2)], Routerabi = require(_0x3e6b2d(0xa9))[_0x3e6b2d(0xe2)], wETHabi = require('../artifacts/contracts/exchange-protocol/weth.sol/WETH9.json')[_0x3e6b2d(0xe2)], ExchangeFactoryabi = require('../artifacts/contracts/exchange-protocol/dexfactory.sol/NeondexFactory.json')[_0x3e6b2d(0xe2)], Pairabi = require(_0x3e6b2d(0xaf))[_0x3e6b2d(0xe2)], Popcornabi = require(_0x3e6b2d(0xfc))['abi'], Cornabi = require('../artifacts/contracts/tokens/CornToken.sol/CornToken.json')[_0x3e6b2d(0xe2)], busdabi = require(_0x3e6b2d(0xde))[_0x3e6b2d(0xe2)], MasterChefabi = require(_0x3e6b2d(0xf6))[_0x3e6b2d(0xe2)], LPPairabi = require(_0x3e6b2d(0xc8))[_0x3e6b2d(0xe2)], Addresses = require(_0x3e6b2d(0xf0)), provider = new ethers[(_0x3e6b2d(0xae))][(_0x3e6b2d(0xb3))](process[_0x3e6b2d(0xdd)][_0x3e6b2d(0xb1)]); let private_key = process['env'][_0x3e6b2d(0xbe)]; function _0xba48(_0x56af0d, _0x40cc48) { const _0x27f687 = _0x27f6(); return _0xba48 = function (_0xba48cb, _0x42e5b6) { _0xba48cb = _0xba48cb - 0xa8; let _0x1c6ae5 = _0x27f687[_0xba48cb]; return _0x1c6ae5; }, _0xba48(_0x56af0d, _0x40cc48); } const owner = new ethers[(_0x3e6b2d(0xd0))](private_key, provider), ExchangeFactoryAddr = Addresses[_0x3e6b2d(0xbd)], ExchangeRouterAddr = Addresses[_0x3e6b2d(0xed)], cakeVaultAddr = Addresses[_0x3e6b2d(0xd5)], masterchefAddr = Addresses['Biswapmasterchef'], UsdtAddr = Addresses[_0x3e6b2d(0xc3)]; function _0x27f6() { const _0x39ce21 = ['6446461WwHNIi', 'decimals', 'BiswapUsdt', 'rewardDebt', '../artifacts/contracts/cakevault/pcnVault.sol/pcnVault.json', '1835130TPzrus', 'reward_value', '../artifacts/contracts/exchange-protocol/dexfactory.sol/NeondexPair.json', 'volume', 'Add\x20', '1AYqMxF', 'utils', 'statusGet', 'lpToken', '111111111111111111111', 'Wallet', 'BSW-USDT', 'approve\x20token1', 'calling\x20farmingWithdraw', '7051EDirzD', 'BiswapVault', 'wait', 'error_reason', 'formatUnits', 'log', 'pid:', 'BNB-BSW', 'responseData', 'env', '../artifacts/contracts/tokens/busd.sol/BEP20Token.json', 'BiswapWBNB', 'liquidity_value', ',liquidity_value\x20=', 'abi', 'BiswapBSW', 'statusCode', 'farm', '104121zystvx', 'address', 'balanceOf', '40RxioYf', 'calling\x20farmingHarvest', 'liquidityAdd', 'deposit_value', 'BiswapExchangeRouter', '38802XLlInO', 'farmingWithdraw', '../operate_farming/config/addresses.json', 'poolInfo', 'approve', 'tokenLp\x20token', 'reason', 'LPTokens', '../artifacts/contracts/masterchef/MasterChef.sol/MasterChef.json', '83754RwlzkC', 'userInfo', '318183BvqqKY', 'pool', 'liquidity', '../artifacts/contracts/tokens/PcnToken.sol/PcnToken.json', 'APR', 'formatEther', 'removeLiquidity', 'parseUnits', 'result', '../artifacts/contracts/exchange-protocol/dexRouter.sol/NeondexRouter.json', 'getAmountsIn', '4zPqVQY', 'approve\x20token2', 'function\x20approve(address\x20spender,\x20uint256\x20amount)\x20public\x20returns\x20(bool)', 'providers', '../artifacts/contracts/exchange-protocol/dexfactory.sol/INeondexPair.json', 'getPair', 'BiswapUrl', 'pair', 'JsonRpcProvider', 'value', 'add', 'calling\x20liquidityAdd', '440TCjhAj', 'owner\x20address', '3144QLBxyn', 'Contract', 'USDT-BSW', 'deposit', 'BiswapExchangeFactory', 'PRIVATEKEY', 'calling\x20liquidityRemove', 'ethers']; _0x27f6 = function () { return _0x39ce21; }; return _0x27f6(); } function getpIdFromPairName(_0x22f1a6) { const _0x4362d6 = _0x3e6b2d; var _0x1cb3e6 = 0x0; switch (_0x22f1a6) { case _0x4362d6(0xd1): case _0x4362d6(0xbb): _0x1cb3e6 = 0x9; break; case 'BSW-BNB': case 'BNB-BSW': _0x1cb3e6 = 0xa; break; default: break; }return _0x1cb3e6; } function getAddressFromPairName(_0x4cf536) { const _0x44ceea = _0x3e6b2d; var _0x1f28f6 = 0x0, _0x3711bf = '', _0x3ff987 = ''; switch (_0x4cf536) { case 'BSW-USDT': _0x3711bf = Addresses[_0x44ceea(0xe3)], _0x3ff987 = Addresses[_0x44ceea(0xc3)]; break; case _0x44ceea(0xbb): _0x3ff987 = Addresses['BiswapBSW'], _0x3711bf = Addresses['BiswapUsdt']; break; case 'BSW-BNB': _0x3ff987 = Addresses['BiswapBSW'], _0x3711bf = Addresses[_0x44ceea(0xdf)]; break; case _0x44ceea(0xdb): _0x3711bf = Addresses['BiswapBSW'], _0x3ff987 = Addresses['BiswapWBNB']; break; default: break; }return res = { 'addr1': _0x3711bf, 'addr2': _0x3ff987 }, res; } async function findPid(_0x2b0ea8, _0x248d39, _0xf3a501) { const _0x50534c = _0x3e6b2d; console['log']('tokenLp\x20token', _0xf3a501); var _0x117198 = 0x0; try { while (0x1) { _0x117198++; const _0x437812 = await _0x248d39[_0x50534c(0xf1)](String(_0x117198)); _0x437812[_0x50534c(0xce)] == _0xf3a501 && console['log']('pid:' + String(_0x117198)); } } catch (_0x2ab16f) { } } exports[_0x3e6b2d(0xcd)] = async _0xf131b0 => { const _0x574e68 = _0x3e6b2d; console['log']('calling\x20statusGet'); const { platform: _0x572e36, pair: _0x394898, method: _0x35fea0, pool: _0x19dbc5, farm: _0x412d4e, address1: _0x3674ae, address2: _0x52516b } = _0xf131b0, { addr1: _0x23632b, addr2: _0x23771b } = getAddressFromPairName(_0x394898); var _0x4a7102 = _0x23632b, _0x2b0c9d = _0x23771b; if (_0x4a7102 == '') _0x4a7102 = _0x3674ae; if (_0x2b0c9d == '') _0x2b0c9d = _0x52516b; let _0x5346cb = { 'statusCode': 0xc8, 'requestData': _0xf131b0, 'responseData': null }; try { console[_0x574e68(0xd9)](_0x574e68(0xb8), owner['address']); const _0x38f7f6 = await provider['getBalance'](owner[_0x574e68(0xe7)]), _0x39532e = ethers[_0x574e68(0xcc)][_0x574e68(0xd8)](_0x38f7f6, 0x12); console[_0x574e68(0xd9)]('balance0ETH', _0x39532e); const _0x2e51d3 = new ethers['Contract'](ExchangeFactoryAddr, ExchangeFactoryabi, owner), _0x35cddd = new ethers['Contract'](ExchangeRouterAddr, Routerabi, owner), _0x4d7285 = new ethers[(_0x574e68(0xba))](masterchefAddr, MasterChefabi, owner); var _0x19f2f9 = await _0x2e51d3[_0x574e68(0xb0)](_0x4a7102, _0x2b0c9d); const _0x255370 = new ethers[(_0x574e68(0xba))](_0x19f2f9, LPPairabi, owner); _0x5346cb[_0x574e68(0xdc)] = { 'wallet_balance': _0x39532e, 'pairAddr': _0x19f2f9, 'address1': _0x4a7102, 'address2': _0x2b0c9d, 'pool': { 'pair': _0xf131b0[_0x574e68(0xb2)], 'liquidity': '', 'volume': '', 'liquidity_value': '', 'LPTokens': '' }, 'farm': { 'pair': _0xf131b0[_0x574e68(0xb2)], 'APR': '', 'LTV': '', 'deposit_value': '', 'reward_value': '' } }; let _0xb3613a; if (_0x19dbc5 == '1') try { const _0x42838a = await _0x255370[_0x574e68(0xc2)](), _0x220c1e = await _0x255370['balanceOf'](owner[_0x574e68(0xe7)]), _0x3e100c = new ethers[(_0x574e68(0xba))](_0x4a7102, busdabi, owner), _0x47ba5b = new ethers[(_0x574e68(0xba))](_0x2b0c9d, busdabi, owner), _0x17be6a = await _0x3e100c[_0x574e68(0xe8)](_0x19f2f9), _0x4ca700 = await _0x47ba5b[_0x574e68(0xe8)](_0x19f2f9), _0x32089c = await _0x3e100c[_0x574e68(0xe8)](owner['address']), _0x3c9eef = await _0x47ba5b['balanceOf'](owner['address']); var _0x2ff75b = parseFloat(ethers[_0x574e68(0xcc)][_0x574e68(0xfe)](String(_0x17be6a))), _0x50bf73 = parseFloat(ethers[_0x574e68(0xcc)]['formatEther'](String(_0x4ca700))), _0x514081 = parseFloat(ethers['utils'][_0x574e68(0xfe)](String(_0x32089c))), _0xb3459e = parseFloat(ethers['utils'][_0x574e68(0xfe)](String(_0x3c9eef))), _0x2f511e = 0x1, _0x2c9cf1 = 0x1, _0x2e834c = 0x0, _0x3d0151 = 0x0; try { if (UsdtAddr != _0x4a7102) { _0x2f511e = await _0x35cddd[_0x574e68(0xaa)](ethers['utils'][_0x574e68(0x100)](String('1'), _0x42838a), [UsdtAddr, _0x4a7102]); var _0x5a4dbb = ethers['utils']['formatEther'](String(_0x2f511e[0x0])); _0x2f511e = parseFloat(_0x5a4dbb), console[_0x574e68(0xd9)](_0x2f511e), _0x2e834c = 0x1; } } catch (_0x2771be) { _0x2e834c = 0x0; } try { if (UsdtAddr != _0x2b0c9d) { _0x2c9cf1 = await _0x35cddd[_0x574e68(0xaa)](ethers[_0x574e68(0xcc)][_0x574e68(0x100)](String('1'), _0x42838a), [UsdtAddr, _0x2b0c9d]), console[_0x574e68(0xd9)](ethers['utils'][_0x574e68(0xfe)](String(_0x2c9cf1[0x0]))); var _0x5a4dbb = ethers[_0x574e68(0xcc)][_0x574e68(0xfe)](String(_0x2c9cf1[0x0])); _0x2c9cf1 = parseFloat(_0x5a4dbb), _0x3d0151 = 0x1; } } catch (_0x34f9cc) { _0x3d0151 = 0x0; } _0x2e834c == 0x0 && (_0x2f511e = 0x0, _0x2c9cf1 = _0x2c9cf1 * 0x2); _0x3d0151 == 0x0 && (_0x2c9cf1 = 0x0, _0x2f511e = _0x2f511e * 0x2); var _0x14efa5 = _0x2ff75b * _0x2f511e + _0x50bf73 * _0x2c9cf1, _0x65695d = _0x514081 * _0x2f511e + _0xb3459e * _0x2c9cf1; console[_0x574e68(0xd9)]('liquidity=' + String(_0x14efa5) + _0x574e68(0xe1) + String(_0x65695d)), _0x5346cb[_0x574e68(0xdc)][_0x574e68(0xfa)][_0x574e68(0xfb)] = _0x14efa5, _0x5346cb[_0x574e68(0xdc)][_0x574e68(0xfa)][_0x574e68(0xc9)] = '', _0x5346cb[_0x574e68(0xdc)][_0x574e68(0xfa)][_0x574e68(0xe0)] = _0x65695d, _0x5346cb[_0x574e68(0xdc)][_0x574e68(0xfa)][_0x574e68(0xf5)] = ethers['utils'][_0x574e68(0xfe)](String(_0x220c1e));; } catch (_0x1058f3) { console[_0x574e68(0xd9)](_0x1058f3); } if (_0x412d4e == '1') try { var _0xf59dae = getpIdFromPairName(_0x394898); console[_0x574e68(0xd9)](_0x574e68(0xda) + String(_0xf59dae)); if (_0xf59dae > 0x0) { const _0x54afbe = await _0x4d7285[_0x574e68(0xf8)](_0xf59dae, owner[_0x574e68(0xe7)]); _0x5346cb[_0x574e68(0xdc)]['farm'][_0x574e68(0xec)] = ethers[_0x574e68(0xcc)]['formatEther'](String(_0x54afbe['amount'])), _0x5346cb[_0x574e68(0xdc)][_0x574e68(0xe5)][_0x574e68(0xc7)] = ethers[_0x574e68(0xcc)][_0x574e68(0xfe)](String(_0x54afbe[_0x574e68(0xc4)])); } _0x5346cb[_0x574e68(0xdc)][_0x574e68(0xe5)][_0x574e68(0xfd)] = '', _0x5346cb[_0x574e68(0xdc)]['farm']['LTV'] = ''; } catch (_0x338019) { console['log'](_0x338019); } } catch (_0x3509e4) { _0x5346cb['statusCode'] = 0x190, console[_0x574e68(0xd9)](_0x3509e4); } return _0x5346cb; }, exports[_0x3e6b2d(0xeb)] = async _0x22e8ab => { const _0x3ea5c8 = _0x3e6b2d; console['log'](_0x3ea5c8(0xb6)); const { platform: _0x467642, pair: _0x2e0253, method: _0x494e63, pool: _0x45db79, farm: _0x2cc611, address1: _0x44e6dd, address2: _0x58db4d, amount1: _0x2dbd43, amount2: _0x2200db } = _0x22e8ab, { addr1: _0x26e876, addr2: _0x472e7c } = getAddressFromPairName(_0x2e0253); var _0x2b8c97 = _0x26e876, _0x1fd552 = _0x472e7c; if (_0x2b8c97 == '') _0x2b8c97 = _0x44e6dd; if (_0x1fd552 == '') _0x1fd552 = _0x58db4d; console[_0x3ea5c8(0xd9)](_0x3ea5c8(0xb8), owner['address']); let _0x10c2da = { 'statusCode': 0xc8, 'requestData': _0x22e8ab, 'responseData': null }; _0x10c2da[_0x3ea5c8(0xdc)] = { 'address1': _0x2b8c97, 'address2': _0x1fd552, 'pool': { 'pair': _0x22e8ab['pair'], 'liquidity': '', 'volume': '', 'liquidity_value': '' }, 'farm': null }; try { const _0x5a7dac = new ethers[(_0x3ea5c8(0xba))](ExchangeRouterAddr, Routerabi, owner), _0x42f179 = new ethers[(_0x3ea5c8(0xba))](_0x2b8c97, [_0x3ea5c8(0xad)], owner); tx = await _0x42f179[_0x3ea5c8(0xf2)](_0x5a7dac['address'], ethers[_0x3ea5c8(0xcc)]['parseUnits'](String(parseFloat(_0x2dbd43) * 0x2), 0x12)), await tx[_0x3ea5c8(0xd6)](), console[_0x3ea5c8(0xd9)](_0x3ea5c8(0xd2)); const _0x3ed300 = new ethers[(_0x3ea5c8(0xba))](_0x1fd552, [_0x3ea5c8(0xad)], owner); tx = await _0x3ed300[_0x3ea5c8(0xf2)](_0x5a7dac[_0x3ea5c8(0xe7)], ethers[_0x3ea5c8(0xcc)][_0x3ea5c8(0x100)](String(parseFloat(_0x2200db) * 0x2), 0x12)), await tx[_0x3ea5c8(0xd6)](), console[_0x3ea5c8(0xd9)](_0x3ea5c8(0xac)), tx = await _0x5a7dac['addLiquidity'](_0x2b8c97, _0x1fd552, ethers[_0x3ea5c8(0xcc)][_0x3ea5c8(0x100)](String(_0x2dbd43), 0x12), ethers[_0x3ea5c8(0xcc)][_0x3ea5c8(0x100)](String(_0x2200db), 0x12), 0x0, 0x0, owner[_0x3ea5c8(0xe7)], '111111111111111111111'), await tx[_0x3ea5c8(0xd6)](), _0x10c2da[_0x3ea5c8(0xdc)][_0x3ea5c8(0xa8)] = tx; } catch (_0xedaff7) { _0x10c2da[_0x3ea5c8(0xe4)] = 0x190, _0x10c2da[_0x3ea5c8(0xd7)] = _0xedaff7['reason']; } return _0x10c2da; }, exports['liquidityRemove'] = async _0xa44c61 => { const _0x43d94b = _0x3e6b2d; console['log'](_0x43d94b(0xbf)); const { platform: _0x2186cf, pair: _0x8c1edb, method: _0x5ba844, pool: _0x57bf37, farm: _0x5d9ca4, address1: _0x2b9a43, address2: _0x4a4c2d, liquidity: _0x546c4b } = _0xa44c61, { addr1: _0x394546, addr2: _0xdc696f } = getAddressFromPairName(_0x8c1edb); var _0x4e5f39 = _0x394546, _0x42e252 = _0xdc696f; if (_0x4e5f39 == '') _0x4e5f39 = _0x2b9a43; if (_0x42e252 == '') _0x42e252 = _0x4a4c2d; console['log']('owner\x20address', owner[_0x43d94b(0xe7)]); let _0x463933 = { 'statusCode': 0xc8, 'requestData': _0xa44c61, 'responseData': null }; _0x463933[_0x43d94b(0xdc)] = { 'address1': _0x4e5f39, 'address2': _0x42e252, 'pool': { 'pair': _0xa44c61[_0x43d94b(0xb2)], 'liquidity': '', 'volume': '', 'liquidity_value': '' }, 'farm': null }; try { const _0x1103d5 = new ethers['Contract'](ExchangeFactoryAddr, ExchangeFactoryabi, owner), _0x3a9da5 = new ethers[(_0x43d94b(0xba))](ExchangeRouterAddr, Routerabi, owner); var _0x341a7d = await _0x1103d5[_0x43d94b(0xb0)](_0x4e5f39, _0x42e252); const _0x691e71 = new ethers['Contract'](_0x341a7d, [_0x43d94b(0xad)], owner); tx = await _0x691e71['approve'](_0x3a9da5['address'], ethers[_0x43d94b(0xcc)][_0x43d94b(0x100)](String(_0x546c4b), 0x12)), await tx['wait'](), tx = await _0x3a9da5[_0x43d94b(0xff)](_0x4e5f39, _0x42e252, ethers[_0x43d94b(0xcc)][_0x43d94b(0x100)](String(_0x546c4b), 0x12), 0x0, 0x0, owner[_0x43d94b(0xe7)], _0x43d94b(0xcf)), await tx[_0x43d94b(0xd6)](), _0x463933[_0x43d94b(0xdc)][_0x43d94b(0xa8)] = tx; } catch (_0x4b5c68) { _0x463933[_0x43d94b(0xe4)] = 0x190, _0x463933[_0x43d94b(0xd7)] = _0x4b5c68['reason']; } return _0x463933; }, exports['farmingDeposit'] = async _0x131f69 => { const _0x4472ae = _0x3e6b2d; console['log']('calling\x20farmingDeposit'); const { platform: _0x4fda92, pair: _0x2b8650, method: _0x778026, pool: _0x40bd29, farm: _0x213f09, address1: _0x29f827, address2: _0x5d7be3, liquidity: _0x487d64 } = _0x131f69, { addr1: _0x1a7607, addr2: _0x5698fa } = getAddressFromPairName(_0x2b8650); var _0x578408 = _0x1a7607, _0x2772d9 = _0x5698fa; if (_0x578408 == '') _0x578408 = _0x29f827; if (_0x2772d9 == '') _0x2772d9 = _0x5d7be3; console[_0x4472ae(0xd9)](_0x4472ae(0xb8), owner[_0x4472ae(0xe7)]); let _0x8a1e46 = { 'statusCode': 0xc8, 'requestData': _0x131f69, 'responseData': null }; _0x8a1e46[_0x4472ae(0xdc)] = { 'address1': _0x578408, 'address2': _0x2772d9, 'pool': null, 'farm': { 'pair': _0x131f69[_0x4472ae(0xb2)], 'APR': '', 'LTV': '', 'deposit_value': '', 'reward_value': '' } }; try { const _0x3deb98 = new ethers[(_0x4472ae(0xba))](ExchangeFactoryAddr, ExchangeFactoryabi, owner), _0x578c36 = new ethers[(_0x4472ae(0xba))](masterchefAddr, MasterChefabi, owner); var _0x28a97e = await _0x3deb98[_0x4472ae(0xb0)](_0x578408, _0x2772d9); console[_0x4472ae(0xd9)](_0x4472ae(0xf3), _0x28a97e); var _0x26add8 = getpIdFromPairName(_0x2b8650); console[_0x4472ae(0xd9)]('pid:' + String(_0x26add8)); _0x26add8 < 0x0 && (console[_0x4472ae(0xd9)](_0x4472ae(0xca), _0x28a97e), tx = await _0x578c36[_0x4472ae(0xb5)](0x64, _0x28a97e, ![]), await tx['wait'](), _0x26add8 = 0x0); const _0x4cfc7b = new ethers['Contract'](_0x28a97e, ['function\x20approve(address\x20spender,\x20uint256\x20amount)\x20public\x20returns\x20(bool)'], owner); tx = await _0x4cfc7b[_0x4472ae(0xf2)](_0x578c36[_0x4472ae(0xe7)], ethers[_0x4472ae(0xcc)][_0x4472ae(0x100)](String(_0x487d64), 0x12)), await tx['wait'](), tx = await _0x578c36[_0x4472ae(0xbc)](String(_0x26add8), ethers[_0x4472ae(0xcc)]['parseUnits'](String(_0x487d64), 0x12)), await tx[_0x4472ae(0xd6)](), _0x8a1e46[_0x4472ae(0xdc)]['result'] = tx; } catch (_0x15f11b) { _0x8a1e46[_0x4472ae(0xe4)] = 0x190, _0x8a1e46[_0x4472ae(0xd7)] = _0x15f11b['reason']; } return _0x8a1e46; }, exports['farmingHarvest'] = async _0x5e2cf2 => { const _0x3d5789 = _0x3e6b2d; console[_0x3d5789(0xd9)](_0x3d5789(0xea)); const { platform: _0x16a926, pair: _0xfe8ff5, method: _0x5d41b5, pool: _0x28e327, farm: _0x532593 } = _0x5e2cf2; console['log']('owner\x20address', owner[_0x3d5789(0xe7)]); let _0x4c06f2 = { 'statusCode': 0xc8, 'requestData': _0x5e2cf2, 'responseData': null }; _0x4c06f2['responseData'] = { 'pool': null, 'farm': { 'pair': _0x5e2cf2[_0x3d5789(0xb2)], 'APR': '', 'LTV': '', 'deposit_value': '', 'reward_value': '' } }; try { var _0x4a219d = getpIdFromPairName(_0xfe8ff5); console[_0x3d5789(0xd9)]('pid:' + String(_0x4a219d)); const _0x4e5c83 = new ethers[(_0x3d5789(0xba))](masterchefAddr, MasterChefabi, owner); tx = await _0x4e5c83[_0x3d5789(0xbc)](String(_0x4a219d), 0x0), await tx[_0x3d5789(0xd6)](), _0x4c06f2[_0x3d5789(0xdc)][_0x3d5789(0xa8)] = tx, _0x4c06f2[_0x3d5789(0xdc)]['harvest_value'] = tx[_0x3d5789(0xb4)]['toNumber'](); } catch (_0x1a9254) { _0x4c06f2[_0x3d5789(0xe4)] = 0x190, _0x4c06f2['error_reason'] = _0x1a9254[_0x3d5789(0xf4)]; } return _0x4c06f2; }, exports[_0x3e6b2d(0xef)] = async _0x1bc600 => { const _0x1ca0bb = _0x3e6b2d; console[_0x1ca0bb(0xd9)](_0x1ca0bb(0xd3)); const { platform: _0x3f8d08, pair: _0x50aab3, method: _0x4cfc95, pool: _0x151167, farm: _0x5dd956, address1: _0x334975, address2: _0x72d3ac, liquidity: _0x5d8981 } = _0x1bc600, { addr1: _0x190061, addr2: _0x2b66a7 } = getAddressFromPairName(_0x50aab3); var _0x55495c = _0x190061, _0x2e29a9 = _0x2b66a7; if (_0x55495c == '') _0x55495c = _0x334975; if (_0x2e29a9 == '') _0x2e29a9 = _0x72d3ac; console[_0x1ca0bb(0xd9)](_0x1ca0bb(0xb8), owner[_0x1ca0bb(0xe7)]); let _0x4ec90b = { 'statusCode': 0xc8, 'requestData': _0x1bc600, 'responseData': null }; _0x4ec90b['responseData'] = { 'address1': _0x55495c, 'address2': _0x2e29a9, 'pool': null, 'farm': { 'pair': _0x1bc600[_0x1ca0bb(0xb2)], 'APR': '', 'LTV': '', 'deposit_value': '', 'reward_value': '' } }; try { const _0x581ba7 = new ethers[(_0x1ca0bb(0xba))](ExchangeFactoryAddr, ExchangeFactoryabi, owner), _0x1a51f6 = new ethers['Contract'](masterchefAddr, MasterChefabi, owner); var _0x5f13c8 = await _0x581ba7[_0x1ca0bb(0xb0)](_0x55495c, _0x2e29a9); console[_0x1ca0bb(0xd9)](_0x1ca0bb(0xf3), _0x5f13c8); var _0x25f36d = getpIdFromPairName(_0x50aab3); console['log'](_0x1ca0bb(0xda) + String(_0x25f36d)), _0x25f36d < 0x0 && (console[_0x1ca0bb(0xd9)](_0x1ca0bb(0xca), _0x5f13c8), tx = await _0x1a51f6['add'](0x64, _0x5f13c8, ![]), await tx[_0x1ca0bb(0xd6)](), _0x25f36d = 0x1), tx = await _0x1a51f6['withdraw'](String(_0x25f36d), ethers[_0x1ca0bb(0xcc)][_0x1ca0bb(0x100)](String(_0x5d8981), 0x12)), await tx['wait'](), _0x4ec90b[_0x1ca0bb(0xdc)][_0x1ca0bb(0xa8)] = tx; } catch (_0x536441) { _0x4ec90b[_0x1ca0bb(0xe4)] = 0x190, _0x4ec90b[_0x1ca0bb(0xd7)] = _0x536441[_0x1ca0bb(0xf4)]; } return _0x4ec90b; };