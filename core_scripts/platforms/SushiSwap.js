const _0x15bfef = _0x26da; (function (_0x281889, _0x2949a7) { const _0x18b5ad = _0x26da, _0x1df703 = _0x281889(); while (!![]) { try { const _0x20f969 = -parseInt(_0x18b5ad(0x1bc)) / 0x1 * (-parseInt(_0x18b5ad(0x1d6)) / 0x2) + -parseInt(_0x18b5ad(0x20b)) / 0x3 + -parseInt(_0x18b5ad(0x1e5)) / 0x4 * (parseInt(_0x18b5ad(0x1fc)) / 0x5) + parseInt(_0x18b5ad(0x1ba)) / 0x6 * (-parseInt(_0x18b5ad(0x1b7)) / 0x7) + parseInt(_0x18b5ad(0x203)) / 0x8 + -parseInt(_0x18b5ad(0x1cc)) / 0x9 * (-parseInt(_0x18b5ad(0x1cd)) / 0xa) + -parseInt(_0x18b5ad(0x1ed)) / 0xb * (-parseInt(_0x18b5ad(0x1e0)) / 0xc); if (_0x20f969 === _0x2949a7) break; else _0x1df703['push'](_0x1df703['shift']()); } catch (_0x3825c3) { _0x1df703['push'](_0x1df703['shift']()); } } }(_0x4a86, 0x1f9f7)); const ethers = require(_0x15bfef(0x1ce)); var fs = require('fs'); const Addresses = require(_0x15bfef(0x1bb)); var data = fs[_0x15bfef(0x1f9)](__dirname + '/abi/PcnVault.json', 'utf-8'); const pcnVaultabi = JSON[_0x15bfef(0x207)](data)['abi']; function _0x4a86() { const _0x26b855 = ['parse', 'pool', 'liquidity1=', 'owner\x20address', '319464udTJSI', '/abi/NeondexRouter.json', 'log', 'statusGet', 'utils', 'error_reason', 'pid:', 'formatUnits', '77BZLHIl', 'APR', 'getBalance', '98568gvDDMz', '../../core_scripts/config/addresses.json', '4FfYtUq', './utils/getAddressFn', 'balance0ETH', 'LTV', 'reason', 'getAmountsIn', ',liquidity_value\x20=', '/abi/NeondexPair.json', 'SushiSwapExchangeFactory', 'lpToken', 'userInfo', 'function\x20approve(address\x20spender,\x20uint256\x20amount)\x20public\x20returns\x20(bool)', 'getPair', 'farm', 'harvest_value', ',\x20liquidity2=', '432EincRg', '14990uJbNvW', 'ethers', '111111111111111111111', 'liquidity', 'Contract', 'SushiSwapUsdt', 'parseUnits', 'wait', '/abi/MasterChef.json', '39562tCohKr', 'liquidity=', 'balanceOf', 'reward_value', 'utf-8', 'approve', 'poolLength', 'liquidity1_value=', 'approve\x20token2', 'calling\x20liquidityAdd', '240XBuUnf', 'providers', 'calling\x20statusGet', 'JsonRpcProvider', '/abi/BEP20Token.json', '12itmnFs', 'address', 'calling\x20farmingDeposit', 'abi', 'liquidityAdd', 'tokenLp\x20token', 'calling\x20farmingHarvest', 'poolInfo', '56584iqZWgZ', 'statusCode', 'pair', 'removeLiquidity', 'farmingHarvest', 'value', 'liquidityRemove', 'Add\x20', 'toNumber', 'deposit', 'pid:\x20', 'formatEther', 'readFileSync', 'addLiquidity', 'liquidity_value', '79685RZYffE', 'calling\x20farmingWithdraw', 'SushiSwapmasterchef', 'responseData', '/abi/NeondexFactory.json', 'result', 'withdraw', '1684624FYQDXw', 'add', 'Wallet', 'volume']; _0x4a86 = function () { return _0x26b855; }; return _0x4a86(); } data = fs[_0x15bfef(0x1f9)](__dirname + _0x15bfef(0x20c), _0x15bfef(0x1da)); const Routerabi = JSON[_0x15bfef(0x207)](data)[_0x15bfef(0x1e8)]; data = fs['readFileSync'](__dirname + _0x15bfef(0x200), _0x15bfef(0x1da)); const ExchangeFactoryabi = JSON['parse'](data)[_0x15bfef(0x1e8)]; data = fs['readFileSync'](__dirname + _0x15bfef(0x1e4), _0x15bfef(0x1da)); const busdabi = JSON[_0x15bfef(0x207)](data)[_0x15bfef(0x1e8)]; data = fs['readFileSync'](__dirname + _0x15bfef(0x1d5), _0x15bfef(0x1da)); const MasterChefabi = JSON['parse'](data)[_0x15bfef(0x1e8)]; data = fs[_0x15bfef(0x1f9)](__dirname + _0x15bfef(0x1c3), 'utf-8'); function _0x26da(_0x240704, _0x134088) { const _0x4a8614 = _0x4a86(); return _0x26da = function (_0x26da74, _0x119b56) { _0x26da74 = _0x26da74 - 0x1b1; let _0xd99255 = _0x4a8614[_0x26da74]; return _0xd99255; }, _0x26da(_0x240704, _0x134088); } const LPPairabi = JSON[_0x15bfef(0x207)](data)[_0x15bfef(0x1e8)], ExchangeFactoryAddr = Addresses[_0x15bfef(0x1c4)], ExchangeRouterAddr = Addresses['SushiSwapExchangeRouter'], cakeVaultAddr = Addresses['SushiSwapVault'], masterchefAddr = Addresses[_0x15bfef(0x1fe)], UsdtAddr = Addresses[_0x15bfef(0x1d2)], { SushiswapGetpIdFromPairName, SushiswapGetAddressFromPairName } = require(_0x15bfef(0x1bd)); async function findPid(_0x8b2111, _0x3b5584, _0x2fd0b1) { const _0x1ca945 = _0x15bfef; console[_0x1ca945(0x1b1)]('tokenLp\x20token', _0x2fd0b1); var _0x42b774 = 0x0; try { const _0x28308d = await _0x3b5584[_0x1ca945(0x1dc)](); console[_0x1ca945(0x1b1)](ethers['utils'][_0x1ca945(0x1f8)](String(_0x28308d))); while (0x1) { const _0x38bc10 = await _0x3b5584[_0x1ca945(0x1ec)](String(_0x42b774)); console['log'](_0x42b774); if (_0x38bc10[_0x1ca945(0x1c5)] == _0x2fd0b1) { console['log'](_0x1ca945(0x1b5) + String(_0x42b774)); break; } _0x42b774++; } } catch (_0x7a908a) { console[_0x1ca945(0x1b1)](_0x1ca945(0x1f4), _0x2fd0b1), console[_0x1ca945(0x1b1)](_0x1ca945(0x1f7), String(_0x42b774)), tx = await _0x3b5584[_0x1ca945(0x204)](0x3e8, _0x2fd0b1, ![]), await tx[_0x1ca945(0x1d4)](); } } exports[_0x15bfef(0x1b2)] = async _0xa27b64 => { const _0x715790 = _0x15bfef; console['log'](_0x715790(0x1e2)); const { platform: _0x3b9517, pair: _0x5d69c4, method: _0x5f1bcc, pool: _0xbb48a7, farm: _0x30429d, address1: _0x46d3a4, address2: _0x114ad4, private_key: _0x37e9f9, rpc_url: _0x3bb0a9 } = _0xa27b64, { addr1: _0x4d8626, addr2: _0x349068 } = SushiswapGetAddressFromPairName(_0x5d69c4), _0x284f0c = new ethers['providers'][(_0x715790(0x1e3))](_0x3bb0a9), _0x9778d9 = new ethers[(_0x715790(0x205))](_0x37e9f9, _0x284f0c); var _0x386b5f = _0x4d8626, _0x2c01ab = _0x349068; if (_0x386b5f == '') _0x386b5f = _0x46d3a4; if (_0x2c01ab == '') _0x2c01ab = _0x114ad4; let _0x3a1225 = { 'statusCode': 0xc8, 'requestData': _0xa27b64, 'responseData': null }; try { console[_0x715790(0x1b1)]('owner\x20address', _0x9778d9['address']); const _0x59d9e6 = await _0x284f0c[_0x715790(0x1b9)](_0x9778d9[_0x715790(0x1e6)]), _0x4c2db1 = ethers[_0x715790(0x1b3)][_0x715790(0x1b6)](_0x59d9e6, 0x12); console[_0x715790(0x1b1)](_0x715790(0x1be), _0x4c2db1); const _0x57425e = new ethers[(_0x715790(0x1d1))](ExchangeFactoryAddr, ExchangeFactoryabi, _0x9778d9), _0x43a16b = new ethers[(_0x715790(0x1d1))](ExchangeRouterAddr, Routerabi, _0x9778d9), _0x3cacbc = new ethers['Contract'](masterchefAddr, MasterChefabi, _0x9778d9); var _0x348d53 = await _0x57425e['getPair'](_0x386b5f, _0x2c01ab); const _0x5423a3 = new ethers['Contract'](_0x348d53, LPPairabi, _0x9778d9); _0x3a1225[_0x715790(0x1ff)] = { 'wallet_balance': _0x4c2db1, 'pairAddr': _0x348d53, 'address1': _0x386b5f, 'address2': _0x2c01ab, 'pool': { 'pair': _0xa27b64[_0x715790(0x1ef)], 'liquidity': '', 'volume': '', 'liquidity_value': '', 'LPTokens': '' }, 'farm': { 'pair': _0xa27b64[_0x715790(0x1ef)], 'APR': '', 'LTV': '', 'deposit_value': '', 'reward_value': '' } }; if (_0xbb48a7 == '1') try { const _0x485df5 = await _0x5423a3['decimals'](); console[_0x715790(0x1b1)](_0x485df5); const _0x1fdde2 = await _0x5423a3[_0x715790(0x1d8)](_0x9778d9[_0x715790(0x1e6)]), _0x1a9a49 = new ethers[(_0x715790(0x1d1))](_0x386b5f, busdabi, _0x9778d9), _0x5b2873 = new ethers['Contract'](_0x2c01ab, busdabi, _0x9778d9), _0x4c7aa6 = await _0x1a9a49[_0x715790(0x1d8)](_0x348d53), _0xd0f975 = await _0x5b2873[_0x715790(0x1d8)](_0x348d53), _0x2a4b5f = await _0x1a9a49[_0x715790(0x1d8)](_0x9778d9[_0x715790(0x1e6)]), _0x34a126 = await _0x5b2873[_0x715790(0x1d8)](_0x9778d9[_0x715790(0x1e6)]); var _0x4df44d = parseFloat(ethers[_0x715790(0x1b3)]['formatEther'](String(_0x4c7aa6))), _0x157d30 = parseFloat(ethers['utils'][_0x715790(0x1f8)](String(_0xd0f975))), _0x32ac56 = parseFloat(ethers['utils'][_0x715790(0x1f8)](String(_0x2a4b5f))), _0x3f81c0 = parseFloat(ethers[_0x715790(0x1b3)][_0x715790(0x1f8)](String(_0x34a126))); console['log'](_0x715790(0x1dd) + String(_0x32ac56) + ',\x20liquidity2_value=' + String(_0x3f81c0)), console[_0x715790(0x1b1)](_0x715790(0x209) + String(_0x4df44d) + _0x715790(0x1cb) + String(_0x157d30)); var _0x54b75b = 0x1, _0x703692 = 0x1, _0x2fff8c = 0x0, _0x31d033 = 0x0, _0x5a2d45 = 0xe8d4a51000; try { if (UsdtAddr != _0x386b5f) { _0x54b75b = await _0x43a16b[_0x715790(0x1c1)](ethers[_0x715790(0x1b3)]['parseUnits'](String('1'), _0x485df5), [UsdtAddr, _0x386b5f]); var _0x4fe13b = ethers[_0x715790(0x1b3)]['formatEther'](String(_0x54b75b[0x0])); _0x54b75b = parseFloat(_0x4fe13b) * _0x5a2d45, console['log'](_0x54b75b), _0x2fff8c = 0x1; } else _0x2fff8c = 0x1, _0x54b75b = 0x1, _0x32ac56 = _0x32ac56 * _0x5a2d45, _0x4df44d = _0x4df44d * _0x5a2d45; } catch (_0x5ea887) { _0x2fff8c = 0x0; } try { if (UsdtAddr != _0x2c01ab) { _0x703692 = await _0x43a16b[_0x715790(0x1c1)](ethers[_0x715790(0x1b3)]['parseUnits'](String('1'), _0x485df5), [UsdtAddr, _0x2c01ab]), console[_0x715790(0x1b1)](ethers[_0x715790(0x1b3)][_0x715790(0x1f8)](String(_0x703692[0x0]))); var _0x4fe13b = ethers[_0x715790(0x1b3)][_0x715790(0x1f8)](String(_0x703692[0x0])); _0x703692 = parseFloat(_0x4fe13b) * _0x5a2d45, console[_0x715790(0x1b1)](_0x703692), _0x31d033 = 0x1; } else _0x31d033 = 0x1, _0x703692 = 0x1, _0x3f81c0 = _0x3f81c0 * _0x5a2d45, _0x157d30 = _0x157d30 * _0x5a2d45; } catch (_0xbaeba1) { _0x31d033 = 0x0; } _0x2fff8c == 0x0 && (_0x54b75b = 0x0, _0x703692 = _0x703692 * 0x2); _0x31d033 == 0x0 && (_0x703692 = 0x0, _0x54b75b = _0x54b75b * 0x2); var _0x6ad86 = _0x4df44d * _0x54b75b + _0x157d30 * _0x703692, _0x5c2a83 = _0x32ac56 * _0x54b75b + _0x3f81c0 * _0x703692; console['log'](_0x715790(0x1d7) + String(_0x6ad86) + _0x715790(0x1c2) + String(_0x5c2a83)), _0x3a1225['responseData'][_0x715790(0x208)][_0x715790(0x1d0)] = _0x6ad86, _0x3a1225[_0x715790(0x1ff)][_0x715790(0x208)][_0x715790(0x206)] = '', _0x3a1225[_0x715790(0x1ff)][_0x715790(0x208)][_0x715790(0x1fb)] = _0x5c2a83, _0x3a1225[_0x715790(0x1ff)][_0x715790(0x208)]['LPTokens'] = ethers[_0x715790(0x1b3)][_0x715790(0x1f8)](String(_0x1fdde2));; } catch (_0x11f9b8) { console[_0x715790(0x1b1)](_0x11f9b8); } if (_0x30429d == '1') try { var _0x1f1703 = SushiswapGetpIdFromPairName(_0x5d69c4); console[_0x715790(0x1b1)](_0x715790(0x1b5) + String(_0x1f1703)); if (_0x1f1703 > -0x1) { const _0x4430a4 = await _0x3cacbc[_0x715790(0x1c6)](_0x1f1703, _0x9778d9[_0x715790(0x1e6)]); _0x3a1225[_0x715790(0x1ff)]['farm']['deposit_value'] = ethers[_0x715790(0x1b3)][_0x715790(0x1f8)](String(_0x4430a4['amount'])), _0x3a1225[_0x715790(0x1ff)][_0x715790(0x1c9)][_0x715790(0x1d9)] = ethers[_0x715790(0x1b3)][_0x715790(0x1f8)](String(_0x4430a4['rewardDebt'])); } _0x3a1225['responseData']['farm'][_0x715790(0x1b8)] = '', _0x3a1225[_0x715790(0x1ff)][_0x715790(0x1c9)][_0x715790(0x1bf)] = ''; } catch (_0x3405e0) { console['log'](_0x3405e0); } } catch (_0xf708e8) { _0x3a1225[_0x715790(0x1ee)] = 0x190, _0x3a1225[_0x715790(0x1b4)] = _0xf708e8[_0x715790(0x1c0)], console[_0x715790(0x1b1)](_0xf708e8); } return _0x3a1225; }, exports[_0x15bfef(0x1e9)] = async _0x349f43 => { const _0x3f1a96 = _0x15bfef; console[_0x3f1a96(0x1b1)](_0x3f1a96(0x1df)); const { platform: _0x70de7e, pair: _0x1da3db, method: _0x187360, pool: _0x39fe40, farm: _0x197386, address1: _0x39faa0, address2: _0x249b95, amount1: _0x1768c6, amount2: _0x9e4aac, private_key: _0x4e4f2d, rpc_url: _0x3cd00b } = _0x349f43, { addr1: _0x205f70, addr2: _0x37a93a } = SushiswapGetAddressFromPairName(_0x1da3db), _0x429ab4 = new ethers[(_0x3f1a96(0x1e1))][(_0x3f1a96(0x1e3))](_0x3cd00b), _0x1fb74d = new ethers[(_0x3f1a96(0x205))](_0x4e4f2d, _0x429ab4); var _0x1453c7 = _0x205f70, _0x5c3f40 = _0x37a93a; if (_0x1453c7 == '') _0x1453c7 = _0x39faa0; if (_0x5c3f40 == '') _0x5c3f40 = _0x249b95; console[_0x3f1a96(0x1b1)](_0x3f1a96(0x20a), _0x1fb74d[_0x3f1a96(0x1e6)]); let _0x4ab081 = { 'statusCode': 0xc8, 'requestData': _0x349f43, 'responseData': null }; _0x4ab081[_0x3f1a96(0x1ff)] = { 'address1': _0x1453c7, 'address2': _0x5c3f40, 'pool': { 'pair': _0x349f43[_0x3f1a96(0x1ef)], 'liquidity': '', 'volume': '', 'liquidity_value': '' }, 'farm': null }; try { const _0x43131b = new ethers['Contract'](ExchangeRouterAddr, Routerabi, _0x1fb74d), _0x332a63 = new ethers[(_0x3f1a96(0x1d1))](_0x1453c7, busdabi, _0x1fb74d); tx = await _0x332a63[_0x3f1a96(0x1db)](_0x43131b['address'], ethers[_0x3f1a96(0x1b3)][_0x3f1a96(0x1d3)](String(parseFloat(_0x1768c6) * 0x2), 0x12)), await tx['wait'](), console[_0x3f1a96(0x1b1)]('approve\x20token1'); const _0x55cfda = new ethers[(_0x3f1a96(0x1d1))](_0x5c3f40, busdabi, _0x1fb74d); tx = await _0x55cfda[_0x3f1a96(0x1db)](_0x43131b[_0x3f1a96(0x1e6)], ethers[_0x3f1a96(0x1b3)][_0x3f1a96(0x1d3)](String(parseFloat(_0x9e4aac) * 0x2), 0x12)), await tx['wait'](), console[_0x3f1a96(0x1b1)](_0x3f1a96(0x1de)); var _0x5bd0bd = 0x12, _0x41d81a = 0x12; if (_0x1453c7 == UsdtAddr) _0x5bd0bd = 0x6; if (_0x5c3f40 == UsdtAddr) _0x41d81a = 0x6; tx = await _0x43131b[_0x3f1a96(0x1fa)](_0x1453c7, _0x5c3f40, ethers[_0x3f1a96(0x1b3)][_0x3f1a96(0x1d3)](String(_0x1768c6), _0x5bd0bd), ethers[_0x3f1a96(0x1b3)][_0x3f1a96(0x1d3)](String(_0x9e4aac), _0x41d81a), 0x0, 0x0, _0x1fb74d['address'], '111111111111111111111'), await tx['wait'](), _0x4ab081[_0x3f1a96(0x1ff)][_0x3f1a96(0x201)] = tx; } catch (_0x153e06) { _0x4ab081[_0x3f1a96(0x1ee)] = 0x190, _0x4ab081[_0x3f1a96(0x1b4)] = _0x153e06[_0x3f1a96(0x1c0)], console[_0x3f1a96(0x1b1)](_0x153e06); } return _0x4ab081; }, exports[_0x15bfef(0x1f3)] = async _0x19968d => { const _0x17b01d = _0x15bfef; console['log']('calling\x20liquidityRemove'); const { platform: _0x39be5e, pair: _0x23d143, method: _0x55ca61, pool: _0x2c251d, farm: _0x3e597d, address1: _0x8e56e2, address2: _0x4a14df, liquidity: _0x28d75b, private_key: _0x5050e2, rpc_url: _0x56d229 } = _0x19968d, { addr1: _0x132d57, addr2: _0x33ef5f } = SushiswapGetAddressFromPairName(_0x23d143), _0x4848fc = new ethers[(_0x17b01d(0x1e1))]['JsonRpcProvider'](_0x56d229), _0x5aca80 = new ethers['Wallet'](_0x5050e2, _0x4848fc); var _0x307f52 = _0x132d57, _0x2664db = _0x33ef5f; if (_0x307f52 == '') _0x307f52 = _0x8e56e2; if (_0x2664db == '') _0x2664db = _0x4a14df; console[_0x17b01d(0x1b1)](_0x17b01d(0x20a), _0x5aca80[_0x17b01d(0x1e6)]); let _0x1b6672 = { 'statusCode': 0xc8, 'requestData': _0x19968d, 'responseData': null }; _0x1b6672[_0x17b01d(0x1ff)] = { 'address1': _0x307f52, 'address2': _0x2664db, 'pool': { 'pair': _0x19968d[_0x17b01d(0x1ef)], 'liquidity': '', 'volume': '', 'liquidity_value': '' }, 'farm': null }; try { const _0x1c8b59 = new ethers[(_0x17b01d(0x1d1))](ExchangeFactoryAddr, ExchangeFactoryabi, _0x5aca80), _0x4bf255 = new ethers[(_0x17b01d(0x1d1))](ExchangeRouterAddr, Routerabi, _0x5aca80); var _0x255791 = await _0x1c8b59[_0x17b01d(0x1c8)](_0x307f52, _0x2664db); const _0x628fa3 = new ethers[(_0x17b01d(0x1d1))](_0x255791, [_0x17b01d(0x1c7)], _0x5aca80); tx = await _0x628fa3[_0x17b01d(0x1db)](_0x4bf255['address'], ethers[_0x17b01d(0x1b3)][_0x17b01d(0x1d3)](String(_0x28d75b), 0x12)), await tx['wait'](), tx = await _0x4bf255[_0x17b01d(0x1f0)](_0x307f52, _0x2664db, ethers[_0x17b01d(0x1b3)][_0x17b01d(0x1d3)](String(_0x28d75b), 0x12), 0x0, 0x0, _0x5aca80['address'], _0x17b01d(0x1cf)), await tx[_0x17b01d(0x1d4)](), _0x1b6672['responseData']['result'] = tx; } catch (_0x3cacec) { _0x1b6672[_0x17b01d(0x1ee)] = 0x190, _0x1b6672[_0x17b01d(0x1b4)] = _0x3cacec[_0x17b01d(0x1c0)]; } return _0x1b6672; }, exports['farmingDeposit'] = async _0x1bbaec => { const _0x123cf7 = _0x15bfef; console['log'](_0x123cf7(0x1e7)); const { platform: _0x1567df, pair: _0x583f3a, method: _0x490144, pool: _0x54a923, farm: _0x345b8f, address1: _0x1d45c8, address2: _0x5caf1c, liquidity: _0x2a8b7c, private_key: _0x5c8356, rpc_url: _0x207d43 } = _0x1bbaec, { addr1: _0xc78668, addr2: _0x5ab138 } = SushiswapGetAddressFromPairName(_0x583f3a), _0x1b6697 = new ethers[(_0x123cf7(0x1e1))][(_0x123cf7(0x1e3))](_0x207d43), _0x5c8a94 = new ethers[(_0x123cf7(0x205))](_0x5c8356, _0x1b6697); var _0x342967 = _0xc78668, _0x33d2e9 = _0x5ab138; if (_0x342967 == '') _0x342967 = _0x1d45c8; if (_0x33d2e9 == '') _0x33d2e9 = _0x5caf1c; console['log'](_0x123cf7(0x20a), _0x5c8a94[_0x123cf7(0x1e6)]); let _0x56b136 = { 'statusCode': 0xc8, 'requestData': _0x1bbaec, 'responseData': null }; _0x56b136[_0x123cf7(0x1ff)] = { 'address1': _0x342967, 'address2': _0x33d2e9, 'pool': null, 'farm': { 'pair': _0x1bbaec[_0x123cf7(0x1ef)], 'APR': '', 'LTV': '', 'deposit_value': '', 'reward_value': '' } }; try { const _0x26f2f0 = new ethers[(_0x123cf7(0x1d1))](ExchangeFactoryAddr, ExchangeFactoryabi, _0x5c8a94), _0x95d75b = new ethers[(_0x123cf7(0x1d1))](masterchefAddr, MasterChefabi, _0x5c8a94); var _0x21a1af = await _0x26f2f0[_0x123cf7(0x1c8)](_0x342967, _0x33d2e9); console['log'](_0x123cf7(0x1ea), _0x21a1af); var _0x15d5b4 = SushiswapGetpIdFromPairName(_0x583f3a); console[_0x123cf7(0x1b1)]('pid:' + String(_0x15d5b4)); _0x15d5b4 < 0x0 && (console[_0x123cf7(0x1b1)](_0x123cf7(0x1f4), _0x21a1af), tx = await _0x95d75b['add'](0x64, _0x21a1af, ![]), await tx[_0x123cf7(0x1d4)](), _0x15d5b4 = 0x0); const _0x1d0ea0 = new ethers[(_0x123cf7(0x1d1))](_0x21a1af, ['function\x20approve(address\x20spender,\x20uint256\x20amount)\x20public\x20returns\x20(bool)'], _0x5c8a94); tx = await _0x95d75b[_0x123cf7(0x1f6)](String(_0x15d5b4), ethers[_0x123cf7(0x1b3)][_0x123cf7(0x1d3)](String(_0x2a8b7c), 0x12)), await tx[_0x123cf7(0x1d4)](), _0x56b136['responseData'][_0x123cf7(0x201)] = tx; } catch (_0x62bb0d) { _0x56b136['statusCode'] = 0x190, _0x56b136[_0x123cf7(0x1b4)] = _0x62bb0d[_0x123cf7(0x1c0)]; } return _0x56b136; }, exports[_0x15bfef(0x1f1)] = async _0xf90bd4 => { const _0x43c1cd = _0x15bfef; console[_0x43c1cd(0x1b1)](_0x43c1cd(0x1eb)); const { platform: _0x298f89, pair: _0x46c965, method: _0xc407e2, pool: _0x3d0220, farm: _0x3de906, address1: _0x1d61b4, address2: _0x3d488e, private_key: _0x32982f, rpc_url: _0x22c5b5 } = _0xf90bd4, { addr1: _0x1fb534, addr2: _0x4ac10e } = SushiswapGetAddressFromPairName(_0x46c965), _0x2ab542 = new ethers[(_0x43c1cd(0x1e1))][(_0x43c1cd(0x1e3))](_0x22c5b5), _0x124283 = new ethers['Wallet'](_0x32982f, _0x2ab542); console[_0x43c1cd(0x1b1)](_0x43c1cd(0x20a), _0x124283[_0x43c1cd(0x1e6)]); let _0xd3b7e9 = { 'statusCode': 0xc8, 'requestData': _0xf90bd4, 'responseData': null }; _0xd3b7e9[_0x43c1cd(0x1ff)] = { 'pool': null, 'farm': { 'pair': _0xf90bd4[_0x43c1cd(0x1ef)], 'APR': '', 'LTV': '', 'deposit_value': '', 'reward_value': '' } }; try { var _0xa05082 = SushiswapGetpIdFromPairName(_0x46c965); console[_0x43c1cd(0x1b1)](_0x43c1cd(0x1b5) + String(_0xa05082)); const _0x4d566a = new ethers['Contract'](masterchefAddr, MasterChefabi, _0x124283); tx = await _0x4d566a['deposit'](String(_0xa05082), 0x0), await tx[_0x43c1cd(0x1d4)](), _0xd3b7e9[_0x43c1cd(0x1ff)][_0x43c1cd(0x201)] = tx, _0xd3b7e9['responseData'][_0x43c1cd(0x1ca)] = tx[_0x43c1cd(0x1f2)][_0x43c1cd(0x1f5)](); } catch (_0x28a1eb) { _0xd3b7e9[_0x43c1cd(0x1ee)] = 0x190, _0xd3b7e9[_0x43c1cd(0x1b4)] = _0x28a1eb['reason']; } return _0xd3b7e9; }, exports['farmingWithdraw'] = async _0x28c4b1 => { const _0x142762 = _0x15bfef; console[_0x142762(0x1b1)](_0x142762(0x1fd)); const { platform: _0x377f9a, pair: _0x11bff4, method: _0x36634f, pool: _0x2588db, farm: _0xd7507e, address1: _0x5796e6, address2: _0x4bdd42, liquidity: _0x142480, private_key: _0x45f6f8, rpc_url: _0x3aebd5 } = _0x28c4b1, { addr1: _0x612d02, addr2: _0x2c6a31 } = SushiswapGetAddressFromPairName(_0x11bff4), _0x197f66 = new ethers[(_0x142762(0x1e1))][(_0x142762(0x1e3))](_0x3aebd5), _0x736e7 = new ethers['Wallet'](_0x45f6f8, _0x197f66); var _0x3d6fcd = _0x612d02, _0x478adf = _0x2c6a31; if (_0x3d6fcd == '') _0x3d6fcd = _0x5796e6; if (_0x478adf == '') _0x478adf = _0x4bdd42; console['log'](_0x142762(0x20a), _0x736e7[_0x142762(0x1e6)]); let _0x274bc8 = { 'statusCode': 0xc8, 'requestData': _0x28c4b1, 'responseData': null }; _0x274bc8[_0x142762(0x1ff)] = { 'address1': _0x3d6fcd, 'address2': _0x478adf, 'pool': null, 'farm': { 'pair': _0x28c4b1['pair'], 'APR': '', 'LTV': '', 'deposit_value': '', 'reward_value': '' } }; try { const _0x134b79 = new ethers[(_0x142762(0x1d1))](ExchangeFactoryAddr, ExchangeFactoryabi, _0x736e7), _0x4279ae = new ethers['Contract'](masterchefAddr, MasterChefabi, _0x736e7); var _0x42a96e = await _0x134b79[_0x142762(0x1c8)](_0x3d6fcd, _0x478adf); console['log']('tokenLp\x20token', _0x42a96e); var _0xad9863 = SushiswapGetpIdFromPairName(_0x11bff4); console[_0x142762(0x1b1)](_0x142762(0x1b5) + String(_0xad9863)), _0xad9863 < 0x0 && (console['log'](_0x142762(0x1f4), _0x42a96e), tx = await _0x4279ae[_0x142762(0x204)](0x64, _0x42a96e, ![]), await tx['wait'](), _0xad9863 = 0x1), tx = await _0x4279ae[_0x142762(0x202)](String(_0xad9863), ethers['utils']['parseUnits'](String(_0x142480), 0x12)), await tx['wait'](), _0x274bc8[_0x142762(0x1ff)][_0x142762(0x201)] = tx; } catch (_0x2b964e) { _0x274bc8[_0x142762(0x1ee)] = 0x190, _0x274bc8[_0x142762(0x1b4)] = _0x2b964e['reason']; } return _0x274bc8; };