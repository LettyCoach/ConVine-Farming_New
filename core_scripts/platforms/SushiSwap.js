const _0x70e236 = _0x2e64; function _0x2e64(_0x4a90fe, _0x2e6c41) { const _0xe5cfa = _0xe5cf(); return _0x2e64 = function (_0x2e64cc, _0x22a92c) { _0x2e64cc = _0x2e64cc - 0xf8; let _0x3de65e = _0xe5cfa[_0x2e64cc]; return _0x3de65e; }, _0x2e64(_0x4a90fe, _0x2e6c41); } (function (_0x3e08f8, _0x1f8acf) { const _0x39587c = _0x2e64, _0x966d93 = _0x3e08f8(); while (!![]) { try { const _0x395a66 = parseInt(_0x39587c(0xff)) / 0x1 * (-parseInt(_0x39587c(0x11a)) / 0x2) + parseInt(_0x39587c(0x14b)) / 0x3 + parseInt(_0x39587c(0x111)) / 0x4 + -parseInt(_0x39587c(0x117)) / 0x5 + -parseInt(_0x39587c(0x105)) / 0x6 + -parseInt(_0x39587c(0x11e)) / 0x7 + parseInt(_0x39587c(0x159)) / 0x8 * (parseInt(_0x39587c(0x144)) / 0x9); if (_0x395a66 === _0x1f8acf) break; else _0x966d93['push'](_0x966d93['shift']()); } catch (_0x5c1e7e) { _0x966d93['push'](_0x966d93['shift']()); } } }(_0xe5cf, 0xe2364)); const ethers = require(_0x70e236(0x101)), pcnVaultabi = require(_0x70e236(0x140))[_0x70e236(0x114)], Routerabi = require(_0x70e236(0x13a))['abi'], ExchangeFactoryabi = require(_0x70e236(0xfb))['abi'], busdabi = require(_0x70e236(0x143))['abi'], MasterChefabi = require(_0x70e236(0x119))[_0x70e236(0x114)], LPPairabi = require(_0x70e236(0x15c))[_0x70e236(0x114)], Addresses = require('../config/addresses.json'), provider = new ethers['providers'][(_0x70e236(0x136))](process['env'][_0x70e236(0x135)]); let private_key = process[_0x70e236(0x10f)][_0x70e236(0x12c)]; const owner = new ethers[(_0x70e236(0x154))](private_key, provider), ExchangeFactoryAddr = Addresses[_0x70e236(0x12e)], ExchangeRouterAddr = Addresses['SushiSwapExchangeRouter'], cakeVaultAddr = Addresses[_0x70e236(0x152)], masterchefAddr = Addresses['SushiSwapmasterchef'], UsdtAddr = Addresses['SushiSwapUsdt']; function getpIdFromPairName(_0x1f0c7f) { const _0x4cb730 = _0x70e236; var _0x710f58 = 0x0; switch (_0x1f0c7f) { case _0x4cb730(0x12f): case _0x4cb730(0x137): _0x710f58 = 0xf4; break; case _0x4cb730(0x14d): case _0x4cb730(0x131): _0x710f58 = 0xc; break; case _0x4cb730(0x11d): case _0x4cb730(0x122): _0x710f58 = 0x25; break; case _0x4cb730(0x126): case _0x4cb730(0xf8): _0x710f58 = 0x0; break; case _0x4cb730(0x155): case _0x4cb730(0x10a): _0x710f58 = 0x1; break; default: break; }return _0x710f58; } function getAddressFromPairName(_0xebf378) { const _0x3dd091 = _0x70e236; var _0x58ed71 = 0x0, _0x5e6655 = '', _0x2e41a4 = ''; switch (_0xebf378) { case _0x3dd091(0x12f): _0x5e6655 = Addresses[_0x3dd091(0x134)], _0x2e41a4 = Addresses[_0x3dd091(0x14f)]; break; case _0x3dd091(0x137): _0x2e41a4 = Addresses[_0x3dd091(0x134)], _0x5e6655 = Addresses[_0x3dd091(0x14f)]; break; case 'ETH-SUSHI': _0x5e6655 = Addresses[_0x3dd091(0x134)], _0x2e41a4 = Addresses[_0x3dd091(0x107)]; break; case _0x3dd091(0x131): _0x2e41a4 = Addresses[_0x3dd091(0x134)], _0x5e6655 = Addresses[_0x3dd091(0x107)]; break; case 'ETH-AAVE': _0x5e6655 = Addresses[_0x3dd091(0x134)], _0x2e41a4 = Addresses['SushiSwapAave']; break; case _0x3dd091(0x122): _0x2e41a4 = Addresses['SushiSwapWETH'], _0x5e6655 = Addresses[_0x3dd091(0x100)]; break; case _0x3dd091(0x126): _0x5e6655 = Addresses[_0x3dd091(0x134)], _0x2e41a4 = Addresses['SushiSwapUsdt']; break; case _0x3dd091(0xf8): _0x2e41a4 = Addresses[_0x3dd091(0x134)], _0x5e6655 = Addresses[_0x3dd091(0x142)]; break; case _0x3dd091(0x155): _0x5e6655 = Addresses[_0x3dd091(0x134)], _0x2e41a4 = Addresses[_0x3dd091(0x125)]; break; case _0x3dd091(0x10a): _0x2e41a4 = Addresses['SushiSwapWETH'], _0x5e6655 = Addresses[_0x3dd091(0x125)]; break; default: break; }return res = { 'addr1': _0x5e6655, 'addr2': _0x2e41a4 }, res; } async function findPid(_0x513639, _0x5d8fe4, _0x4405ab) { const _0x1aea53 = _0x70e236; console[_0x1aea53(0x129)](_0x1aea53(0x109), _0x4405ab); var _0x52bcac = 0x0; try { const _0x32bfa5 = await _0x5d8fe4['poolLength'](); console[_0x1aea53(0x129)](ethers['utils'][_0x1aea53(0x132)](String(_0x32bfa5))); while (0x1) { const _0x19f269 = await _0x5d8fe4[_0x1aea53(0x123)](String(_0x52bcac)); console[_0x1aea53(0x129)](_0x52bcac); if (_0x19f269[_0x1aea53(0xfc)] == _0x4405ab) { console[_0x1aea53(0x129)](_0x1aea53(0x12d) + String(_0x52bcac)); break; } _0x52bcac++; } } catch (_0x274981) { console[_0x1aea53(0x129)]('Add\x20', _0x4405ab), console[_0x1aea53(0x129)](_0x1aea53(0x102), String(_0x52bcac)), tx = await _0x5d8fe4[_0x1aea53(0x11c)](0x3e8, _0x4405ab, ![]), await tx[_0x1aea53(0x14a)](); } } exports[_0x70e236(0x150)] = async _0x5db99d => { const _0x2fb22f = _0x70e236; console[_0x2fb22f(0x129)](_0x2fb22f(0x15b)); const { platform: _0x2945bf, pair: _0x2458e0, method: _0x1798ba, pool: _0x4e705c, farm: _0x241096, address1: _0x33c55c, address2: _0x22bd3c } = _0x5db99d, { addr1: _0x2b97f2, addr2: _0x5afc65 } = getAddressFromPairName(_0x2458e0); var _0x349265 = _0x2b97f2, _0x4b6bd1 = _0x5afc65; if (_0x349265 == '') _0x349265 = _0x33c55c; if (_0x4b6bd1 == '') _0x4b6bd1 = _0x22bd3c; let _0x226517 = { 'statusCode': 0xc8, 'requestData': _0x5db99d, 'responseData': null }; try { console[_0x2fb22f(0x129)](_0x2fb22f(0x12a), owner[_0x2fb22f(0x148)]); const _0x58d6da = await provider[_0x2fb22f(0x11b)](owner[_0x2fb22f(0x148)]), _0x65dfd1 = ethers[_0x2fb22f(0x130)][_0x2fb22f(0xf9)](_0x58d6da, 0x12); console['log'](_0x2fb22f(0x146), _0x65dfd1); const _0x54bdec = new ethers['Contract'](ExchangeFactoryAddr, ExchangeFactoryabi, owner), _0x346d75 = new ethers[(_0x2fb22f(0x15a))](ExchangeRouterAddr, Routerabi, owner), _0x540631 = new ethers[(_0x2fb22f(0x15a))](masterchefAddr, MasterChefabi, owner); var _0x2bcaf6 = await _0x54bdec[_0x2fb22f(0x13f)](_0x349265, _0x4b6bd1); const _0x34d098 = new ethers[(_0x2fb22f(0x15a))](_0x2bcaf6, LPPairabi, owner); _0x226517[_0x2fb22f(0x115)] = { 'wallet_balance': _0x65dfd1, 'pairAddr': _0x2bcaf6, 'address1': _0x349265, 'address2': _0x4b6bd1, 'pool': { 'pair': _0x5db99d[_0x2fb22f(0x110)], 'liquidity': '', 'volume': '', 'liquidity_value': '', 'LPTokens': '' }, 'farm': { 'pair': _0x5db99d[_0x2fb22f(0x110)], 'APR': '', 'LTV': '', 'deposit_value': '', 'reward_value': '' } }; if (_0x4e705c == '1') try { const _0x310888 = await _0x34d098[_0x2fb22f(0x10d)](); console['log'](_0x310888); const _0x270623 = await _0x34d098[_0x2fb22f(0x104)](owner[_0x2fb22f(0x148)]), _0x1d5290 = new ethers[(_0x2fb22f(0x15a))](_0x349265, busdabi, owner), _0xdebb89 = new ethers[(_0x2fb22f(0x15a))](_0x4b6bd1, busdabi, owner), _0xa58f0a = await _0x1d5290[_0x2fb22f(0x104)](_0x2bcaf6), _0x56d309 = await _0xdebb89['balanceOf'](_0x2bcaf6), _0x50b2e9 = await _0x1d5290[_0x2fb22f(0x104)](owner[_0x2fb22f(0x148)]), _0x347c5e = await _0xdebb89[_0x2fb22f(0x104)](owner[_0x2fb22f(0x148)]); var _0x2aeb94 = parseFloat(ethers['utils'][_0x2fb22f(0x132)](String(_0xa58f0a))), _0x475a20 = parseFloat(ethers[_0x2fb22f(0x130)][_0x2fb22f(0x132)](String(_0x56d309))), _0x4fc091 = parseFloat(ethers['utils'][_0x2fb22f(0x132)](String(_0x50b2e9))), _0x14be24 = parseFloat(ethers[_0x2fb22f(0x130)][_0x2fb22f(0x132)](String(_0x347c5e))); console[_0x2fb22f(0x129)](_0x2fb22f(0x139) + String(_0x4fc091) + _0x2fb22f(0x124) + String(_0x14be24)), console[_0x2fb22f(0x129)]('liquidity1=' + String(_0x2aeb94) + _0x2fb22f(0x141) + String(_0x475a20)); var _0xde08e3 = 0x1, _0x30bbc5 = 0x1, _0x1bad49 = 0x0, _0x389fe9 = 0x0; try { if (UsdtAddr != _0x349265) { _0xde08e3 = await _0x346d75[_0x2fb22f(0x120)](ethers[_0x2fb22f(0x130)]['parseUnits'](String('1'), _0x310888), [UsdtAddr, _0x349265]); var _0x1549ff = ethers['utils'][_0x2fb22f(0x132)](String(_0xde08e3[0x0])); _0xde08e3 = parseFloat(_0x1549ff) * 0xe8d4a51000, console['log'](_0xde08e3), _0x1bad49 = 0x1; } } catch (_0x50dc56) { _0x1bad49 = 0x0; } try { if (UsdtAddr != _0x4b6bd1) { _0x30bbc5 = await _0x346d75[_0x2fb22f(0x120)](ethers['utils'][_0x2fb22f(0x10b)](String('1'), _0x310888), [UsdtAddr, _0x4b6bd1]), console[_0x2fb22f(0x129)](ethers[_0x2fb22f(0x130)]['formatEther'](String(_0x30bbc5[0x0]))); var _0x1549ff = ethers[_0x2fb22f(0x130)][_0x2fb22f(0x132)](String(_0x30bbc5[0x0])); _0x30bbc5 = parseFloat(_0x1549ff) * 0xe8d4a51000, _0x389fe9 = 0x1; } } catch (_0x616f33) { _0x389fe9 = 0x0; } _0x1bad49 == 0x0 && (_0xde08e3 = 0x0, _0x30bbc5 = _0x30bbc5 * 0x2); _0x389fe9 == 0x0 && (_0x30bbc5 = 0x0, _0xde08e3 = _0xde08e3 * 0x2); var _0x1f7965 = _0x2aeb94 * _0xde08e3 + _0x475a20 * _0x30bbc5, _0x3d4704 = _0x4fc091 * _0xde08e3 + _0x14be24 * _0x30bbc5; console['log'](_0x2fb22f(0x14e) + String(_0x1f7965) + _0x2fb22f(0x149) + String(_0x3d4704)), _0x226517[_0x2fb22f(0x115)]['pool']['liquidity'] = _0x1f7965, _0x226517[_0x2fb22f(0x115)][_0x2fb22f(0x12b)][_0x2fb22f(0x145)] = '', _0x226517[_0x2fb22f(0x115)][_0x2fb22f(0x12b)]['liquidity_value'] = _0x3d4704, _0x226517[_0x2fb22f(0x115)][_0x2fb22f(0x12b)][_0x2fb22f(0x157)] = ethers[_0x2fb22f(0x130)][_0x2fb22f(0x132)](String(_0x270623));; } catch (_0x524982) { console[_0x2fb22f(0x129)](_0x524982); } if (_0x241096 == '1') try { var _0x5db16f = getpIdFromPairName(_0x2458e0); console[_0x2fb22f(0x129)](_0x2fb22f(0x12d) + String(_0x5db16f)); if (_0x5db16f > -0x1) { const _0x2bd660 = await _0x540631[_0x2fb22f(0x13b)](_0x5db16f, owner[_0x2fb22f(0x148)]); _0x226517[_0x2fb22f(0x115)][_0x2fb22f(0xfa)][_0x2fb22f(0x156)] = ethers[_0x2fb22f(0x130)][_0x2fb22f(0x132)](String(_0x2bd660[_0x2fb22f(0x147)])), _0x226517[_0x2fb22f(0x115)][_0x2fb22f(0xfa)][_0x2fb22f(0x108)] = ethers[_0x2fb22f(0x130)][_0x2fb22f(0x132)](String(_0x2bd660['rewardDebt'])); } _0x226517[_0x2fb22f(0x115)][_0x2fb22f(0xfa)][_0x2fb22f(0x158)] = '', _0x226517[_0x2fb22f(0x115)]['farm'][_0x2fb22f(0x106)] = ''; } catch (_0x111667) { console[_0x2fb22f(0x129)](_0x111667); } } catch (_0x5fe33d) { _0x226517['statusCode'] = 0x190, _0x226517[_0x2fb22f(0x116)] = _0x5fe33d[_0x2fb22f(0x11f)]; } return _0x226517; }, exports['liquidityAdd'] = async _0x332209 => { const _0x473263 = _0x70e236; console[_0x473263(0x129)](_0x473263(0x13c)); const { platform: _0x8d85c, pair: _0x3fb91b, method: _0x257789, pool: _0x3c434b, farm: _0x1dac62, address1: _0x4a03df, address2: _0x45504c, amount1: _0xab0192, amount2: _0xc2f52c } = _0x332209, { addr1: _0x369197, addr2: _0x1fe87d } = getAddressFromPairName(_0x3fb91b); var _0x161c38 = _0x369197, _0xbf1eac = _0x1fe87d; if (_0x161c38 == '') _0x161c38 = _0x4a03df; if (_0xbf1eac == '') _0xbf1eac = _0x45504c; console[_0x473263(0x129)](_0x473263(0x12a), owner[_0x473263(0x148)]); let _0x4e94b4 = { 'statusCode': 0xc8, 'requestData': _0x332209, 'responseData': null }; _0x4e94b4[_0x473263(0x115)] = { 'address1': _0x161c38, 'address2': _0xbf1eac, 'pool': { 'pair': _0x332209[_0x473263(0x110)], 'liquidity': '', 'volume': '', 'liquidity_value': '' }, 'farm': null }; try { const _0x5cb128 = new ethers[(_0x473263(0x15a))](ExchangeRouterAddr, Routerabi, owner), _0x42a75e = new ethers['Contract'](_0x161c38, [_0x473263(0xfd)], owner); tx = await _0x42a75e[_0x473263(0xfe)](_0x5cb128[_0x473263(0x148)], ethers[_0x473263(0x130)][_0x473263(0x10b)](String(parseFloat(_0xab0192) * 0x2), 0x12)), await tx[_0x473263(0x14a)](), console['log'](_0x473263(0x10c)); const _0x34606b = new ethers[(_0x473263(0x15a))](_0xbf1eac, [_0x473263(0xfd)], owner); tx = await _0x34606b[_0x473263(0xfe)](_0x5cb128[_0x473263(0x148)], ethers[_0x473263(0x130)]['parseUnits'](String(parseFloat(_0xc2f52c) * 0x2), 0x12)), await tx[_0x473263(0x14a)](), console[_0x473263(0x129)](_0x473263(0x133)), tx = await _0x5cb128['addLiquidity'](_0x161c38, _0xbf1eac, ethers[_0x473263(0x130)][_0x473263(0x10b)](String(_0xab0192), 0x12), ethers['utils'][_0x473263(0x10b)](String(_0xc2f52c), 0x12), 0x0, 0x0, owner[_0x473263(0x148)], '111111111111111111111'), await tx['wait'](), _0x4e94b4[_0x473263(0x115)]['result'] = tx; } catch (_0x543f57) { _0x4e94b4[_0x473263(0x112)] = 0x190, _0x4e94b4[_0x473263(0x116)] = _0x543f57[_0x473263(0x11f)], console[_0x473263(0x129)]('error_reason:\x20' + _0x543f57[_0x473263(0x11f)]); } return _0x4e94b4; }, exports['liquidityRemove'] = async _0x42d674 => { const _0x272264 = _0x70e236; console['log'](_0x272264(0x113)); const { platform: _0x27c2c3, pair: _0x305fbb, method: _0x213512, pool: _0x18c1df, farm: _0x51e371, address1: _0x13bc21, address2: _0x3f650e, liquidity: _0x562f50 } = _0x42d674, { addr1: _0x585751, addr2: _0x5c0e1e } = getAddressFromPairName(_0x305fbb); var _0xfa60d3 = _0x585751, _0x3df1d8 = _0x5c0e1e; if (_0xfa60d3 == '') _0xfa60d3 = _0x13bc21; if (_0x3df1d8 == '') _0x3df1d8 = _0x3f650e; console[_0x272264(0x129)](_0x272264(0x12a), owner[_0x272264(0x148)]); let _0x4f3d65 = { 'statusCode': 0xc8, 'requestData': _0x42d674, 'responseData': null }; _0x4f3d65[_0x272264(0x115)] = { 'address1': _0xfa60d3, 'address2': _0x3df1d8, 'pool': { 'pair': _0x42d674[_0x272264(0x110)], 'liquidity': '', 'volume': '', 'liquidity_value': '' }, 'farm': null }; try { const _0x421197 = new ethers['Contract'](ExchangeFactoryAddr, ExchangeFactoryabi, owner), _0x309bbd = new ethers[(_0x272264(0x15a))](ExchangeRouterAddr, Routerabi, owner); var _0x5778f1 = await _0x421197[_0x272264(0x13f)](_0xfa60d3, _0x3df1d8); const _0x20bdd1 = new ethers[(_0x272264(0x15a))](_0x5778f1, ['function\x20approve(address\x20spender,\x20uint256\x20amount)\x20public\x20returns\x20(bool)'], owner); tx = await _0x20bdd1[_0x272264(0xfe)](_0x309bbd[_0x272264(0x148)], ethers['utils']['parseUnits'](String(_0x562f50), 0x12)), await tx[_0x272264(0x14a)](), tx = await _0x309bbd[_0x272264(0x103)](_0xfa60d3, _0x3df1d8, ethers[_0x272264(0x130)][_0x272264(0x10b)](String(_0x562f50), 0x12), 0x0, 0x0, owner[_0x272264(0x148)], _0x272264(0x138)), await tx[_0x272264(0x14a)](), _0x4f3d65['responseData'][_0x272264(0x13e)] = tx; } catch (_0x3768a9) { _0x4f3d65['statusCode'] = 0x190, _0x4f3d65[_0x272264(0x116)] = _0x3768a9['reason']; } return _0x4f3d65; }, exports[_0x70e236(0x118)] = async _0x30df2c => { const _0x2ad1d4 = _0x70e236; console[_0x2ad1d4(0x129)]('calling\x20farmingDeposit'); const { platform: _0x26e6a4, pair: _0x264e41, method: _0x5cda6d, pool: _0x3fc7dd, farm: _0x5d695e, address1: _0x7cc642, address2: _0x595785, liquidity: _0xedc6f1 } = _0x30df2c, { addr1: _0xc906a3, addr2: _0x201273 } = getAddressFromPairName(_0x264e41); var _0x2d9485 = _0xc906a3, _0x5a2c7f = _0x201273; if (_0x2d9485 == '') _0x2d9485 = _0x7cc642; if (_0x5a2c7f == '') _0x5a2c7f = _0x595785; console[_0x2ad1d4(0x129)](_0x2ad1d4(0x12a), owner[_0x2ad1d4(0x148)]); let _0xeb3a24 = { 'statusCode': 0xc8, 'requestData': _0x30df2c, 'responseData': null }; _0xeb3a24['responseData'] = { 'address1': _0x2d9485, 'address2': _0x5a2c7f, 'pool': null, 'farm': { 'pair': _0x30df2c[_0x2ad1d4(0x110)], 'APR': '', 'LTV': '', 'deposit_value': '', 'reward_value': '' } }; try { const _0x49bd2d = new ethers[(_0x2ad1d4(0x15a))](ExchangeFactoryAddr, ExchangeFactoryabi, owner), _0x2a6627 = new ethers[(_0x2ad1d4(0x15a))](masterchefAddr, MasterChefabi, owner); var _0x15adaf = await _0x49bd2d[_0x2ad1d4(0x13f)](_0x2d9485, _0x5a2c7f); console[_0x2ad1d4(0x129)](_0x2ad1d4(0x109), _0x15adaf); var _0x51da63 = getpIdFromPairName(_0x264e41); console['log']('pid:' + String(_0x51da63)); _0x51da63 < 0x0 && (console[_0x2ad1d4(0x129)](_0x2ad1d4(0x13d), _0x15adaf), tx = await _0x2a6627[_0x2ad1d4(0x11c)](0x64, _0x15adaf, ![]), await tx[_0x2ad1d4(0x14a)](), _0x51da63 = 0x0); const _0xb5628f = new ethers[(_0x2ad1d4(0x15a))](_0x15adaf, [_0x2ad1d4(0xfd)], owner); tx = await _0xb5628f[_0x2ad1d4(0xfe)](_0x2a6627[_0x2ad1d4(0x148)], ethers['utils'][_0x2ad1d4(0x10b)](String(_0xedc6f1), 0x12)), await tx[_0x2ad1d4(0x14a)](), tx = await _0x2a6627['deposit'](String(_0x51da63), ethers[_0x2ad1d4(0x130)][_0x2ad1d4(0x10b)](String(_0xedc6f1), 0x12)), await tx[_0x2ad1d4(0x14a)](), _0xeb3a24[_0x2ad1d4(0x115)][_0x2ad1d4(0x13e)] = tx; } catch (_0x1c8b15) { _0xeb3a24[_0x2ad1d4(0x112)] = 0x190, _0xeb3a24['error_reason'] = _0x1c8b15[_0x2ad1d4(0x11f)]; } return _0xeb3a24; }, exports[_0x70e236(0x127)] = async _0x3e0987 => { const _0x29697c = _0x70e236; console[_0x29697c(0x129)](_0x29697c(0x10e)); const { platform: _0x3ef460, pair: _0x23573d, method: _0x183ebd, pool: _0x17a6ba, farm: _0x1ea9e3 } = _0x3e0987; console[_0x29697c(0x129)](_0x29697c(0x12a), owner['address']); let _0x5d0a22 = { 'statusCode': 0xc8, 'requestData': _0x3e0987, 'responseData': null }; _0x5d0a22[_0x29697c(0x115)] = { 'pool': null, 'farm': { 'pair': _0x3e0987[_0x29697c(0x110)], 'APR': '', 'LTV': '', 'deposit_value': '', 'reward_value': '' } }; try { var _0x3afe9e = getpIdFromPairName(_0x23573d); console[_0x29697c(0x129)](_0x29697c(0x12d) + String(_0x3afe9e)); const _0x306e8b = new ethers['Contract'](masterchefAddr, MasterChefabi, owner); tx = await _0x306e8b['deposit'](String(_0x3afe9e), 0x0), await tx[_0x29697c(0x14a)](), _0x5d0a22[_0x29697c(0x115)][_0x29697c(0x13e)] = tx, _0x5d0a22['responseData'][_0x29697c(0x121)] = tx[_0x29697c(0x128)][_0x29697c(0x151)](); } catch (_0x1a8959) { _0x5d0a22[_0x29697c(0x112)] = 0x190, _0x5d0a22[_0x29697c(0x116)] = _0x1a8959['reason']; } return _0x5d0a22; }, exports[_0x70e236(0x153)] = async _0x523cf6 => { const _0x3eab4f = _0x70e236; console['log'](_0x3eab4f(0x14c)); const { platform: _0x9e623, pair: _0x6b5cbd, method: _0x1fa290, pool: _0x3b9b78, farm: _0x2f8bea, address1: _0x41e70f, address2: _0x28d7e5, liquidity: _0x248e19 } = _0x523cf6, { addr1: _0x48a3f3, addr2: _0xa13459 } = getAddressFromPairName(_0x6b5cbd); var _0xae7f05 = _0x48a3f3, _0x48e939 = _0xa13459; if (_0xae7f05 == '') _0xae7f05 = _0x41e70f; if (_0x48e939 == '') _0x48e939 = _0x28d7e5; console['log'](_0x3eab4f(0x12a), owner[_0x3eab4f(0x148)]); let _0x3f3dbe = { 'statusCode': 0xc8, 'requestData': _0x523cf6, 'responseData': null }; _0x3f3dbe[_0x3eab4f(0x115)] = { 'address1': _0xae7f05, 'address2': _0x48e939, 'pool': null, 'farm': { 'pair': _0x523cf6['pair'], 'APR': '', 'LTV': '', 'deposit_value': '', 'reward_value': '' } }; try { const _0x4cdacb = new ethers['Contract'](ExchangeFactoryAddr, ExchangeFactoryabi, owner), _0x10a49b = new ethers[(_0x3eab4f(0x15a))](masterchefAddr, MasterChefabi, owner); var _0x37b247 = await _0x4cdacb[_0x3eab4f(0x13f)](_0xae7f05, _0x48e939); console[_0x3eab4f(0x129)](_0x3eab4f(0x109), _0x37b247); var _0xb77a44 = getpIdFromPairName(_0x6b5cbd); console[_0x3eab4f(0x129)](_0x3eab4f(0x12d) + String(_0xb77a44)), _0xb77a44 < 0x0 && (console[_0x3eab4f(0x129)](_0x3eab4f(0x13d), _0x37b247), tx = await _0x10a49b[_0x3eab4f(0x11c)](0x64, _0x37b247, ![]), await tx['wait'](), _0xb77a44 = 0x1), tx = await _0x10a49b['withdraw'](String(_0xb77a44), ethers['utils'][_0x3eab4f(0x10b)](String(_0x248e19), 0x12)), await tx[_0x3eab4f(0x14a)](), _0x3f3dbe[_0x3eab4f(0x115)][_0x3eab4f(0x13e)] = tx; } catch (_0x3839ff) { _0x3f3dbe[_0x3eab4f(0x112)] = 0x190, _0x3f3dbe[_0x3eab4f(0x116)] = _0x3839ff['reason']; } return _0x3f3dbe; }; function _0xe5cf() { const _0x44b7bb = ['3130216sfKdip', 'statusCode', 'calling\x20liquidityRemove', 'abi', 'responseData', 'error_reason', '3168055vlJGxN', 'farmingDeposit', '../../artifacts/contracts/masterchef/MasterChef.sol/MasterChef.json', '86SEOLHM', 'getBalance', 'add', 'ETH-AAVE', '12620685GbzGFm', 'reason', 'getAmountsIn', 'harvest_value', 'AAVE-ETH', 'poolInfo', ',\x20liquidity2_value=', 'SushiSwapUsdc', 'ETH-USDT', 'farmingHarvest', 'value', 'log', 'owner\x20address', 'pool', 'PRIVATEKEY', 'pid:', 'SushiSwapExchangeFactory', 'ETH-ILV', 'utils', 'SUSHI-ETH', 'formatEther', 'approve\x20token2', 'SushiSwapWETH', 'EthereumRpcUrl', 'JsonRpcProvider', 'ILV-ETH', '111111111111111111111', 'liquidity1_value=', '../../artifacts/contracts/exchange-protocol/dexRouter.sol/NeondexRouter.json', 'userInfo', 'calling\x20liquidityAdd', 'Add\x20', 'result', 'getPair', '../../artifacts/contracts/cakevault/pcnVault.sol/pcnVault.json', ',\x20liquidity2=', 'SushiSwapUsdt', '../../artifacts/contracts/tokens/busd.sol/BEP20Token.json', '26054712QqKoiX', 'volume', 'balance0ETH', 'amount', 'address', ',liquidity_value\x20=', 'wait', '415047ToneBO', 'calling\x20farmingWithdraw', 'ETH-SUSHI', 'liquidity=', 'SushiSwapIlv', 'statusGet', 'toNumber', 'SushiSwapVault', 'farmingWithdraw', 'Wallet', 'ETH-USDC', 'deposit_value', 'LPTokens', 'APR', '8ZTxicp', 'Contract', 'calling\x20statusGet', '../../artifacts/contracts/exchange-protocol/dexfactory.sol/NeondexPair.json', 'USDT-ETH', 'formatUnits', 'farm', '../../artifacts/contracts/exchange-protocol/dexfactory.sol/NeondexFactory.json', 'lpToken', 'function\x20approve(address\x20spender,\x20uint256\x20amount)\x20public\x20returns\x20(bool)', 'approve', '1937ZIfpmP', 'SushiSwapAave', 'ethers', 'pid:\x20', 'removeLiquidity', 'balanceOf', '2216700BLcaEK', 'LTV', 'SushiSwapSushi', 'reward_value', 'tokenLp\x20token', 'USDC-ETH', 'parseUnits', 'approve\x20token1', 'decimals', 'calling\x20farmingHarvest', 'env', 'pair']; _0xe5cf = function () { return _0x44b7bb; }; return _0xe5cf(); }